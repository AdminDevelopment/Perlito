MiniPerl6 in Rakudo

- Rakudo should be able to execute MiniPerl6 directly. What do we need to fix in both sides?

MiniPerl6 in Lisp

- implement command line switches '-C' and '-B'

MiniPerl6 in Go

- implement 'use'

MiniPerl6 in Perl5

- generate 'my' variables for subroutine signatures;
  currently depends on autovivification

- Freeze the project, because it can be useful to bootstrap other VMs

Bootstrapping MiniPerl6 in Parrot

- finish OO, class variables

- fix die() parameter handling

- write "mp6 -Cparrot" in parrot (or mp6)

- Recompile it several times using itself, in order to check the stability of the Bootstrap

- Freeze the project, because it can be useful to bootstrap other VMs

Missing Backends

- Haskell

- MO in MP6 (MP6-2)

- Python

- Clojure

Missing Features

- detailed syntax errors

- type annotations - FIXED

- autoquote hash keys - FIXED

- double quote interpolation 

- operator precedence

- all statements need a semicolon - FIXED but hack

- 'use v5' is not supported
  (maybe not needed for MP6)

- no 'state', 'constant'

Missing Features of the Token sub-compiler

- no quantifiers

- no variable interpolation

Bugs

- ...
