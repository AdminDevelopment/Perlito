Eval.pm module

- add exceptions

Command line compiler (mp6.pl)

- implement -Clisp-bin (requires some changes in the lisp emitter)

Command line compiler (util/mp6.pl)

- build Ast cache using JSON (we currently use Perl5 Data::Dumper) or XML (Go has XML and JSON input)

- option to build binaries (Lisp, Java, Go) or modules (Perl, Lisp, Javascript)

- add "make" capabilities (test file dates, etc)

- does it need a config file? (lib location, make details)

- add '-B' option (execute)

MiniPerl6 in Rakudo

- Rakudo should be able to execute MiniPerl6 directly. What do we need to fix in both sides?

MiniPerl6 in Lisp

- fix warnings

MiniPerl6 in Go

(no issues at the moment)

MiniPerl6 in Perl5

(no issues at the moment)

MiniPerl6 in Parrot

- finish OO, class variables

- fix die() parameter handling

Missing Backends

- Haskell

- MO in MP6 

- Python

- Clojure

- v6.pm

Missing Features

- detailed syntax errors

- type annotations - FIXED

- autoquote hash keys - FIXED

- double quote variable and expression interpolation 

- operator precedence

- all statements need a semicolon - FIXED but hack

- 'use v5' is not supported
  (maybe not needed for MP6)

- no 'state', 'constant'

- debugger

Missing Features of the Token sub-compiler

- no quantifiers

- no variable interpolation

Nice to Have

- replace := with = everywhere. Alternately, impl both := and = in all backends

- impl 'while', 'elsif'

- 'mp6-format' script (see gofmt and perltidy)

- run some tests from the standard test suite

