# Do not edit this file - Generated by Perlito5 9.0
use v6;
{
    package main {
        Any;
        # use strict
        plan('tests' => 78);
        sub main::run_tests {
            my $foo = 'Now is the time for all good men to come to the aid of their country.';
            my $first = substr($foo, 0, index($foo, 'the'));
            is($first, 'Now is ');
            my $last = substr($foo, rindex($foo, 'the'), 100);
            is($last, 'their country.');
            $last = substr($foo, index($foo, 'Now'), 2);
            is($last, 'No');
            $last = substr($foo, rindex($foo, 'Now'), 2);
            is($last, 'No');
            $last = substr($foo, index($foo, '.'), 100);
            is($last, '.');
            $last = substr($foo, rindex($foo, '.'), 100);
            is($last, '.');
            is(index('ababa', 'a', -1), 0);
            is(index('ababa', 'a', 0), 0);
            is(index('ababa', 'a', 1), 2);
            is(index('ababa', 'a', 2), 2);
            is(index('ababa', 'a', 3), 4);
            is(index('ababa', 'a', 4), 4);
            is(index('ababa', 'a', 5), -1);
            is(rindex('ababa', 'a', -1), -1);
            is(rindex('ababa', 'a', 0), 0);
            is(rindex('ababa', 'a', 1), 0);
            is(rindex('ababa', 'a', 2), 2);
            is(rindex('ababa', 'a', 3), 2);
            is(rindex('ababa', 'a', 4), 4);
            is(rindex('ababa', 'a', 5), 4);
            is(index('abc', '', -1), 0);
            is(index('abc', '', 0), 0);
            is(index('abc', '', 1), 1);
            is(index('abc', '', 2), 2);
            is(index('abc', '', 3), 3);
            is(index('abc', '', 4), 3);
            is(rindex('abc', '', -1), 0);
            is(rindex('abc', '', 0), 0);
            is(rindex('abc', '', 1), 1);
            is(rindex('abc', '', 2), 2);
            is(rindex('abc', '', 3), 3);
            is(rindex('abc', '', 4), 3);
            $a = 'foo ' ~ chr(4660) ~ 'bar';
            is(index($a, chr(4660)), 4);
            is(index($a, 'bar'), 5);
            is(rindex($a, chr(4660)), 4);
            is(rindex($a, 'foo'), 0);
            {
                my @tests = (['', -1, -1, -1], ['foo', -1, -1, -1], [chr(0), 0, -1, -1], [chr(0) ~ chr(0), 0, 0, -1], [chr(0) ~ chr(0) ~ chr(0), 0, 0, 0], ['foo' ~ chr(0), 3, -1, -1], ['foo' ~ chr(0) ~ 'foo' ~ chr(0) ~ chr(0), 3, 7, -1]);
                for 1 .. 3 -> $l {
                    my $q = chr(0) x $l;
                    my $i = 0;
                    for @tests -> $test {
                        $i++;
                        my $str = $test[0];
                        my $res = $test[$l];
                        {
                            is(index($str, $q), $res, 'Find NUL character(s)')
                        }
                        my $test_str = 'is (index ("' ~ $str ~ '", "' ~ $q ~ '"), ' ~ $res ~ ', ' ~ '"Find NUL character(s)")';
                        $test_str =~ s!\0!\0!g;
                        eval($test_str);
                        die(${'@'})
                            if ${'@'}
                    }
                }
            }
        }
        run_tests()
            unless 0
    }
}

