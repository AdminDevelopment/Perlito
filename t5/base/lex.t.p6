# Do not edit this file - Generated by Perlito5 9.0
use v6;
{
    package main {
        print('1..46' ~ chr(10));
        $x = 'x';
        print('#1' ~ chr(9) ~ ':' ~ $x ~ ': eq :x:' ~ chr(10));
        if $x eq 'x' {
            print('ok 1' ~ chr(10))
        }
        else {
            print('not ok 1' ~ chr(10))
        }
        $x = @{'#'}[0];
        if $x eq '' {
            print('ok 2' ~ chr(10))
        }
        else {
            print('not ok 2' ~ chr(10))
        }
        $x = $#x;
        if $x eq -1 {
            print('ok 3' ~ chr(10))
        }
        else {
            print('not ok 3' ~ chr(10))
        }
        $x = chr(92);
        if length($x) == 1 {
            print('ok 4' ~ chr(10))
        }
        else {
            print('not ok 4' ~ chr(10))
        }
        eval('while (0) {' ~ chr(10) ~ '    print "foo' ~ chr(92) ~ 'n";' ~ chr(10) ~ '}' ~ chr(10) ~ '/^/ && (print "ok 5' ~ chr(92) ~ 'n");' ~ chr(10));
        eval('$foo{1} / 1;');
        if !${'@'} {
            print('ok 6' ~ chr(10))
        }
        else {
            print('not ok 6 ' ~ ${'@'} ~ chr(10))
        }
        eval('$foo = 123+123.4+123e4+123.4E5+123.4e+5+.12;');
        $foo = int($foo * 100 + .5);
        if $foo eq 2591024652 {
            print('ok 7' ~ chr(10))
        }
        else {
            print('not ok 7 :' ~ $foo ~ ':' ~ chr(10))
        }
        print('ok 8' ~ chr(10));
        $foo = 'ok 9';
        print($foo ~ chr(10));
        eval('print <<' ~ chr(39) ~ 'EOF' ~ chr(39) ~ ';' ~ chr(10) ~ 'ok 10' ~ chr(10) ~ 'EOF' ~ chr(10) ~ chr(10) ~ '$foo = ' ~ chr(39) ~ 'ok 11' ~ chr(39) ~ ';' ~ chr(10) ~ 'print <<EOF;' ~ chr(10) ~ '$foo' ~ chr(10) ~ 'EOF' ~ chr(10)), print(${'@'});
        print('ok 12 - make sure single quotes are honored ' ~ chr(92) ~ 'nnot ok' ~ chr(10) ~ 'ok 13' ~ chr(10));
        print('ok 14' ~ chr(10));
        print('ok 15' ~ chr(10));
        print('ok 16' ~ chr(10));
        print('ok 17' ~ chr(10));
        print('ok 18 - was the test for the deprecated use of bare << to mean <<""' ~ chr(10));
        print(join(' ', @(['foo' ~ chr(10)])) ~ chr(10) eq 'foo' ~ chr(10) ~ chr(10) ?? 'ok 19' ~ chr(10) !! 'not ok 19' ~ chr(10));
        print(join(' ', @(['foo' ~ chr(10)])) ~ chr(10) eq 'foo' ~ chr(10) ~ chr(10) ?? 'ok 20' ~ chr(10) !! 'not ok 20' ~ chr(10));
        $foo = FOO;
        $bar = BAR;
        %foo{$bar} = BAZ;
        @ary[0] = ABC;
        print(%foo{$bar} eq 'BAZ' ?? 'ok 21' ~ chr(10) !! 'not ok 21' ~ chr(10));
        print($foo ~ '{' ~ $bar ~ '}' eq 'FOO{BAR}' ?? 'ok 22' ~ chr(10) !! 'not ok 22' ~ chr(10));
        print(%foo{$bar} eq 'BAZ' ?? 'ok 23' ~ chr(10) !! 'not ok 23' ~ chr(10));
        print('FOO:' =~ m!$foo[:]! ?? 'ok 24' ~ chr(10) !! 'not ok 24' ~ chr(10));
        print('ABC' =~ m!^ARRAY(0x2f3df28)$! ?? 'ok 25' ~ chr(10) !! 'not ok 25' ~ chr(10));
        print('FOOZ' =~ m!^$foo[$A-Z]$! ?? 'ok 26' ~ chr(10) !! 'not ok 26' ~ chr(10));
        ($X, @X) = ('a', 'b', 'c', 'd');
        print('d' =~ m!^ARRAY(0x2f3e6a8)$! ?? 'ok 27' ~ chr(10) !! 'not ok 27' ~ chr(10));
        print('a1' !~ m!^ARRAY(0x2f40c28)$! ?? 'ok 28' ~ chr(10) !! 'not ok 28' ~ chr(10));
        print((('{{' ~ chr(92) ~ '(}' ~ '{' ~ chr(92) ~ ')}}') eq '{{' ~ chr(92) ~ '(}{' ~ chr(92) ~ ')}}') ?? 'ok 29' ~ chr(10) !! 'not ok 29' ~ chr(10));
        {
            my $CX = chr(24);
            my $CXY = chr(24) ~ 'Y';
            $($CX) = 17;
            $($CXY) = 23;
            if $(chr(24) ~ 'Y') != 23 {
                print('not ')
            }
            print('ok 30' ~ chr(10));
            if eval('$ {' ~ chr(24) ~ '}') != 17 or ${'@'} {
                print('not ')
            }
            print('ok 31' ~ chr(10));
            eval('$' ~ chr(17) ~ ' = 24');
            if ${'@'} or $(chr(17)) != 24 {
                print('not ')
            }
            print('ok 32' ~ chr(10));
            if $(chr(17)) != 24 {
                print('not ')
            }
            print('ok 33' ~ chr(10));
            if $(chr(24)) ~ 'Y' ne '17Y' {
                print('not ')
            }
            print('ok 34' ~ chr(10));
            sub main::XX () {
                6
            }
            $(chr(17) ~ chr(24) ~ 'X') = 119;
            $(chr(17)) = 5;
            $N = 5;
            if ($(chr(17)) ^ XX) != 3 {
                print('not ')
            }
            print('ok 35' ~ chr(10));
            package Someother;
            $(chr(17)) = 'Someother';
            $(chr(17) ~ 'uixote') = 'Someother 2';
            $(chr(13)) = 'Someother 3';
            package main;
            print('not ')
                unless $(chr(17)) eq 'Someother';
            print('ok 36' ~ chr(10));
            print('not ')
                unless $(chr(17) ~ 'uixote') eq 'Someother 2';
            print('ok 37' ~ chr(10));
            print('not ')
                unless $(chr(13)) eq 'Someother 3';
            print('ok 38' ~ chr(10))
        }
        {
            my $test = 39;
            eval('">@nosuch<" eq "><"') || print('# ' ~ ${'@'}, 'not ');
            print('ok ' ~ $test ~ chr(10));
            ++$test;
            eval('"fred@example.com" eq "fred.com"') || print('# ' ~ ${'@'}, 'not ');
            print('ok ' ~ $test ~ chr(10));
            ++$test;
            my @a = (1, 2, 3);
            print(+(('>' ~ join(' ', @a) ~ '<' eq '>1 2 3<') ?? '' !! 'not '), 'ok ' ~ $test ~ chr(10));
            ++$test;
            eval('@nosuch = (' ~ chr(39) ~ 'a' ~ chr(39) ~ ', ' ~ chr(39) ~ 'b' ~ chr(39) ~ ', ' ~ chr(39) ~ 'c' ~ chr(39) ~ '); ">@nosuch<" eq ">a b c<"') || print('# ' ~ ${'@'}, 'not ');
            print('ok ' ~ $test ~ chr(10));
            ++$test
        }
        sub xyz::foo {
            'bar'
        }
        my %str = ('foo' => 1, xyz::foo => 1, 'xyz::bar' => 1);
        my $test = 43;
        print((exists(%str{'foo'}) ?? '' !! 'not ') ~ 'ok ' ~ $test ~ chr(10));
        ++$test;
        print((exists(%str{'bar'}) ?? '' !! 'not ') ~ 'ok ' ~ $test ~ chr(10));
        ++$test;
        print((exists(%str{'xyz::bar'}) ?? '' !! 'not ') ~ 'ok ' ~ $test ~ chr(10));
        ++$test;
        @a = (1, 2, 3);
        print('not ')
            unless (@a[~~2] == 3);
        print('ok 46' ~ chr(10))
    }
}

