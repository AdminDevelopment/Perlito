# Do not edit this file - Generated by Perlito5 9.0
use v6;
{
    package main {
        # use strict
        # use feature
        sub main::x {
            return(4, 5)
        }
        sub main::k {
            my @x = (8, 9);
            @x
        }
        sub main::o {
            my @x = (8, 9);
            my @y = (11, 12);
            @x, @y
        }
        print('1..4' ~ chr(10));
        my $x = x();
        my($y) = x();
        my @x = x();
        my $expect = '5 / 4 / [4 5]';
        my $got = $x ~ ' / ' ~ $y ~ ' / [' ~ join(' ', @x) ~ ']';
        print('not ')
            if $expect ne $got;
        print('ok 1 - ' ~ $expect ~ ' : ' ~ $got ~ chr(10));
        $x = 6, 7;
        @x = 6, 7;
        $expect = '6 [6]';
        $got = $x ~ ' [' ~ join(' ', @x) ~ ']';
        print('not ')
            if $expect ne $got;
        print('ok 2 - ' ~ $expect ~ ' : ' ~ $got ~ chr(10));
        $x = k();
        @x = k();
        $expect = '2 [8 9]';
        $got = $x ~ ' [' ~ join(' ', @x) ~ ']';
        print('not ')
            if $expect ne $got;
        print('ok 3 - ' ~ $expect ~ ' : ' ~ $got ~ chr(10));
        $x = o();
        @x = o();
        $expect = '2 [8 9 11 12]';
        $got = $x ~ ' [' ~ join(' ', @x) ~ ']';
        print('not ')
            if $expect ne $got;
        print('ok 4 - ' ~ $expect ~ ' : ' ~ $got ~ chr(10))
    }
}

