// Do not edit this file - Generated by Perlito5 8.0
//
// lib/Perlito5/Javascript/Runtime.js
//
// Runtime for "Perlito" Perl5-in-Javascript
//
// AUTHORS
//
// Flavio Soibelmann Glock  fglock@gmail.com
//
// COPYRIGHT
//
// Copyright 2009, 2010, 2011, 2012 by Flavio Soibelmann Glock and others.
//
// This program is free software; you can redistribute it and/or modify it
// under the same terms as Perl itself.
//
// See http://www.perl.com/perl/misc/Artistic.html

if (typeof NAMESPACE !== 'object') {
    NAMESPACE = {};
    CLASS = {};

    var universal = function () {};
    CLASS.UNIVERSAL = new universal();
    CLASS.UNIVERSAL._ref_ = 'UNIVERSAL';
    CLASS.UNIVERSAL.isa = function (o, s) { return s == o._class_._ref_ };

    NAMESPACE.UNIVERSAL = new universal();

    var core = function () {};
    CLASS.CORE = new core();
    CLASS.CORE._ref_ = 'CORE';

    NAMESPACE.CORE = new core();
}

function make_package(pkg_name) {
    if (!CLASS.hasOwnProperty(pkg_name)) {
        var tmp = function () {};
        tmp.prototype = CLASS.UNIVERSAL;
        CLASS[pkg_name] = new tmp();
        CLASS[pkg_name]._ref_ = pkg_name;
        CLASS[pkg_name]._class_ = CLASS[pkg_name];  // XXX memory leak

        var tmp = function () {};
        tmp.prototype = NAMESPACE.CORE;
        NAMESPACE[pkg_name] = new tmp();
    }
}

function make_sub(pkg_name, sub_name, func) {
    NAMESPACE[pkg_name][sub_name] = CLASS[pkg_name][sub_name] = func;
}

if (typeof arguments === 'object') {
    List_ARGV = arguments;
}

function HashRef(o) {
    this._hash_ = o;
    this._ref_ = 'HASH';
    this.bool = function() { return 1 };
}

function ArrayRef(o) {
    this._array_ = o;
    this._ref_ = 'ARRAY';
    this.bool = function() { return 1 };
}

function ScalarRef(o) {
    this._scalar_ = o;
    this._ref_ = 'SCALAR';
    this.bool = function() { return 1 };
}

make_package('IO');
make_package('Perlito5::Runtime');
make_package('Perlito5::Grammar');

make_sub('IO', 'slurp', function(filename) {
    if (typeof readFile == 'function') {
        return readFile(filename);
    }
    if (typeof read == 'function') {
        // v8
        return read(filename);
    }
    CLASS.CORE.die("IO.slurp() not implemented");
});

string = function(o) {
    if (o == null) {
        return "";
    }
    if (typeof o === 'object' && (o instanceof Array)) {
        var out = [];
        for (var i = 0; i < o.length; i++) {
            out.push(string(o[i]));
        }
        return out.join(" ");
    }
    if (typeof o.string === 'function') {
        return o.string();
    }
    if (typeof o !== 'string') {
        return "" + o;
    }
    return o;
};

num = function(o) {
    if (o == null) {
        return 0;
    }
    if (typeof o === 'object' && (o instanceof Array)) {
        return o.length;
    }
    if (typeof o.num === 'function') {
        return o.num();
    }
    if (typeof o !== 'number') {
        return parseFloat(string(o));
    }
    return o;
};

add = function(o1, o2) {
    return num(o1) + num(o2)
};

bool = function(o) {
    if (o == null) {
        return o;
    }
    if (typeof o === 'boolean') {
        return o;
    }
    if (typeof o === 'number') {
        return o;
    }
    if (typeof o === 'string') {
        return o != '' && o != '0';
    }
    if (o._class_ && typeof o._class_.bool === 'function') {
        return o._class_.bool(o);
    }
    if (typeof o.bool === 'function') {
        return o.bool();
    }
    if (typeof o.length === 'number') {
        return o.length;
    }
    for (var i in o) {
        return true;
    }
    return false;
};

and = function(a, fb) {
    if (bool(a)) {
        return fb();
    }
    return false;
};

or = function(a, fb) {
    if (bool(a)) {
        return a;
    }
    return fb();
};

defined_or = function(a, fb) {
    if (a == null) {
        return fb();
    }
    return a;
};

str_replicate = function(o, n) {
    n = num(n);
    return n ? Array(n + 1).join(o) : "";
};

make_sub('Perlito5::Grammar', 'word', function(v_grammar, v_str, v_pos) {
    return NAMESPACE.CORE.bless(
        new HashRef({
            str: v_str,
            from: v_pos,
            to: v_pos + 1,
            bool: v_str.substr(v_pos, 1).match(/\w/) != null,
        }),
        CLASS['Perlito5::Match']
    );
});

make_sub('Perlito5::Grammar', 'digit', function(v_grammar, v_str, v_pos) {
    return NAMESPACE.CORE.bless(
        new HashRef({
            str:  v_str,
            from: v_pos,
            to:   v_pos + 1,
            bool: v_str.substr(v_pos, 1).match(/\d/) != null,
        }),
        CLASS['Perlito5::Match']
    );
});

make_sub('Perlito5::Grammar', 'space', function(v_grammar, v_str, v_pos) {
    return NAMESPACE.CORE.bless(
        new HashRef({
            str:  v_str,
            from: v_pos,
            to:   v_pos + 1,
            bool: v_str.substr(v_pos, 1).match(/\s/) != null,
        }),
        CLASS['Perlito5::Match']
    );
});

function perl5_to_js( source ) {
    // say( "source: [" + source + "]" );
    match = CLASS['Perlito5::Grammar'].exp_stmts(CLASS['Perlito5::Grammar'], source, 0);

    ast = NAMESPACE.CORE.bless(
        new HashRef({
            block:  NAMESPACE.CORE.bless(
                        new HashRef({
                            stmts:   match._class_.flat(match),
                        }),
                        CLASS['Lit::Block']
                    ),
        }),
        CLASS.Do
    );

    // CORE.say( "ast: [" + perl(ast) + "]" );
    js_code = ast._class_.emit_javascript(ast);
    // CORE.say( "js-source: [" + js_code + "]" );
    return js_code;
}


//
// lib/Perlito5/Javascript/CORE.js
//
// CORE functions for "Perlito" Perl5-in-Javascript
//
// AUTHORS
//
// Flavio Soibelmann Glock  fglock@gmail.com
//
// COPYRIGHT
//
// Copyright 2009, 2010, 2011, 2012 by Flavio Soibelmann Glock and others.
//
// This program is free software; you can redistribute it and/or modify it
// under the same terms as Perl itself.
//
// See http://www.perl.com/perl/misc/Artistic.html

var CORE = NAMESPACE.CORE;

var _print_buf = "";
CORE.print = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var i;
    for (i = 0; i < List__.length; i++) {
        var s = string(List__[i]);
        if (s.substr(s.length - 2, 2) == "\n") {
            print(_print_buf + s.substr(0, s.length - 2));
            _print_buf = "";
        }
        else if (s.substr(s.length - 1, 1) == "\n") {
            print(_print_buf + s.substr(0, s.length - 1));
            _print_buf = "";
        }
        else {
            _print_buf = _print_buf + s;
        }
    }
    return true;
};

CORE.say = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var i;
    for (i = 0; i < List__.length; i++) {
        CORE.print(List__[i]);
    }
    return CORE.print("\n");
};

CORE.die = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var i;
    var s = '';
    for (i = 0; i < List__.length; i++) {
        s = s + string(List__[i]);
    }
    throw(new Error("Died: " + s));
};

CORE.warn = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var i;
    var s = '';
    for (i = 0; i < List__.length; i++) {
        s = s + string(List__[i]);
    }
    CORE.print("Warning: " + s + "\n");
};

CORE.bless = function(o, pkg_name) {
    if (typeof pkg_name === 'object') {
        // bless {}, Class
        o._class_ = pkg_name;
        return o;
    }
    if (!CLASS.hasOwnProperty(pkg_name)) {
        make_package(pkg_name);
    }
    o._class_ = CLASS[pkg_name];
    return o;
};

CORE.chr = function(o) {
    return String.fromCharCode(num(o));
};

CORE.ord = function(o) {
    return string(o).charCodeAt(0);
};

CORE.substr = function(expr, offset, length, replacement) {
    return string(expr).substr(offset, length);
};

CORE.scalar = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var o = List__[0];
    if (o == null) {
        return 1;
    };
    if (typeof o.scalar === 'function') {
        return o.scalar();
    }
    if (typeof o === 'object' && (o instanceof Array)) {
        return o.length;
    }
    switch (typeof o) {
        case "string": return 1;
        case "function": return 1;
        case "number": return 1;
        case "boolean": return 1;
    }
    var l = 0;
    for (var i in o) {
        l++;
    }
    return l;
};

CORE.values = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var o = List__[0];
    if (o == null) {
        return [];
    };
    if (typeof o.values === 'function') {
        return o.values();
    }
    var out = [];
    for (var i in o) {
        out.push(o[i]);
    }
    return out;
};

CORE.keys = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var o = List__[0];
    if (o == null) {
        return [];
    }
    if (typeof o.keys === 'function') {
        return o.keys();
    }
    var out = [];
    for (var i in o) {
        out.push(i);
    }
    return out;
};

CORE.pop = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var o = List__[0];
    if (o.length == null) {
        return null;
    }
    return o.pop();
};

CORE.shift = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var o = List__[0];
    if (o.length == null) {
        return null;
    }
    return o.shift();
};

CORE.push = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var o = List__[0];
    var v = List__[1];
    return o.push(v);
};

CORE.unshift = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var o = List__[0];
    var v = List__[1];
    return o.unshift(v);
};

CORE.join = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var s = List__[0];
    var o = List__[1];
    return o.join(s);
};

CORE.index = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var o = List__[0];
    var s = List__[1];
    try {
        return o.indexOf(s);
    }
    catch(err) {
        return -1;
    }
};

CORE.length = function() {
    var List__ = Array.prototype.slice.call(arguments);
    var o = List__[0];
    if (typeof o.string === 'function') {
        return o.string().length;
    }
    return o.length;
};

CORE.ref = function(o) {
    var List__ = Array.prototype.slice.call(arguments);
    var o = List__[0];
    if (o == null) {
        return '';
    }
    if (o._class_ && typeof o._class_._ref_ === 'string') {
        // blessed reference
        return o._class_._ref_;
    }
    if (typeof o._ref_ === 'string') {
        // un-blessed reference
        return o._ref_;
    }
    if (typeof o === 'object' && (o instanceof Array)) {
        return 'ARRAY';
    }
    if (typeof o === 'function') {
        return 'CODE';
    }
    return '';
};


make_package("main");
(function () {
  var __PACKAGE__ = "main";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_package("Perlito5");
(function () {
  var __PACKAGE__ = "Perlito5";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "compile_p5_to_js", function () {
			var List__ = Array.prototype.slice.call(arguments);
			try {
				var v_s = null;

				var v_ast = null;

				(v_s = v__NAMESPACE.shift(List__));
				(v_ast = CLASS["Perlito5::Grammar"]._class_.exp_stmts(CLASS["Perlito5::Grammar"],v_s,0));
				return(CLASS["CompUnit"]._class_.new(CLASS["CompUnit"],'name', 'main','body', v_ast._class_.flat(v_ast))._class_.emit_javascript(CLASS["CompUnit"]._class_.new(CLASS["CompUnit"],'name', 'main','body', v_ast._class_.flat(v_ast))));;
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		});
make_package("main");
(function () {
  var __PACKAGE__ = "main";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
			// use v5
;
make_package("Perlito5::Match");
(function () {
  var __PACKAGE__ = "Perlito5::Match";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "from", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['from']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "to", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['to']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "str", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['str']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "bool", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['bool']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "capture", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['capture']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "flat", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						(v_self = List__[0]);
						if ( bool((v_self._hash_['bool'])) ) { return (function () {
							if ( bool(((v_self._hash_['capture'] != null))) ) { (function () {
								throw(v_self._hash_['capture']);;
							})(); };
							throw(v__NAMESPACE.substr(v_self._hash_['str'], v_self._hash_['from'], ((v_self._hash_['to'] - v_self._hash_['from']))));
						})(); }
						else { return (function () {
							throw('');
						})(); };;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
})()
;
		// use Perlito5::Match
;
make_package("main");
(function () {
  var __PACKAGE__ = "main";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
			// use v5
;
make_package("CompUnit");
(function () {
  var __PACKAGE__ = "CompUnit";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "name", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['name']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "body", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['body']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Val::Int");
(function () {
  var __PACKAGE__ = "Val::Int";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "int", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['int']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Val::Num");
(function () {
  var __PACKAGE__ = "Val::Num";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "num", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['num']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Val::Buf");
(function () {
  var __PACKAGE__ = "Val::Buf";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "buf", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['buf']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Lit::Block");
(function () {
  var __PACKAGE__ = "Lit::Block";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "sig", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['sig']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "stmts", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['stmts']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Lit::Array");
(function () {
  var __PACKAGE__ = "Lit::Array";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "array1", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['array1']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Lit::Hash");
(function () {
  var __PACKAGE__ = "Lit::Hash";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "hash1", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['hash1']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Index");
(function () {
  var __PACKAGE__ = "Index";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "obj", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['obj']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "index_exp", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['index_exp']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Lookup");
(function () {
  var __PACKAGE__ = "Lookup";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "obj", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['obj']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "index_exp", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['index_exp']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Var");
(function () {
  var __PACKAGE__ = "Var";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "sigil", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['sigil']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "namespace", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['namespace']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "name", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['name']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Proto");
(function () {
  var __PACKAGE__ = "Proto";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "name", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['name']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Call");
(function () {
  var __PACKAGE__ = "Call";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "invocant", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['invocant']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "method", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['method']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "arguments", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['arguments']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Apply");
(function () {
  var __PACKAGE__ = "Apply";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "code", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['code']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "arguments", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['arguments']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "namespace", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['namespace']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("If");
(function () {
  var __PACKAGE__ = "If";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "cond", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['cond']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "body", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['body']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "otherwise", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['otherwise']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("While");
(function () {
  var __PACKAGE__ = "While";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "init", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['init']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "cond", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['cond']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "continue", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['continue']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "body", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['body']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("For");
(function () {
  var __PACKAGE__ = "For";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "cond", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['cond']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "body", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['body']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Decl");
(function () {
  var __PACKAGE__ = "Decl";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "decl", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['decl']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "type", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['type']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "var", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['var']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Sig");
(function () {
  var __PACKAGE__ = "Sig";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "invocant", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['invocant']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "positional", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['positional']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "named", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['named']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Sub");
(function () {
  var __PACKAGE__ = "Sub";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "name", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['name']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "sig", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['sig']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "block", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['block']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Do");
(function () {
  var __PACKAGE__ = "Do";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "block", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['block']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Use");
(function () {
  var __PACKAGE__ = "Use";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "mod", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						return(List__[0]._hash_['mod']);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
})()
;
make_package("main");
(function () {
  var __PACKAGE__ = "main";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
			// use v5
;
			// use Perlito5::AST
;
make_package("Javascript");
(function () {
  var __PACKAGE__ = "Javascript";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
					var Hash_safe_char = {};

make_sub(__PACKAGE__, "tab", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_level = null;

							(v_level = v__NAMESPACE.shift(List__));
							return(str_replicate((String.fromCharCode(9)), v_level));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					(Hash_safe_char = (function (_h) { var _tmp = {}; for (var _i in _h) { _tmp[_i] = _h[_i]; }; return _tmp; })( ((function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['$']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['%']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['@']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['&']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['_']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[',']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['.']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[':']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[';']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['-']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['+']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['*']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[' ']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['(']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[')']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['<']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['=']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['>']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['[']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[']']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['{']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['|']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['}']  = 1); })();
	return((new HashRef(Hash_a)));
})())._hash_));
make_sub(__PACKAGE__, "escape_string", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_s = null;

							var List_out = [];

							var v_tmp = null;

							(v_s = v__NAMESPACE.shift(List__));
							(v_tmp = '');
							if ( bool((v_s == '')) ) { (function () {
								throw((String.fromCharCode(39) + String.fromCharCode(39)));;
							})(); };
							(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_i) {
								var v_c = null;

								(v_c = v__NAMESPACE.substr(v_s, v_i, 1));
								if ( bool((or(or(or((and((v_c >= 'a'), function () { return (v_c <= 'z'); })), function () { return (and((v_c >= 'A'), function () { return (v_c <= 'Z'); })); }), function () { return (and((v_c >= '0'), function () { return (v_c <= '9'); })); }), function () { return (Hash_safe_char).hasOwnProperty(v_c); }))) ) { (function () {
									(v_tmp = (string(v_tmp) + string(v_c)));;
								})(); }
								else { (function () {
									if ( bool((v_tmp != '')) ) { (function () {
										v__NAMESPACE.push(List_out, (String.fromCharCode(39) + string(v_tmp) + String.fromCharCode(39)));;
									})(); };
									v__NAMESPACE.push(List_out, ('String.fromCharCode(' + string(v__NAMESPACE.ord(v_c)) + string((')'))));
									(v_tmp = '');;
								})(); };; })(a_[i_]) } })(Array.prototype.slice.call((function (a) { for (var i=0, l=(v__NAMESPACE.length(v_s) - 1); i<=l; ++i){ a.push(i) }; return a })([])));
							if ( bool((v_tmp != '')) ) { (function () {
								v__NAMESPACE.push(List_out, (String.fromCharCode(39) + string(v_tmp) + String.fromCharCode(39)));;
							})(); };
							throw(v__NAMESPACE.join(' + ', List_out));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "autovivify", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_ast = null;

							var v_type = null;

							var v_str_init = null;

							(v_ast = v__NAMESPACE.shift(List__));
							(v_type = v__NAMESPACE.shift(List__));
							(v_str_init = (String.fromCharCode(39) + String.fromCharCode(39)));
							if ( bool((v_type == 'HASH')) ) { (function () {
								(v_str_init = '{}');;
							})(); };
							if ( bool((v_type == 'ARRAY')) ) { (function () {
								(v_str_init = '[]');;
							})(); };
							if ( bool((v_type == 'HASHREF')) ) { (function () {
								(v_str_init = 'new HashRef({})');;
							})(); };
							if ( bool((v_type == 'ARRAYREF')) ) { (function () {
								(v_str_init = '[]');;
							})(); };
							if ( bool((v_ast._class_.isa(v_ast,'Var'))) ) { (function () {
								if ( bool((and((v_type == 'HASH'), function () { return (v_ast._class_.sigil(v_ast) == '$'); }))) ) { (function () {
									var v_var_js = null;

									(v_ast = CLASS["Var"]._class_.new(CLASS["Var"],'sigil', '%','namespace', v_ast._class_.namespace(v_ast),'name', v_ast._class_.name(v_ast)));
									(v_var_js = v_ast._class_.emit_javascript(v_ast));
									throw((function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, ('if (' + string(v_var_js) + ' == null) { ' + string(v_var_js) + ' = ' + string(v_str_init) + ' }; '));
	return(List_a);
})());;
								})(); }
								else { (function () {
									if ( bool((and((v_type == 'ARRAY'), function () { return (v_ast._class_.sigil(v_ast) == '$'); }))) ) { (function () {
										var v_var_js = null;

										(v_ast = CLASS["Var"]._class_.new(CLASS["Var"],'sigil', '@','namespace', v_ast._class_.namespace(v_ast),'name', v_ast._class_.name(v_ast)));
										(v_var_js = v_ast._class_.emit_javascript(v_ast));
										throw((function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, ('if (' + string(v_var_js) + ' == null) { ' + string(v_var_js) + ' = ' + string(v_str_init) + ' }; '));
	return(List_a);
})());;
									})(); }
									else { (function () {
										if ( bool((and((v_type == 'HASHREF'), function () { return (v_ast._class_.sigil(v_ast) == '$'); }))) ) { (function () {
											var v_var_js = null;

											(v_var_js = v_ast._class_.emit_javascript(v_ast));
											throw((function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, ('if (' + string(v_var_js) + ' == null) { ' + string(v_var_js) + ' = ' + string(v_str_init) + ' }; '));
	return(List_a);
})());;
										})(); }
										else { (function () {
											if ( bool((and((v_type == 'ARRAYREF'), function () { return (v_ast._class_.sigil(v_ast) == '$'); }))) ) { (function () {
												var v_var_js = null;

												(v_var_js = v_ast._class_.emit_javascript(v_ast));
												throw((function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, ('if (' + string(v_var_js) + ' == null) { ' + string(v_var_js) + ' = ' + string(v_str_init) + ' }; '));
	return(List_a);
})());;
											})(); };;
										})(); };;
									})(); };;
								})(); };;
							})(); }
							else { (function () {
								if ( bool((v_ast._class_.isa(v_ast,'Call'))) ) { (function () {
									var v_var_js = null;

									(v_var_js = v_ast._class_.emit_javascript(v_ast));
									if ( bool(((v_ast._class_.method(v_ast) == 'postcircumfix:<[ ]>'))) ) { (function () {
										throw((function () {
	var List_a = [];

	var List_v = [];

	(List_v = ((Array.prototype.slice.call((v__NAMESPACE.autovivify(v_ast._class_.invocant(v_ast), 'ARRAYREF'))))).slice());
	(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_x) {
		v__NAMESPACE.push(List_a, List_v[v_x]);; })(a_[i_]) } })(Array.prototype.slice.call((function (a) { for (var i=0, l=((v__NAMESPACE.scalar(List_v) - 1)); i<=l; ++i){ a.push(i) }; return a })([])));
	v__NAMESPACE.push(List_a, ('if (' + string(v_var_js) + ' == null) { ' + string(v_var_js) + ' = ' + string(v_str_init) + ' }; '));
	return(List_a);
})());;
									})(); }
									else { (function () {
										if ( bool(((v_ast._class_.method(v_ast) == 'postcircumfix:<{ }>'))) ) { (function () {
											throw((function () {
	var List_a = [];

	var List_v = [];

	(List_v = ((Array.prototype.slice.call((v__NAMESPACE.autovivify(v_ast._class_.invocant(v_ast), 'HASHREF'))))).slice());
	(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_x) {
		v__NAMESPACE.push(List_a, List_v[v_x]);; })(a_[i_]) } })(Array.prototype.slice.call((function (a) { for (var i=0, l=((v__NAMESPACE.scalar(List_v) - 1)); i<=l; ++i){ a.push(i) }; return a })([])));
	v__NAMESPACE.push(List_a, ('if (' + string(v_var_js) + ' == null) { ' + string(v_var_js) + ' = ' + string(v_str_init) + ' }; '));
	return(List_a);
})());;
										})(); };;
									})(); };;
								})(); }
								else { (function () {
									if ( bool((v_ast._class_.isa(v_ast,'Index'))) ) { (function () {
										var v_var_js = null;

										var v_type = null;

										var v_var = null;

										(v_var_js = v_ast._class_.emit_javascript(v_ast));
										(v_var = v_ast._class_.obj(v_ast));
										if ( bool((and(v_var._class_.isa(v_var,'Var'), function () { return (v_var._class_.sigil(v_var) == '$'); }))) ) { (function () {
											(v_type = 'ARRAY');;
										})(); }
										else { (function () {
											(v_type = 'ARRAYREF');;
										})(); };
										throw((function () {
	var List_a = [];

	var List_v = [];

	(List_v = ((Array.prototype.slice.call((v__NAMESPACE.autovivify(v_ast._class_.obj(v_ast), v_type))))).slice());
	(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_x) {
		v__NAMESPACE.push(List_a, List_v[v_x]);; })(a_[i_]) } })(Array.prototype.slice.call((function (a) { for (var i=0, l=((v__NAMESPACE.scalar(List_v) - 1)); i<=l; ++i){ a.push(i) }; return a })([])));
	v__NAMESPACE.push(List_a, ('if (' + string(v_var_js) + ' == null) { ' + string(v_var_js) + ' = ' + string(v_str_init) + ' }; '));
	return(List_a);
})());;
									})(); }
									else { (function () {
										if ( bool((v_ast._class_.isa(v_ast,'Lookup'))) ) { (function () {
											var v_var_js = null;

											var v_type = null;

											var v_var = null;

											(v_var_js = v_ast._class_.emit_javascript(v_ast));
											(v_var = v_ast._class_.obj(v_ast));
											if ( bool((and(v_var._class_.isa(v_var,'Var'), function () { return (v_var._class_.sigil(v_var) == '$'); }))) ) { (function () {
												(v_type = 'HASH');;
											})(); }
											else { (function () {
												(v_type = 'HASHREF');;
											})(); };
											throw((function () {
	var List_a = [];

	var List_v = [];

	(List_v = ((Array.prototype.slice.call((v__NAMESPACE.autovivify(v_var, v_type))))).slice());
	(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_x) {
		v__NAMESPACE.push(List_a, List_v[v_x]);; })(a_[i_]) } })(Array.prototype.slice.call((function (a) { for (var i=0, l=((v__NAMESPACE.scalar(List_v) - 1)); i<=l; ++i){ a.push(i) }; return a })([])));
	v__NAMESPACE.push(List_a, ('if (' + string(v_var_js) + ' == null) { ' + string(v_var_js) + ' = ' + string(v_str_init) + ' }; '));
	return(List_a);
})());;
										})(); };;
									})(); };;
								})(); };;
							})(); };
							throw((function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})());;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "to_str", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_cond = null;

							(v_cond = v__NAMESPACE.shift(List__));
							if ( bool((v_cond._class_.isa(v_cond,'Val::Buf'))) ) { return (function () {
								throw(v_cond._class_.emit_javascript(v_cond));
							})(); }
							else { return (function () {
								throw(('string(' + string(v_cond._class_.emit_javascript(v_cond)) + ')'));
							})(); };;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "to_num", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_cond = null;

							(v_cond = v__NAMESPACE.shift(List__));
							if ( bool((or(v_cond._class_.isa(v_cond,'Val::Int'), function () { return v_cond._class_.isa(v_cond,'Val::Num'); }))) ) { return (function () {
								throw(v_cond._class_.emit_javascript(v_cond));
							})(); }
							else { return (function () {
								throw(('num(' + string(v_cond._class_.emit_javascript(v_cond)) + ')'));
							})(); };;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "to_bool", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_cond = null;

		(v_cond = v__NAMESPACE.shift(List__));
		if ( bool((or(or(or(or((v_cond._class_.isa(v_cond,'Val::Int')), function () { return (v_cond._class_.isa(v_cond,'Val::Num')); }), function () { return (and(v_cond._class_.isa(v_cond,'Apply'), function () { return (v_cond._class_.code(v_cond) == 'infix:<||>'); })); }), function () { return (and(v_cond._class_.isa(v_cond,'Apply'), function () { return (v_cond._class_.code(v_cond) == 'infix:<&&>'); })); }), function () { return (and(v_cond._class_.isa(v_cond,'Apply'), function () { return (v_cond._class_.code(v_cond) == 'prefix:<' + String.fromCharCode(33) + '>'); })); }))) ) { return (function () {
			throw(v_cond._class_.emit_javascript(v_cond));
		})(); }
		else { return (function () {
			throw(('bool(' + string(v_cond._class_.emit_javascript(v_cond)) + ')'));
		})(); };;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Perlito5::Javascript::LexicalBlock");
(function () {
  var __PACKAGE__ = "Perlito5::Javascript::LexicalBlock";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "new", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_class = null;

							(v_class = v__NAMESPACE.shift(List__));
							return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "block", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._hash_['block']);;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "needs_return", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._hash_['needs_return']);;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "top_level", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._hash_['top_level']);;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var List_block = [];

		var List_str = [];

		var v_last_statement = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		if ( bool((v_self._hash_[('top_level')])) ) { (function () {
			var v_block = null;

			(v_block = CLASS["Perlito5::Javascript::LexicalBlock"]._class_.new(CLASS["Perlito5::Javascript::LexicalBlock"],'block', v_self._class_.block(v_self),'needs_return', v_self._class_.needs_return(v_self),'top_level', 0));
			throw((string(NAMESPACE["Javascript"].tab(v_level)) + 'try {' + string((String.fromCharCode(10))) + string(v_block._class_.emit_javascript_indented(v_block,add(v_level, 1))) + ';' + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(v_level)) + '}' + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(v_level)) + 'catch(err) {' + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(add(v_level, 1))) + 'if ( err instanceof Error ) {' + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(add(v_level, 2))) + 'throw(err);' + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(add(v_level, 1))) + '}' + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(add(v_level, 1))) + 'else {' + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(add(v_level, 2))) + 'return(err);' + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(add(v_level, 1))) + '}' + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(v_level)) + '}'));;
		})(); };
		(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v__) {
			if ( bool(((v__ != null))) ) { (function () {
				v__NAMESPACE.push(List_block, v__);;
			})(); };; })(a_[i_]) } })(Array.prototype.slice.call((v_self._hash_[('block')])));
		if ( bool((( bool(List_block) ? false : true))) ) { (function () {
			throw((string(NAMESPACE["Javascript"].tab(v_level)) + 'null;'));;
		})(); };
		(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_decl) {
			if ( bool((and(v_decl._class_.isa(v_decl,'Decl'), function () { return (v_decl._class_.decl(v_decl) == 'my'); }))) ) { (function () {
				v__NAMESPACE.push(List_str, (string(NAMESPACE["Javascript"].tab(v_level)) + string(v_decl._class_.emit_javascript_init(v_decl))));;
			})(); };
			if ( bool((and(v_decl._class_.isa(v_decl,'Apply'), function () { return (v_decl._class_.code(v_decl) == 'infix:<=>'); }))) ) { (function () {
				var v_var = null;

				(v_var = v_decl._class_.arguments(v_decl)[0]);
				if ( bool((and(v_var._class_.isa(v_var,'Decl'), function () { return (v_var._class_.decl(v_var) == 'my'); }))) ) { (function () {
					v__NAMESPACE.push(List_str, (string(NAMESPACE["Javascript"].tab(v_level)) + string(v_var._class_.emit_javascript_init(v_var))));;
				})(); };;
			})(); };; })(a_[i_]) } })(List_block);
		if ( bool((v_self._hash_[('needs_return')])) ) { (function () {
			(v_last_statement = v__NAMESPACE.pop(List_block));;
		})(); };
		(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_decl) {
			if ( bool((( bool((and(v_decl._class_.isa(v_decl,'Decl'), function () { return (v_decl._class_.decl(v_decl) == 'my'); }))) ? false : true))) ) { (function () {
				v__NAMESPACE.push(List_str, (string(v_decl._class_.emit_javascript_indented(v_decl,v_level)) + ';'));;
			})(); };; })(a_[i_]) } })(List_block);
		if ( bool((and(v_self._hash_[('needs_return')], function () { return v_last_statement; }))) ) { (function () {
			if ( bool((v_last_statement._class_.isa(v_last_statement,'If'))) ) { (function () {
				var v_cond = null;

				var v_body = null;

				var v_otherwise = null;

				(v_cond = v_last_statement._class_.cond(v_last_statement));
				(v_body = v_last_statement._class_.body(v_last_statement));
				(v_otherwise = v_last_statement._class_.otherwise(v_last_statement));
				if ( bool((and(v_cond._class_.isa(v_cond,'Var'), function () { return (v_cond._class_.sigil(v_cond) == '@'); }))) ) { (function () {
					(v_cond = CLASS["Apply"]._class_.new(CLASS["Apply"],'code', 'prefix:<@>','arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_cond);
	return(List_a);
})()));;
				})(); };
				(v_body = CLASS["Perlito5::Javascript::LexicalBlock"]._class_.new(CLASS["Perlito5::Javascript::LexicalBlock"],'block', v_body._class_.stmts(v_body),'needs_return', 1));
				v__NAMESPACE.push(List_str, (string(NAMESPACE["Javascript"].tab(v_level)) + 'if ( ' + string(NAMESPACE["Javascript"].to_bool(v_cond)) + ' ) { return (function () {' + string((String.fromCharCode(10))) + string(v_body._class_.emit_javascript_indented(v_body,add(v_level, 1))) + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(v_level)) + '})(); }'));
				if ( bool((v_otherwise)) ) { (function () {
					(v_otherwise = CLASS["Perlito5::Javascript::LexicalBlock"]._class_.new(CLASS["Perlito5::Javascript::LexicalBlock"],'block', v_otherwise._class_.stmts(v_otherwise),'needs_return', 1));
					v__NAMESPACE.push(List_str, (string(NAMESPACE["Javascript"].tab(v_level)) + 'else { return (function () {' + string((String.fromCharCode(10))) + string(v_otherwise._class_.emit_javascript_indented(v_otherwise,add(v_level, 1))) + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(v_level)) + '})(); }'));;
				})(); };;
			})(); }
			else { (function () {
				if ( or(or(and(v_last_statement._class_.isa(v_last_statement,'Apply'), function () { return (v_last_statement._class_.code(v_last_statement) == 'return'); }), function () { return v_last_statement._class_.isa(v_last_statement,'For'); }), function () { return v_last_statement._class_.isa(v_last_statement,'While'); }) ) { (function () {
					v__NAMESPACE.push(List_str, v_last_statement._class_.emit_javascript_indented(v_last_statement,v_level));;
				})(); }
				else { (function () {
					v__NAMESPACE.push(List_str, (string(NAMESPACE["Javascript"].tab(v_level)) + 'return(' + string(v_last_statement._class_.emit_javascript(v_last_statement)) + ')'));;
				})(); };;
			})(); };;
		})(); };
		throw((string(v__NAMESPACE.join((String.fromCharCode(10)), List_str)) + ';'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("CompUnit");
(function () {
  var __PACKAGE__ = "CompUnit";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_javascript_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "emit_javascript_indented", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							var v_level = null;

							var List_body = [];

							var v_i = null;

							var v_class_name = null;

							var v_str = null;

							(v_self = List__[0]);
							(v_level = List__[1]);
							(v_i = 0);
							for ( ; bool(((v_i <= v__NAMESPACE.scalar((v_self._hash_[('body')])))));  ) { (function () {
								var v_stmt = null;

								(v_stmt = v_self._hash_[('body')][v_i]);
								if ( bool((and((v__NAMESPACE.ref(v_stmt) == 'Apply'), function () { return (v_stmt._class_.code(v_stmt) == 'package'); }))) ) { (function () {
									var v_name = null;

									var List_stmts = [];

									(v_name = v_stmt._class_.namespace(v_stmt));
(v_i)++;
									for ( ; bool((and((v_i <= v__NAMESPACE.scalar((v_self._hash_[('body')]))), function () { return ( bool((and((v__NAMESPACE.ref(v_self._hash_[('body')][v_i]) == 'Apply'), function () { return (v_self._hash_[('body')][v_i]._class_.code(v_self._hash_[('body')][v_i]) == 'package'); }))) ? false : true); })));  ) { (function () {
										v__NAMESPACE.push(List_stmts, v_self._hash_[('body')][v_i]);
(v_i)++;; })() };
									v__NAMESPACE.push(List_body, CLASS["CompUnit"]._class_.new(CLASS["CompUnit"],'name', v_name,'body', List_stmts));;
								})(); }
								else { (function () {
									if ( bool((v_stmt != null)) ) { (function () {
										v__NAMESPACE.push(List_body, v_stmt);;
									})(); };
(v_i)++;;
								})(); };; })() };
							(v_class_name = v_self._hash_[('name')]);
							(v_str = ('make_package(' + String.fromCharCode(34) + string(v_class_name) + String.fromCharCode(34) + ');' + string((String.fromCharCode(10))) + '(function () {' + string((String.fromCharCode(10))) + '  var __PACKAGE__ = ' + String.fromCharCode(34) + string(v_class_name) + String.fromCharCode(34) + ';' + string((String.fromCharCode(10))) + '  var v__NAMESPACE = NAMESPACE[__PACKAGE__];' + string((String.fromCharCode(10)))));
							(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_decl) {
								if ( bool((and(v_decl._class_.isa(v_decl,'Decl'), function () { return ((v_decl._class_.decl(v_decl) == 'my')); }))) ) { (function () {
									(v_str = (string(v_str) + '  ' + string(v_decl._class_.emit_javascript_init(v_decl))));;
								})(); };
								if ( bool((and(v_decl._class_.isa(v_decl,'Apply'), function () { return (v_decl._class_.code(v_decl) == 'infix:<=>'); }))) ) { (function () {
									var v_var = null;

									(v_var = v_decl._class_.arguments(v_decl)[0]);
									if ( bool((and(v_var._class_.isa(v_var,'Decl'), function () { return (v_var._class_.decl(v_var) == 'my'); }))) ) { (function () {
										(v_str = (string(v_str) + '  ' + string(v_var._class_.emit_javascript_init(v_var))));;
									})(); };;
								})(); };; })(a_[i_]) } })(List_body);
							(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_decl) {
								if ( bool((v_decl._class_.isa(v_decl,'Sub'))) ) { (function () {
									(v_str = (string(v_str) + string((v_decl)._class_.emit_javascript_indented((v_decl),add(v_level, 1))) + string((';' + String.fromCharCode(10)))));;
								})(); };; })(a_[i_]) } })(List_body);
							(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_decl) {
								if ( bool((and(and((v_decl != null), function () { return (( bool((and(v_decl._class_.isa(v_decl,'Decl'), function () { return (v_decl._class_.decl(v_decl) == 'my'); }))) ? false : true)); }), function () { return (( bool((v_decl._class_.isa(v_decl,'Sub'))) ? false : true)); }))) ) { (function () {
									(v_str = (string(v_str) + string((v_decl)._class_.emit_javascript_indented((v_decl),add(v_level, 1))) + string((';' + String.fromCharCode(10)))));;
								})(); };; })(a_[i_]) } })(List_body);
							return((v_str = (string(v_str) + '}' + ')()' + string((String.fromCharCode(10))))));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_program", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_comp_units = null;

		var v_str = null;

		(v_comp_units = v__NAMESPACE.shift(List__));
		(v_str = '');
		(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_comp_unit) {
			(v_str = (string(v_str) + string(v_comp_unit._class_.emit_javascript(v_comp_unit)) + string((String.fromCharCode(10)))));; })(a_[i_]) } })(Array.prototype.slice.call((v_comp_units)));
		throw(v_str);;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Val::Int");
(function () {
  var __PACKAGE__ = "Val::Int";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		return((string(NAMESPACE["Javascript"].tab(v_level)) + string(v_self._hash_[('int')])));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Val::Num");
(function () {
  var __PACKAGE__ = "Val::Num";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		return((string(NAMESPACE["Javascript"].tab(v_level)) + string(v_self._hash_[('num')])));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Val::Buf");
(function () {
  var __PACKAGE__ = "Val::Buf";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		return((string(NAMESPACE["Javascript"].tab(v_level)) + string(NAMESPACE["Javascript"].escape_string(v_self._hash_[('buf')]))));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Lit::Block");
(function () {
  var __PACKAGE__ = "Lit::Block";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_sig = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		(v_sig = 'v__');
		if ( bool((v_self._hash_[('sig')])) ) { (function () {
			(v_sig = v_self._hash_[('sig')]._class_.emit_javascript_indented(v_self._hash_[('sig')],add(v_level, 1)));;
		})(); };
		throw((string(NAMESPACE["Javascript"].tab(v_level)) + string(('(function (' + string(v_sig) + ') ' + '{' + String.fromCharCode(10))) + string((CLASS["Perlito5::Javascript::LexicalBlock"]._class_.new(CLASS["Perlito5::Javascript::LexicalBlock"],'block', v_self._hash_[('stmts')],'needs_return', 1))._class_.emit_javascript_indented((CLASS["Perlito5::Javascript::LexicalBlock"]._class_.new(CLASS["Perlito5::Javascript::LexicalBlock"],'block', v_self._hash_[('stmts')],'needs_return', 1)),add(v_level, 1))) + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(v_level)) + '})'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Lit::Array");
(function () {
  var __PACKAGE__ = "Lit::Array";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_ast = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		(v_ast = v_self._class_.expand_interpolation(v_self));
		throw(v_ast._class_.emit_javascript_indented(v_ast,v_level));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Lit::Hash");
(function () {
  var __PACKAGE__ = "Lit::Hash";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_ast = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		(v_ast = v_self._class_.expand_interpolation(v_self));
		throw(v_ast._class_.emit_javascript_indented(v_ast,v_level));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Index");
(function () {
  var __PACKAGE__ = "Index";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		if ( bool((and(v_self._hash_[('obj')]._class_.isa(v_self._hash_[('obj')],'Var'), function () { return (v_self._hash_[('obj')]._class_.sigil(v_self._hash_[('obj')]) == '$'); }))) ) { (function () {
			var v_v = null;

			(v_v = CLASS["Var"]._class_.new(CLASS["Var"],'sigil', '@','namespace', v_self._hash_[('obj')]._class_.namespace(v_self._hash_[('obj')]),'name', v_self._hash_[('obj')]._class_.name(v_self._hash_[('obj')])));
			throw((string(v_v._class_.emit_javascript_indented(v_v,v_level)) + '[' + string(v_self._hash_[('index_exp')]._class_.emit_javascript(v_self._hash_[('index_exp')])) + ']'));;
		})(); };
		return((string(NAMESPACE["Javascript"].tab(v_level)) + string(v_self._hash_[('obj')]._class_.emit_javascript(v_self._hash_[('obj')])) + '[' + string(v_self._hash_[('index_exp')]._class_.emit_javascript(v_self._hash_[('index_exp')])) + ']'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Lookup");
(function () {
  var __PACKAGE__ = "Lookup";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		if ( bool((and(v_self._hash_[('obj')]._class_.isa(v_self._hash_[('obj')],'Var'), function () { return (v_self._hash_[('obj')]._class_.sigil(v_self._hash_[('obj')]) == '$'); }))) ) { (function () {
			var v_v = null;

			(v_v = CLASS["Var"]._class_.new(CLASS["Var"],'sigil', '%','namespace', v_self._hash_[('obj')]._class_.namespace(v_self._hash_[('obj')]),'name', v_self._hash_[('obj')]._class_.name(v_self._hash_[('obj')])));
			throw((string(v_v._class_.emit_javascript_indented(v_v,v_level)) + '[' + string(v_self._hash_[('index_exp')]._class_.emit_javascript(v_self._hash_[('index_exp')])) + ']'));;
		})(); };
		throw((string(v_self._hash_[('obj')]._class_.emit_javascript_indented(v_self._hash_[('obj')],v_level)) + '._hash_[' + string(v_self._hash_[('index_exp')]._class_.emit_javascript(v_self._hash_[('index_exp')])) + ']'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Var");
(function () {
  var __PACKAGE__ = "Var";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
					var v_table = null;

					(v_table = (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['$']  = 'v_'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['@']  = 'List_'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['%']  = 'Hash_'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['&']  = 'Code_'); })();
	return((new HashRef(Hash_a)));
})());
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "emit_javascript_indented", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							var v_level = null;

							var v_ns = null;

							(v_self = v__NAMESPACE.shift(List__));
							(v_level = v__NAMESPACE.shift(List__));
							if ( bool(((v_self._hash_[('sigil')] == '*'))) ) { (function () {
								var v_ns = null;

								(v_ns = 'v__NAMESPACE');
								if ( bool((v_self._hash_[('namespace')])) ) { (function () {
									(v_ns = ('NAMESPACE[' + String.fromCharCode(34) + string(v_self._hash_[('namespace')]) + String.fromCharCode(34) + ']'));;
								})(); };
								throw((string(v_ns) + '[' + String.fromCharCode(34) + string(v_self._hash_[('name')]) + String.fromCharCode(34) + ']'));;
							})(); };
							(v_ns = '');
							if ( bool((v_self._hash_[('namespace')])) ) { (function () {
								(v_ns = ('NAMESPACE[' + String.fromCharCode(34) + string(v_self._hash_[('namespace')]) + String.fromCharCode(34) + '].'));;
							})(); };
							return((string(v_ns) + string(v_table._hash_[v_self._hash_[('sigil')]]) + string(v_self._hash_[('name')])));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "plain_name", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		(v_self = v__NAMESPACE.shift(List__));
		if ( bool((v_self._class_.namespace(v_self))) ) { (function () {
			throw((string(v_self._class_.namespace(v_self)) + '.' + string(v_self._class_.name(v_self))));;
		})(); };
		throw(v_self._class_.name(v_self));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Proto");
(function () {
  var __PACKAGE__ = "Proto";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		return((string(NAMESPACE["Javascript"].tab(v_level)) + 'CLASS[' + String.fromCharCode(34) + string(v_self._hash_[('name')]) + String.fromCharCode(34) + ']'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Call");
(function () {
  var __PACKAGE__ = "Call";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_invocant = null;

		var v_meth = null;

		var List_args = [];

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		(v_invocant = v_self._hash_[('invocant')]._class_.emit_javascript(v_self._hash_[('invocant')]));
		(v_meth = v_self._hash_[('method')]);
		if ( bool(((v_meth == 'postcircumfix:<[ ]>'))) ) { (function () {
			throw((string(NAMESPACE["Javascript"].tab(v_level)) + string(v_invocant) + '[' + string(v_self._hash_[('arguments')]._class_.emit_javascript(v_self._hash_[('arguments')])) + ']'));;
		})(); };
		if ( bool(((v_meth == 'postcircumfix:<{ }>'))) ) { (function () {
			throw((string(NAMESPACE["Javascript"].tab(v_level)) + string(v_invocant) + '._hash_[' + string(v_self._hash_[('arguments')]._class_.emit_javascript(v_self._hash_[('arguments')])) + ']'));;
		})(); };
		if ( bool(((v_meth == 'postcircumfix:<( )>'))) ) { (function () {
			var List_args = [];

			(List_args = (((function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})())).slice());
			(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v__) {
				v__NAMESPACE.push(List_args, v__._class_.emit_javascript(v__));; })(a_[i_]) } })(Array.prototype.slice.call((v_self._hash_[('arguments')])));
			throw((string(NAMESPACE["Javascript"].tab(v_level)) + '(' + string(v_invocant) + ')(' + string(v__NAMESPACE.join(',', List_args)) + ')'));;
		})(); };
		(List_args = (((function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_invocant);
	return(List_a);
})())).slice());
		(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v__) {
			v__NAMESPACE.push(List_args, v__._class_.emit_javascript(v__));; })(a_[i_]) } })(Array.prototype.slice.call((v_self._hash_[('arguments')])));
		throw((string(NAMESPACE["Javascript"].tab(v_level)) + string(v_invocant) + '._class_.' + string(v_meth) + '(' + string(v__NAMESPACE.join(',', List_args)) + ')'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Apply");
(function () {
  var __PACKAGE__ = "Apply";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
					var Hash_op_infix_js = {};

					(Hash_op_infix_js = (function (_h) { var _tmp = {}; for (var _i in _h) { _tmp[_i] = _h[_i]; }; return _tmp; })( ((function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<->']  = ' - '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<*>']  = ' * '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<' + String.fromCharCode(47) + '>']  = ' ' + String.fromCharCode(47) + ' '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<>>']  = ' > '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<<>']  = ' < '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<>=>']  = ' >= '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<<=>']  = ' <= '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<eq>']  = ' == '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<ne>']  = ' ' + String.fromCharCode(33) + '= '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<le>']  = ' <= '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<ge>']  = ' >= '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<==>']  = ' == '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<' + String.fromCharCode(33) + '=>']  = ' ' + String.fromCharCode(33) + '= '); })();
	return((new HashRef(Hash_a)));
})())._hash_));
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "emit_javascript_indented", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							var v_level = null;

							var v_apply = null;

							var v_code = null;

							var List_args = [];

							(v_self = v__NAMESPACE.shift(List__));
							(v_level = v__NAMESPACE.shift(List__));
							(v_apply = v_self._class_.op_assign(v_self));
							if ( bool((v_apply)) ) { (function () {
								throw(v_apply._class_.emit_javascript_indented(v_apply,v_level));;
							})(); };
							(v_code = v_self._hash_[('code')]);
							if ( bool((v__NAMESPACE.ref((v_code != '')))) ) { (function () {
								var List_args = [];

								(List_args = (((function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})())).slice());
								(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v__) {
									v__NAMESPACE.push(List_args, v__._class_.emit_javascript(v__));; })(a_[i_]) } })(Array.prototype.slice.call((v_self._hash_[('arguments')])));
								throw((string(NAMESPACE["Javascript"].tab(v_level)) + '(' + string(v_self._hash_[('code')]._class_.emit_javascript(v_self._hash_[('code')])) + ')(' + string(v__NAMESPACE.join(',', List_args)) + ')'));;
							})(); };
							if ( bool(((v_code == 'infix:<=>>'))) ) { (function () {
								throw((string(NAMESPACE["Javascript"].tab(v_level)) + string(v__NAMESPACE.join(', ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_javascript(v__))}; return out; })((v_self._hash_[('arguments')]))))));;
							})(); };
							if ( bool(((Hash_op_infix_js).hasOwnProperty(v_code))) ) { (function () {
								throw((string(NAMESPACE["Javascript"].tab(v_level)) + '(' + string(v__NAMESPACE.join(Hash_op_infix_js[v_code], (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_javascript(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((v_code == 'eval'))) ) { (function () {
								throw(('eval(perl5_to_js(' + string(NAMESPACE["Javascript"].to_str(v_self._hash_[('arguments')][0])) + '))'));;
							})(); };
							if ( bool(((v_code == 'undef'))) ) { (function () {
								throw((string(NAMESPACE["Javascript"].tab(v_level)) + 'null'));;
							})(); };
							if ( bool(((v_code == 'defined'))) ) { (function () {
								throw((string(NAMESPACE["Javascript"].tab(v_level)) + '(' + string(v__NAMESPACE.join(' ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_javascript(v__))}; return out; })((v_self._hash_[('arguments')])))) + ' ' + String.fromCharCode(33) + '= null)'));;
							})(); };
							if ( bool(((v_code == 'shift'))) ) { (function () {
								if ( bool((and(v_self._hash_[('arguments')], function () { return (v_self._hash_[('arguments')]); }))) ) { (function () {
									throw(('v__NAMESPACE.shift(' + string(v__NAMESPACE.join(', ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_javascript(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
								})(); };
								throw('v__NAMESPACE.shift(List__)');;
							})(); };
							if ( bool(((v_code == 'map'))) ) { (function () {
								var v_fun = null;

								var v_list = null;

								(v_fun = v_self._hash_[('arguments')][0]);
								(v_list = v_self._hash_[('arguments')][1]);
								throw(('(function (a_) { ' + 'var out = []; ' + 'if ( a_ == null ) { return out; }; ' + 'for(var i = 0; i < a_.length; i++) { ' + 'var v__ = a_[i]; ' + 'out.push(' + string(v_fun._class_.emit_javascript(v_fun)) + ')' + '}; ' + 'return out;' + ' })(' + string(v_list._class_.emit_javascript(v_list)) + ')'));;
							})(); };
							if ( bool(((v_code == 'prefix:<' + String.fromCharCode(33) + '>'))) ) { (function () {
								throw(('( ' + string(NAMESPACE["Javascript"].to_bool(v_self._hash_[('arguments')][0])) + ' ' + String.fromCharCode(63) + ' false : true)'));;
							})(); };
							if ( bool(((v_code == 'prefix:<$>'))) ) { (function () {
								var v_arg = null;

								(v_arg = v_self._hash_[('arguments')][0]);
								throw(('(' + string(v_arg._class_.emit_javascript(v_arg)) + ')._scalar_'));;
							})(); };
							if ( bool(((v_code == 'prefix:<@>'))) ) { (function () {
								throw(('(' + string(v__NAMESPACE.join(' ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_javascript(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((v_code == 'prefix:<%>'))) ) { (function () {
								var v_arg = null;

								(v_arg = v_self._hash_[('arguments')][0]);
								throw(('(' + string(v_arg._class_.emit_javascript(v_arg)) + ')._hash_'));;
							})(); };
							if ( bool(((v_code == 'circumfix:<[ ]>'))) ) { (function () {
								throw(('Array.prototype.slice.call(' + string(v__NAMESPACE.join(', ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_javascript(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((v_code == 'prefix:<' + String.fromCharCode(92) + '>'))) ) { (function () {
								var v_arg = null;

								(v_arg = v_self._hash_[('arguments')][0]);
								if ( bool((v_arg._class_.isa(v_arg,'Var'))) ) { (function () {
									if ( bool(((v_arg._class_.sigil(v_arg) == '@'))) ) { (function () {
										throw(v_arg._class_.emit_javascript(v_arg));;
									})(); };
									if ( bool(((v_arg._class_.sigil(v_arg) == '%'))) ) { (function () {
										throw(('(new HashRef(' + string(v_arg._class_.emit_javascript(v_arg)) + '))'));;
									})(); };;
								})(); };
								throw(('(new ScalarRef(' + string(v_arg._class_.emit_javascript(v_arg)) + '))'));;
							})(); };
							if ( bool(((v_code == 'postfix:<++>'))) ) { (function () {
								throw(('(' + string(v__NAMESPACE.join(' ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_javascript(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')++'));;
							})(); };
							if ( bool(((v_code == 'postfix:<-->'))) ) { (function () {
								throw(('(' + string(v__NAMESPACE.join(' ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_javascript(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')--'));;
							})(); };
							if ( bool(((v_code == 'prefix:<++>'))) ) { (function () {
								throw(('++(' + string(v__NAMESPACE.join(' ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_javascript(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((v_code == 'prefix:<-->'))) ) { (function () {
								throw(('--(' + string(v__NAMESPACE.join(' ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_javascript(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((v_code == 'infix:<x>'))) ) { (function () {
								throw(('str_replicate(' + string(v__NAMESPACE.join(', ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_javascript(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((v_code == 'list:<.>'))) ) { (function () {
								throw(('(' + string(v__NAMESPACE.join(' + ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(NAMESPACE["Javascript"].to_str(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((v_code == 'infix:<+>'))) ) { (function () {
								throw(('add' + '(' + string(v__NAMESPACE.join(', ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_javascript(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((v_code == 'prefix:<+>'))) ) { (function () {
								throw(('(' + string(v_self._hash_[('arguments')][0]._class_.emit_javascript(v_self._hash_[('arguments')][0])) + ')'));;
							})(); };
							if ( bool(((v_code == 'infix:<..>'))) ) { (function () {
								throw(('(function (a) { ' + 'for (var i=' + string(v_self._hash_[('arguments')][0]._class_.emit_javascript(v_self._hash_[('arguments')][0])) + ', l=' + string(v_self._hash_[('arguments')][1]._class_.emit_javascript(v_self._hash_[('arguments')][1])) + '; ' + 'i<=l; ++i)' + '{ ' + 'a.push(i) ' + '}; ' + 'return a ' + '})([])'));;
							})(); };
							if ( or((v_code == 'infix:<&&>'), function () { return (v_code == 'infix:<and>'); }) ) { (function () {
								throw(('and' + '(' + string(v_self._hash_[('arguments')][0]._class_.emit_javascript(v_self._hash_[('arguments')][0])) + ', ' + 'function () { return ' + string(v_self._hash_[('arguments')][1]._class_.emit_javascript(v_self._hash_[('arguments')][1])) + '; })'));;
							})(); };
							if ( or((v_code == 'infix:<||>'), function () { return (v_code == 'infix:<or>'); }) ) { (function () {
								throw(('or' + '(' + string(v_self._hash_[('arguments')][0]._class_.emit_javascript(v_self._hash_[('arguments')][0])) + ', ' + 'function () { return ' + string(v_self._hash_[('arguments')][1]._class_.emit_javascript(v_self._hash_[('arguments')][1])) + '; })'));;
							})(); };
							if ( bool(((v_code == 'infix:<' + String.fromCharCode(47) + String.fromCharCode(47) + '>'))) ) { (function () {
								throw((string(('defined_or')) + '(' + string(v_self._hash_[('arguments')][0]._class_.emit_javascript(v_self._hash_[('arguments')][0])) + ', ' + 'function () { return ' + string(v_self._hash_[('arguments')][1]._class_.emit_javascript(v_self._hash_[('arguments')][1])) + '; })'));;
							})(); };
							if ( bool(((v_code == 'exists'))) ) { (function () {
								var v_arg = null;

								(v_arg = v_self._hash_[('arguments')][0]);
								if ( bool((v_arg._class_.isa(v_arg,'Lookup'))) ) { (function () {
									var v_v = null;

									(v_v = v_arg._class_.obj(v_arg));
									if ( bool((and(v_v._class_.isa(v_v,'Var'), function () { return (v_v._class_.sigil(v_v) == '$'); }))) ) { (function () {
										(v_v = CLASS["Var"]._class_.new(CLASS["Var"],'sigil', '%','namespace', v_v._class_.namespace(v_v),'name', v_v._class_.name(v_v)));
										throw(('(' + string(v_v._class_.emit_javascript(v_v)) + ').hasOwnProperty(' + string((v_arg._class_.index_exp(v_arg))._class_.emit_javascript((v_arg._class_.index_exp(v_arg)))) + ')'));;
									})(); };
									throw(('(' + string(v_v._class_.emit_javascript(v_v)) + ')._hash_.hasOwnProperty(' + string((v_arg._class_.index_exp(v_arg))._class_.emit_javascript((v_arg._class_.index_exp(v_arg)))) + ')'));;
								})(); };
								if ( bool((v_arg._class_.isa(v_arg,'Call'))) ) { (function () {
									if ( bool(((v_arg._class_.method(v_arg) == 'postcircumfix:<{ }>'))) ) { (function () {
										throw(('(' + string(v_arg._class_.invocant(v_arg)._class_.emit_javascript(v_arg._class_.invocant(v_arg))) + ')._hash_.hasOwnProperty(' + string(v_arg._hash_[('arguments')]._class_.emit_javascript(v_arg._hash_[('arguments')])) + ')'));;
									})(); };;
								})(); };;
							})(); };
							if ( bool(((v_code == 'ternary:<' + String.fromCharCode(63) + String.fromCharCode(63) + ' ' + String.fromCharCode(33) + String.fromCharCode(33) + '>'))) ) { (function () {
								throw((string(NAMESPACE["Javascript"].tab(v_level)) + '( ' + string(NAMESPACE["Javascript"].to_bool(v_self._hash_[('arguments')][0])) + ' ' + String.fromCharCode(63) + ' ' + string((v_self._hash_[('arguments')][1])._class_.emit_javascript((v_self._hash_[('arguments')][1]))) + ' : ' + string((v_self._hash_[('arguments')][2])._class_.emit_javascript((v_self._hash_[('arguments')][2]))) + ')'));;
							})(); };
							if ( bool(((v_code == 'circumfix:<( )>'))) ) { (function () {
								throw((string(NAMESPACE["Javascript"].tab(v_level)) + '(' + string(v__NAMESPACE.join(', ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_javascript(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((v_code == 'infix:<=>'))) ) { (function () {
								throw(v__NAMESPACE.emit_javascript_bind(v_self._hash_[('arguments')][0], v_self._hash_[('arguments')][1], v_level));;
							})(); };
							if ( bool(((v_code == 'return'))) ) { (function () {
								throw((string(NAMESPACE["Javascript"].tab(v_level)) + 'throw(' + string((( and(v_self._hash_[('arguments')], function () { return (v_self._hash_[('arguments')]); }) ? v_self._hash_[('arguments')][0]._class_.emit_javascript(v_self._hash_[('arguments')][0]) : 'null'))) + ')'));;
							})(); };
							if ( bool((v_self._hash_[('namespace')])) ) { (function () {
								if ( bool((and((v_self._hash_[('namespace')] == 'JS'), function () { return (v_code == 'inline'); }))) ) { (function () {
									if ( bool((v_self._hash_[('arguments')][0]._class_.isa(v_self._hash_[('arguments')][0],'Val::Buf'))) ) { (function () {
										throw(v_self._hash_[('arguments')][0]._hash_[('buf')]);;
									})(); }
									else { (function () {
										v__NAMESPACE.die(('JS::inline needs a string constant'));;
									})(); };;
								})(); };
								(v_code = ('NAMESPACE[' + String.fromCharCode(34) + string(v_self._hash_[('namespace')]) + String.fromCharCode(34) + '].' + string((v_code))));;
							})(); }
							else { (function () {
								(v_code = ('v__NAMESPACE.' + string(v_code)));;
							})(); };
							(List_args = (((function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})())).slice());
							(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v__) {
								v__NAMESPACE.push(List_args, v__._class_.emit_javascript(v__));; })(a_[i_]) } })(Array.prototype.slice.call((v_self._hash_[('arguments')])));
							return((string(NAMESPACE["Javascript"].tab(v_level)) + string(v_code) + '(' + string(v__NAMESPACE.join(', ', List_args)) + ')'));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_bind", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_parameters = null;

		var v_arguments = null;

		var v_level = null;

		(v_parameters = v__NAMESPACE.shift(List__));
		(v_arguments = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		if ( bool((v_parameters._class_.isa(v_parameters,'Call'))) ) { (function () {
			if ( bool(((v_parameters._class_.method(v_parameters) == 'postcircumfix:<[ ]>'))) ) { (function () {
				var v_str = null;

				var v_var_js = null;

				var v_auto = null;

				var v_index_js = null;

				(v_str = '');
				(v_var_js = v_parameters._class_.invocant(v_parameters)._class_.emit_javascript(v_parameters._class_.invocant(v_parameters)));
				(v_auto = NAMESPACE["Javascript"].autovivify(v_parameters, 'ARRAYREF'));
				v__NAMESPACE.pop((v_auto));
				(v_str = (string(v_str) + string(v__NAMESPACE.join('', (v_auto)))));
				(v_index_js = v_parameters._class_.arguments(v_parameters)._class_.emit_javascript(v_parameters._class_.arguments(v_parameters)));
				(v_str = (string(v_str) + 'return (' + string(v_var_js) + '[' + string(v_index_js) + '] ' + ' = ' + string(v_arguments._class_.emit_javascript(v_arguments)) + '); '));
				throw((string(NAMESPACE["Javascript"].tab(v_level)) + '(function () { ' + string(v_str) + '})()'));;
			})(); };
			if ( bool(((v_parameters._class_.method(v_parameters) == 'postcircumfix:<{ }>'))) ) { (function () {
				var v_str = null;

				var v_var_js = null;

				var v_auto = null;

				var v_index_js = null;

				(v_str = '');
				(v_var_js = v_parameters._class_.invocant(v_parameters)._class_.emit_javascript(v_parameters._class_.invocant(v_parameters)));
				(v_auto = NAMESPACE["Javascript"].autovivify(v_parameters, 'HASHREF'));
				v__NAMESPACE.pop((v_auto));
				(v_str = (string(v_str) + string(v__NAMESPACE.join('', (v_auto)))));
				(v_index_js = v_parameters._class_.arguments(v_parameters)._class_.emit_javascript(v_parameters._class_.arguments(v_parameters)));
				(v_str = (string(v_str) + 'return (' + string(v_var_js) + '._hash_[' + string(v_index_js) + '] ' + ' = ' + string(v_arguments._class_.emit_javascript(v_arguments)) + '); '));
				throw((string(NAMESPACE["Javascript"].tab(v_level)) + '(function () { ' + string(v_str) + '})()'));;
			})(); };;
		})(); };
		if ( bool((v_parameters._class_.isa(v_parameters,'Lookup'))) ) { (function () {
			var v_str = null;

			var v_var = null;

			var v_var_js = null;

			var v_auto = null;

			var v_index_js = null;

			(v_str = '');
			(v_var = v_parameters._class_.obj(v_parameters));
			if ( bool((and(v_var._class_.isa(v_var,'Var'), function () { return (v_var._class_.sigil(v_var) == '$'); }))) ) { (function () {
				var v_var_js = null;

				var v_auto = null;

				var v_index_js = null;

				(v_var = CLASS["Var"]._class_.new(CLASS["Var"],'sigil', '%','namespace', v_var._class_.namespace(v_var),'name', v_var._class_.name(v_var)));
				(v_var_js = v_var._class_.emit_javascript(v_var));
				(v_auto = NAMESPACE["Javascript"].autovivify(v_parameters, 'HASHREF'));
				v__NAMESPACE.pop((v_auto));
				(v_str = (string(v_str) + string(v__NAMESPACE.join('', (v_auto)))));
				(v_index_js = v_parameters._class_.index_exp(v_parameters)._class_.emit_javascript(v_parameters._class_.index_exp(v_parameters)));
				(v_str = (string(v_str) + 'return (' + string(v_var_js) + '[' + string(v_index_js) + '] ' + ' = ' + string(v_arguments._class_.emit_javascript(v_arguments)) + '); '));
				throw((string(NAMESPACE["Javascript"].tab(v_level)) + '(function () { ' + string(v_str) + '})()'));;
			})(); };
			(v_var_js = v_var._class_.emit_javascript(v_var));
			(v_auto = NAMESPACE["Javascript"].autovivify(v_parameters, 'HASHREF'));
			v__NAMESPACE.pop((v_auto));
			(v_str = (string(v_str) + string(v__NAMESPACE.join('', (v_auto)))));
			(v_index_js = v_parameters._class_.index_exp(v_parameters)._class_.emit_javascript(v_parameters._class_.index_exp(v_parameters)));
			(v_str = (string(v_str) + 'return (' + string(v_var_js) + '._hash_[' + string(v_index_js) + '] ' + ' = ' + string(v_arguments._class_.emit_javascript(v_arguments)) + '); '));
			throw((string(NAMESPACE["Javascript"].tab(v_level)) + '(function () { ' + string(v_str) + '})()'));;
		})(); };
		if ( bool((v_parameters._class_.isa(v_parameters,'Index'))) ) { (function () {
			var v_str = null;

			var v_var = null;

			var v_var_js = null;

			var v_auto = null;

			var v_index_js = null;

			(v_str = '');
			(v_var = v_parameters._class_.obj(v_parameters));
			if ( bool((and(v_var._class_.isa(v_var,'Var'), function () { return (v_var._class_.sigil(v_var) == '$'); }))) ) { (function () {
				(v_var = CLASS["Var"]._class_.new(CLASS["Var"],'sigil', '@','namespace', v_var._class_.namespace(v_var),'name', v_var._class_.name(v_var)));;
			})(); };
			(v_var_js = v_var._class_.emit_javascript(v_var));
			(v_auto = NAMESPACE["Javascript"].autovivify(v_parameters, 'ARRAYREF'));
			v__NAMESPACE.pop((v_auto));
			(v_str = (string(v_str) + string(v__NAMESPACE.join('', (v_auto)))));
			(v_index_js = v_parameters._class_.index_exp(v_parameters)._class_.emit_javascript(v_parameters._class_.index_exp(v_parameters)));
			(v_str = (string(v_str) + 'return (' + string(v_var_js) + '[' + string(v_index_js) + '] ' + ' = ' + string(v_arguments._class_.emit_javascript(v_arguments)) + '); '));
			throw((string(NAMESPACE["Javascript"].tab(v_level)) + '(function () { ' + string(v_str) + '})()'));;
		})(); };
		if ( or(and(v_parameters._class_.isa(v_parameters,'Var'), function () { return (v_parameters._class_.sigil(v_parameters) == '@'); }), function () { return and(v_parameters._class_.isa(v_parameters,'Decl'), function () { return (v_parameters._class_.var(v_parameters)._class_.sigil(v_parameters._class_.var(v_parameters)) == '@'); }); }) ) { (function () {
			(v_arguments = CLASS["Apply"]._class_.new(CLASS["Apply"],'code', 'prefix:<@>','arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Lit::Array"]._class_.new(CLASS["Lit::Array"],'array1', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_arguments);
	return(List_a);
})()));
	return(List_a);
})()));
			throw((string(NAMESPACE["Javascript"].tab(v_level)) + '(' + string(v_parameters._class_.emit_javascript(v_parameters)) + ' = (' + string(v_arguments._class_.emit_javascript(v_arguments)) + ').slice())'));;
		})(); }
		else { (function () {
			if ( or(and(v_parameters._class_.isa(v_parameters,'Var'), function () { return (v_parameters._class_.sigil(v_parameters) == '%'); }), function () { return and(v_parameters._class_.isa(v_parameters,'Decl'), function () { return (v_parameters._class_.var(v_parameters)._class_.sigil(v_parameters._class_.var(v_parameters)) == '%'); }); }) ) { (function () {
				(v_arguments = CLASS["Apply"]._class_.new(CLASS["Apply"],'code', 'prefix:<%>','arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Lit::Hash"]._class_.new(CLASS["Lit::Hash"],'hash1', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_arguments);
	return(List_a);
})()));
	return(List_a);
})()));
				throw((string(NAMESPACE["Javascript"].tab(v_level)) + '(' + string(v_parameters._class_.emit_javascript(v_parameters)) + ' = (function (_h) { ' + 'var _tmp = {}; ' + 'for (var _i in _h) { ' + '_tmp[_i] = _h[_i]; ' + '}; ' + 'return _tmp; ' + '})( ' + string(v_arguments._class_.emit_javascript(v_arguments)) + '))'));;
			})(); };;
		})(); };
		return((string(NAMESPACE["Javascript"].tab(v_level)) + '(' + string(v_parameters._class_.emit_javascript(v_parameters)) + ' = ' + string(v_arguments._class_.emit_javascript(v_arguments)) + ')'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("If");
(function () {
  var __PACKAGE__ = "If";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_cond = null;

		var v_body = null;

		var v_s = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		(v_cond = v_self._hash_[('cond')]);
		if ( bool((and(v_cond._class_.isa(v_cond,'Var'), function () { return (v_cond._class_.sigil(v_cond) == '@'); }))) ) { (function () {
			(v_cond = CLASS["Apply"]._class_.new(CLASS["Apply"],'code', 'prefix:<@>','arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_cond);
	return(List_a);
})()));;
		})(); };
		(v_body = CLASS["Perlito5::Javascript::LexicalBlock"]._class_.new(CLASS["Perlito5::Javascript::LexicalBlock"],'block', v_self._hash_[('body')]._class_.stmts(v_self._hash_[('body')]),'needs_return', 0));
		(v_s = (string(NAMESPACE["Javascript"].tab(v_level)) + 'if ( ' + string(NAMESPACE["Javascript"].to_bool(v_cond)) + ' ) { ' + '(function () {' + string((String.fromCharCode(10))) + string(v_body._class_.emit_javascript_indented(v_body,add(v_level, 1))) + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(v_level)) + '})(); }'));
		if ( bool(((v_self._hash_[('otherwise')]._class_.stmts(v_self._hash_[('otherwise')])))) ) { (function () {
			var v_otherwise = null;

			(v_otherwise = CLASS["Perlito5::Javascript::LexicalBlock"]._class_.new(CLASS["Perlito5::Javascript::LexicalBlock"],'block', v_self._hash_[('otherwise')]._class_.stmts(v_self._hash_[('otherwise')]),'needs_return', 0));
			(v_s = (string(v_s) + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(v_level)) + 'else { ' + '(function () {' + string((String.fromCharCode(10))) + string(v_otherwise._class_.emit_javascript_indented(v_otherwise,add(v_level, 1))) + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(v_level)) + '})(); }'));;
		})(); };
		throw(v_s);;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("While");
(function () {
  var __PACKAGE__ = "While";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_body = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		(v_body = CLASS["Perlito5::Javascript::LexicalBlock"]._class_.new(CLASS["Perlito5::Javascript::LexicalBlock"],'block', v_self._hash_[('body')]._class_.stmts(v_self._hash_[('body')]),'needs_return', 0));
		throw((string(NAMESPACE["Javascript"].tab(v_level)) + 'for ( ' + string((( bool(v_self._hash_[('init')]) ? (string(v_self._hash_[('init')]._class_.emit_javascript(v_self._hash_[('init')])) + '; ') : '; '))) + string((( bool(v_self._hash_[('cond')]) ? (string(NAMESPACE["Javascript"].to_bool(v_self._hash_[('cond')])) + '; ') : '; '))) + string((( bool(v_self._hash_[('continue')]) ? (string(v_self._hash_[('continue')]._class_.emit_javascript(v_self._hash_[('continue')])) + ' ') : ' '))) + ') { ' + '(function () {' + string((String.fromCharCode(10))) + string(v_body._class_.emit_javascript_indented(v_body,add(v_level, 1))) + ' })()' + ' }'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("For");
(function () {
  var __PACKAGE__ = "For";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_cond = null;

		var v_body = null;

		var v_sig = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		(v_cond = v_self._hash_[('cond')]);
		if ( bool((( bool((and(v_cond._class_.isa(v_cond,'Var'), function () { return (v_cond._class_.sigil(v_cond) == '@'); }))) ? false : true))) ) { (function () {
			(v_cond = CLASS["Lit::Array"]._class_.new(CLASS["Lit::Array"],'array1', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_cond);
	return(List_a);
})()));;
		})(); };
		(v_body = CLASS["Perlito5::Javascript::LexicalBlock"]._class_.new(CLASS["Perlito5::Javascript::LexicalBlock"],'block', v_self._hash_[('body')]._class_.stmts(v_self._hash_[('body')]),'needs_return', 0));
		(v_sig = 'v__');
		if ( bool((v_self._hash_[('body')]._class_.sig(v_self._hash_[('body')]))) ) { (function () {
			(v_sig = v_self._hash_[('body')]._class_.sig(v_self._hash_[('body')])._class_.emit_javascript_indented(v_self._hash_[('body')]._class_.sig(v_self._hash_[('body')]),add(v_level, 1)));;
		})(); };
		return((string(NAMESPACE["Javascript"].tab(v_level)) + '(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { ' + string(('(function (' + string(v_sig) + ') {' + String.fromCharCode(10))) + string(v_body._class_.emit_javascript_indented(v_body,add(v_level, 1))) + ' })(a_[i_]) } })' + '(' + string(v_cond._class_.emit_javascript(v_cond)) + ')'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Decl");
(function () {
  var __PACKAGE__ = "Decl";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "emit_javascript_indented", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							var v_level = null;

							(v_self = v__NAMESPACE.shift(List__));
							(v_level = v__NAMESPACE.shift(List__));
							return((string(NAMESPACE["Javascript"].tab(v_level)) + string(v_self._hash_[('var')]._class_.emit_javascript(v_self._hash_[('var')]))));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_init", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		(v_self = v__NAMESPACE.shift(List__));
		if ( bool(((v_self._hash_[('decl')] == 'my'))) ) { return (function () {
			var v_str = null;

			(v_str = '');
			(v_str = (string(v_str) + 'var ' + string((v_self._hash_[('var')])._class_.emit_javascript((v_self._hash_[('var')]))) + ' = '));
			if ( bool(((v_self._hash_[('var')])._class_.sigil((v_self._hash_[('var')])) == '%')) ) { (function () {
				(v_str = (string(v_str) + '{};' + string((String.fromCharCode(10)))));;
			})(); }
			else { (function () {
				if ( bool(((v_self._hash_[('var')])._class_.sigil((v_self._hash_[('var')])) == '@')) ) { (function () {
					(v_str = (string(v_str) + '[];' + string((String.fromCharCode(10)))));;
				})(); }
				else { (function () {
					(v_str = (string(v_str) + 'null;' + string((String.fromCharCode(10)))));;
				})(); };;
			})(); };
			throw(v_str);
		})(); }
		else { return (function () {
			return(v__NAMESPACE.die(('not implemented: Decl ' + String.fromCharCode(39) + string(v_self._hash_[('decl')]) + string((String.fromCharCode(39))))));
		})(); };;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Sub");
(function () {
  var __PACKAGE__ = "Sub";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_s = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		(v_s = ('function () {' + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(add(v_level, 1))) + 'var List__ = Array.prototype.slice.call(arguments);' + string((String.fromCharCode(10))) + string((CLASS["Perlito5::Javascript::LexicalBlock"]._class_.new(CLASS["Perlito5::Javascript::LexicalBlock"],'block', v_self._hash_[('block')],'needs_return', 1,'top_level', 1))._class_.emit_javascript_indented((CLASS["Perlito5::Javascript::LexicalBlock"]._class_.new(CLASS["Perlito5::Javascript::LexicalBlock"],'block', v_self._hash_[('block')],'needs_return', 1,'top_level', 1)),add(v_level, 1))) + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(v_level)) + '}'));
		return((( bool(v_self._hash_[('name')]) ? ('make_sub(__PACKAGE__, ' + String.fromCharCode(34) + string(v_self._hash_[('name')]) + String.fromCharCode(34) + ', ' + string(v_s) + ')') : v_s)));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Do");
(function () {
  var __PACKAGE__ = "Do";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_block = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		(v_block = v_self._class_.simplify(v_self)._class_.block(v_self._class_.simplify(v_self)));
		throw((string(NAMESPACE["Javascript"].tab(v_level)) + '(function () {' + string((String.fromCharCode(10))) + string((CLASS["Perlito5::Javascript::LexicalBlock"]._class_.new(CLASS["Perlito5::Javascript::LexicalBlock"],'block', v_block,'needs_return', 1))._class_.emit_javascript_indented((CLASS["Perlito5::Javascript::LexicalBlock"]._class_.new(CLASS["Perlito5::Javascript::LexicalBlock"],'block', v_block,'needs_return', 1)),add(v_level, 1))) + string((String.fromCharCode(10))) + string(NAMESPACE["Javascript"].tab(v_level)) + '})()'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Use");
(function () {
  var __PACKAGE__ = "Use";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_javascript", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_javascript_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_javascript_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = v__NAMESPACE.shift(List__));
		(v_level = v__NAMESPACE.shift(List__));
		return((string(NAMESPACE["Javascript"].tab(v_level)) + String.fromCharCode(47) + String.fromCharCode(47) + ' use ' + string(v_self._hash_[('mod')]) + string((String.fromCharCode(10)))));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
})()
;
		// use Perlito5::Javascript::Emitter
;
make_package("main");
(function () {
  var __PACKAGE__ = "main";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_package("Perlito5::Precedence");
(function () {
  var __PACKAGE__ = "Perlito5::Precedence";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
  var v_Operator = null;
  var v_Precedence = null;
  var v_Assoc = null;
  var v_Allow_space_before = null;
  var List_Op = [];
  var v_End_token = null;
  var List_Op_chars = [];
  var v_prec = null;
make_sub(__PACKAGE__, "new", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_class = null;

						(v_class = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE.bless((function () {
	var Hash_a = {};

	(function () {
		var v__i = null;

		var List__a = [];

		(v__i = 0);
		(List__a = ((Array.prototype.slice.call(List__))).slice());
		for ( ; bool(((v__i < v__NAMESPACE.scalar(List__a))));  ) { (function () {
			(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[List__a[v__i]]  = List__a[add(v__i, 1)]); })();
			(v__i = add(v__i, 2));; })() };
	})();
	return((new HashRef(Hash_a)));
})(), v_class));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "is_assoc_type", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_assoc_type = null;

						var v_op_name = null;

						(v_assoc_type = v__NAMESPACE.shift(List__));
						(v_op_name = v__NAMESPACE.shift(List__));
						throw(v_Assoc._hash_[v_assoc_type]._hash_[v_op_name]);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "is_fixity_type", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_fixity_type = null;

						var v_op_name = null;

						(v_fixity_type = v__NAMESPACE.shift(List__));
						(v_op_name = v__NAMESPACE.shift(List__));
						throw(v_Operator._hash_[v_fixity_type]._hash_[v_op_name]);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "is_term", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_token = null;

						(v_token = v__NAMESPACE.shift(List__));
						return(or(((v_token[0] == 'term')), function () { return ((v_token[0] == 'postfix_or_term')); }));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "is_ident_middle", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_c = null;

						(v_c = v__NAMESPACE.shift(List__));
						return(or(or((and((v_c >= 'a'), function () { return (v_c <= 'z'); })), function () { return (and((v_c >= '0'), function () { return (v_c <= '9'); })); }), function () { return ((v_c == '_')); }));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "op_parse", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var v_str = null;

						var v_pos = null;

						(v_self = v__NAMESPACE.shift(List__));
						(v_str = v__NAMESPACE.shift(List__));
						(v_pos = v__NAMESPACE.shift(List__));
						(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_tok) {
							var v_l = null;

							var v_s = null;

							(v_l = v__NAMESPACE.length(v_tok));
							(v_s = v__NAMESPACE.substr(v_str, v_pos, v_l));
							if ( bool(((v_s == v_tok))) ) { (function () {
								var v_c1 = null;

								var v_c2 = null;

								(v_c1 = v__NAMESPACE.substr(v_str, (add(v_pos, v_l) - 1), 1));
								(v_c2 = v__NAMESPACE.substr(v_str, add(v_pos, v_l), 1));
								if ( bool((( bool((and(v__NAMESPACE.is_ident_middle(v_c1), function () { return (or(v__NAMESPACE.is_ident_middle(v_c2), function () { return (v_c2 == '('); })); }))) ? false : true))) ) { (function () {
									throw(CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1,'capture', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'end');
	v__NAMESPACE.push(List_a, v_s);
	return(List_a);
})()));;
								})(); };;
							})(); };; })(a_[i_]) } })(Array.prototype.slice.call((v_End_token)));
						if ( bool(((v__NAMESPACE.substr(v_str, v_pos, 2) == '->'))) ) { (function () {
							var v_m = null;

							(v_m = CLASS["Perlito5::Expression"]._class_.after_arrow(CLASS["Perlito5::Expression"],v_str,add(v_pos, 2)));
							if ( bool(v_m._hash_[('bool')]) ) { (function () {
								throw(v_m);;
							})(); };;
						})(); };
						(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_len) {
							var v_op = null;

							(v_op = v__NAMESPACE.substr(v_str, v_pos, v_len));
							if ( bool(((List_Op[v_len])._hash_.hasOwnProperty(v_op))) ) { (function () {
								var v_c1 = null;

								var v_c2 = null;

								(v_c1 = v__NAMESPACE.substr(v_str, (add(v_pos, v_len) - 1), 1));
								(v_c2 = v__NAMESPACE.substr(v_str, add(v_pos, v_len), 1));
								if ( bool((( bool((and(v__NAMESPACE.is_ident_middle(v_c1), function () { return (or(v__NAMESPACE.is_ident_middle(v_c2), function () { return (v_c2 == '('); })); }))) ? false : true))) ) { (function () {
									throw(CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', add(v_pos, v_len),'bool', 1,'capture', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'op');
	v__NAMESPACE.push(List_a, v_op);
	return(List_a);
})()));;
								})(); };;
							})(); };; })(a_[i_]) } })(List_Op_chars);
						throw(CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'bool', 0));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "add_op", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_fixity = null;

						var v_name = null;

						var v_precedence = null;

						var v_param = null;

						var v_assoc = null;

						(v_fixity = v__NAMESPACE.shift(List__));
						(v_name = v__NAMESPACE.shift(List__));
						(v_precedence = v__NAMESPACE.shift(List__));
						(v_param = v__NAMESPACE.shift(List__));
						if ( bool((( bool(((v_param != null))) ? false : true))) ) { (function () {
							(v_param = (function () {
	var Hash_a = {};

	return((new HashRef(Hash_a)));
})());;
						})(); };
						(v_assoc = or(v_param._hash_['assoc'], function () { return 'left'; }));
						(function () { if (v_Operator == null) { v_Operator = new HashRef({}) }; if (v_Operator._hash_[v_fixity] == null) { v_Operator._hash_[v_fixity] = new HashRef({}) }; return (v_Operator._hash_[v_fixity]._hash_[v_name]  = 1); })();
						(function () { if (v_Precedence == null) { v_Precedence = new HashRef({}) }; return (v_Precedence._hash_[v_name]  = v_precedence); })();
						(function () { if (v_Assoc == null) { v_Assoc = new HashRef({}) }; if (v_Assoc._hash_[v_assoc] == null) { v_Assoc._hash_[v_assoc] = new HashRef({}) }; return (v_Assoc._hash_[v_assoc]._hash_[v_name]  = 1); })();
						(function () { if (v_Allow_space_before == null) { v_Allow_space_before = new HashRef({}) }; if (v_Allow_space_before._hash_[v_fixity] == null) { v_Allow_space_before._hash_[v_fixity] = new HashRef({}) }; return (v_Allow_space_before._hash_[v_fixity]._hash_[v_name]  = ( bool(v_param._hash_['no_space_before']) ? 0 : 1)); })();
						return((function () { if (List_Op == null) { List_Op = [] }; if (List_Op[v__NAMESPACE.length(v_name)] == null) { List_Op[v__NAMESPACE.length(v_name)] = new HashRef({}) }; return (List_Op[v__NAMESPACE.length(v_name)]._hash_[v_name]  = 1); })());;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "precedence_parse", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var v_get_token = null;

						var v_reduce = null;

						var v_last_end_token = null;

						var v_op_stack = null;

						var v_num_stack = null;

						var v_last = null;

						var v_last_has_space = null;

						var v_token = null;

						(v_self = v__NAMESPACE.shift(List__));
						(v_get_token = v_self._hash_['get_token']);
						(v_reduce = v_self._hash_['reduce']);
						(v_last_end_token = v_End_token);
						(v_End_token = v_self._hash_['end_token']);
						(v_op_stack = (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})());
						(v_num_stack = (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})());
						(v_last = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'op');
	v__NAMESPACE.push(List_a, '*start*');
	return(List_a);
})());
						(v_last_has_space = 0);
						(v_token = (v_get_token)());
						if ( bool(((v_token[0]) == 'space')) ) { (function () {
							(v_token = (v_get_token)());;
						})(); };
						for ( ; and(((v_token != null)), function () { return ((v_token[0] != 'end')); });  ) { (function () {
							if ( and(((v_token[1] == ',')), function () { return (or(((v_last[1] == '*start*')), function () { return ((v_last[1] == ',')); })); }) ) { (function () {
								v__NAMESPACE.push((v_num_stack), (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, null);
	return(List_a);
})());;
							})(); };
							if ( bool((and(v_Operator._hash_['prefix']._hash_[v_token[1]], function () { return (or(((v_last[1] == '*start*')), function () { return ( bool((v__NAMESPACE.is_term(v_last))) ? false : true); })); }))) ) { (function () {
								(function () { if (v_token == null) { v_token = [] }; return (v_token[0]  = 'prefix'); })();
								v__NAMESPACE.unshift((v_op_stack), v_token);;
							})(); }
							else { (function () {
								if ( and(and((v_Operator._hash_['postfix'])._hash_[v_token[1]], function () { return v__NAMESPACE.is_term(v_last); }), function () { return (or(v_Allow_space_before._hash_['postfix']._hash_[v_token[1]], function () { return ( bool((v_last_has_space)) ? false : true); })); }) ) { (function () {
									var v_pr = null;

									(v_pr = v_Precedence._hash_[v_token[1]]);
									for ( ; and(v__NAMESPACE.scalar((v_op_stack)), function () { return ((v_pr <= v_Precedence._hash_[(v_op_stack[0])[1]])); });  ) { (function () {
										(v_reduce)(v_op_stack,v_num_stack);; })() };
									if ( bool(((v_token[0]) != 'postfix_or_term')) ) { (function () {
										(function () { if (v_token == null) { v_token = [] }; return (v_token[0]  = 'postfix'); })();;
									})(); };
									v__NAMESPACE.unshift((v_op_stack), v_token);;
								})(); }
								else { (function () {
									if ( and(and(((v_token[1] == 'block')), function () { return v__NAMESPACE.is_term(v_last); }), function () { return v_last_has_space; }) ) { (function () {
										for ( ; bool((v__NAMESPACE.scalar((v_op_stack))));  ) { (function () {
											(v_reduce)(v_op_stack,v_num_stack);; })() };
										v__NAMESPACE.push((v_num_stack), v_token);
										(v_End_token = v_last_end_token);
										throw(v_num_stack);;
									})(); }
									else { (function () {
										if ( bool((v__NAMESPACE.is_term(v_token))) ) { (function () {
											if ( bool((v__NAMESPACE.is_term(v_last))) ) { (function () {
												v__NAMESPACE.say((String.fromCharCode(35) + '      last:  '), v_last);
												v__NAMESPACE.say((String.fromCharCode(35) + '      token: '), v_token);
												v__NAMESPACE.say((String.fromCharCode(35) + '      space: '), v_last_has_space);
												v__NAMESPACE.die(('Value tokens must be separated by an operator'));;
											})(); };
											(function () { if (v_token == null) { v_token = [] }; return (v_token[0]  = 'term'); })();
											v__NAMESPACE.push((v_num_stack), v_token);;
										})(); }
										else { (function () {
											if ( bool((v_Precedence._hash_[v_token[1]])) ) { (function () {
												var v_pr = null;

												(v_pr = v_Precedence._hash_[v_token[1]]);
												if ( bool((v_Assoc._hash_['right']._hash_[v_token[1]])) ) { (function () {
													for ( ; bool((and(v__NAMESPACE.scalar((v_op_stack)), function () { return ((v_pr < v_Precedence._hash_[(v_op_stack[0])[1]])); })));  ) { (function () {
														(v_reduce)(v_op_stack,v_num_stack);; })() };;
												})(); }
												else { (function () {
													for ( ; bool((and(v__NAMESPACE.scalar((v_op_stack)), function () { return ((v_pr <= v_Precedence._hash_[(v_op_stack[0])[1]])); })));  ) { (function () {
														(v_reduce)(v_op_stack,v_num_stack);; })() };;
												})(); };
												if ( bool((v_Operator._hash_['ternary']._hash_[v_token[1]])) ) { (function () {
													(function () { if (v_token == null) { v_token = [] }; return (v_token[0]  = 'ternary'); })();;
												})(); }
												else { (function () {
													(function () { if (v_token == null) { v_token = [] }; return (v_token[0]  = 'infix'); })();;
												})(); };
												v__NAMESPACE.unshift((v_op_stack), v_token);;
											})(); }
											else { (function () {
												v__NAMESPACE.die(('Unknown token: ' + String.fromCharCode(39)), v_token[1], (String.fromCharCode(39)));;
											})(); };;
										})(); };;
									})(); };;
								})(); };;
							})(); };
							(v_last = v_token);
							(v_token = (v_get_token)());
							if ( bool(((v_token[0] == 'space'))) ) { (function () {
								(v_token = (v_get_token)());
								(v_last_has_space = 1);;
							})(); }
							else { (function () {
								(v_last_has_space = 0);;
							})(); };; })() };
						if ( bool((and((v_token != null), function () { return ((v_token[0] != 'end')); }))) ) { (function () {
							v__NAMESPACE.die(('Unexpected end token: '), v_token);;
						})(); };
						for ( ; bool((v__NAMESPACE.scalar((v_op_stack))));  ) { (function () {
							(v_reduce)(v_op_stack,v_num_stack);; })() };
						(v_End_token = v_last_end_token);
						throw(v_num_stack);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
				(v_Operator = (function () {
	var Hash_a = {};

	return((new HashRef(Hash_a)));
})());
				(v_Precedence = (function () {
	var Hash_a = {};

	return((new HashRef(Hash_a)));
})());
				(v_Assoc = (function () {
	var Hash_a = {};

	return((new HashRef(Hash_a)));
})());
				(v_Allow_space_before = (function () {
	var Hash_a = {};

	return((new HashRef(Hash_a)));
})());
				(List_Op_chars = (((function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 3);
	v__NAMESPACE.push(List_a, 2);
	v__NAMESPACE.push(List_a, 1);
	return(List_a);
})())).slice());
				(v_prec = 100);
				v__NAMESPACE.add_op('postfix', '.( )', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['no_space_before']  = 1); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('postfix', '.[ ]', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['no_space_before']  = 1); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('postfix', '.{ }', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['no_space_before']  = 1); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('postfix', '( )', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['no_space_before']  = 1); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('postfix', '[ ]', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['no_space_before']  = 1); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('postfix', 'funcall', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['no_space_before']  = 1); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('postfix', 'funcall_no_params', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['no_space_before']  = 1); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('postfix', 'methcall', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['no_space_before']  = 1); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('postfix', 'methcall_no_params', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['no_space_before']  = 1); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('postfix', 'block', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['no_space_before']  = 1); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('postfix', 'hash', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['no_space_before']  = 1); })();
	return((new HashRef(Hash_a)));
})());
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('prefix', '++', v_prec);
				v__NAMESPACE.add_op('prefix', '--', v_prec);
				v__NAMESPACE.add_op('postfix', '++', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['no_space_before']  = 1); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('postfix', '--', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['no_space_before']  = 1); })();
	return((new HashRef(Hash_a)));
})());
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', '**', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'right'); })();
	return((new HashRef(Hash_a)));
})());
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('prefix', String.fromCharCode(92), v_prec);
				v__NAMESPACE.add_op('prefix', '+', v_prec);
				v__NAMESPACE.add_op('prefix', '-', v_prec);
				v__NAMESPACE.add_op('prefix', '$', v_prec);
				v__NAMESPACE.add_op('prefix', '&', v_prec);
				v__NAMESPACE.add_op('prefix', '*', v_prec);
				v__NAMESPACE.add_op('prefix', '@', v_prec);
				v__NAMESPACE.add_op('prefix', '%', v_prec);
				v__NAMESPACE.add_op('prefix', String.fromCharCode(33), v_prec);
				v__NAMESPACE.add_op('prefix', String.fromCharCode(63), v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', '*', v_prec);
				v__NAMESPACE.add_op('infix', String.fromCharCode(47), v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', '+', v_prec);
				v__NAMESPACE.add_op('infix', '-', v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', 'x', v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', '.', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'list'); })();
	return((new HashRef(Hash_a)));
})());
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', '&', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'list'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('prefix', '&', v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', '|', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'list'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('prefix', '|', v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', '<=>', v_prec);
				v__NAMESPACE.add_op('infix', 'leg', v_prec);
				v__NAMESPACE.add_op('infix', 'cmp', v_prec);
				v__NAMESPACE.add_op('infix', 'does', v_prec);
				v__NAMESPACE.add_op('infix', 'but', v_prec);
				v__NAMESPACE.add_op('infix', '..', v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', 'ne', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'chain'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', 'eq', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'chain'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', 'lt', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'chain'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', 'le', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'chain'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', 'gt', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'chain'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', 'ge', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'chain'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', '<=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'chain'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', '>=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'chain'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', '==', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'chain'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', String.fromCharCode(33) + '=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'chain'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', '<', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'chain'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', '>', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'chain'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', String.fromCharCode(126) + String.fromCharCode(126), v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'chain'); })();
	return((new HashRef(Hash_a)));
})());
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', '&&', v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', '||', v_prec);
				v__NAMESPACE.add_op('infix', String.fromCharCode(47) + String.fromCharCode(47), v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('ternary', String.fromCharCode(63) + String.fromCharCode(63) + ' ' + String.fromCharCode(33) + String.fromCharCode(33), v_prec);
				v__NAMESPACE.add_op('ternary', String.fromCharCode(63) + ' :', v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', '=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'right'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', '||=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'right'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', '&&=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'right'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', '|=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'right'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', '&=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'right'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', String.fromCharCode(47) + String.fromCharCode(47) + '=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'right'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', '+=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'right'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', '-=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'right'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', '*=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'right'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', String.fromCharCode(47) + '=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'right'); })();
	return((new HashRef(Hash_a)));
})());
				v__NAMESPACE.add_op('infix', '.=', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'right'); })();
	return((new HashRef(Hash_a)));
})());
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('prefix', 'not', v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', '=>', v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('list', ',', v_prec, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['assoc']  = 'list'); })();
	return((new HashRef(Hash_a)));
})());
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', 'and', v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', 'or', v_prec);
				(v_prec = (v_prec - 1));
				v__NAMESPACE.add_op('infix', '*start*', v_prec);
				1;
})()
;
})()
;
make_package("main");
(function () {
  var __PACKAGE__ = "main";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
			// use v5
;
			// use Perlito5::AST
;
make_package("Perl5");
(function () {
  var __PACKAGE__ = "Perl5";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
					var Hash_safe_char = {};

make_sub(__PACKAGE__, "tab", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_level = null;

							(v_level = v__NAMESPACE.shift(List__));
							return(str_replicate(('    '), v_level));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					(Hash_safe_char = (function (_h) { var _tmp = {}; for (var _i in _h) { _tmp[_i] = _h[_i]; }; return _tmp; })( ((function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['_']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[',']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['.']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[':']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['-']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['+']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['*']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[' ']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['(']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[')']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['<']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['>']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['[']  = 1); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a[']']  = 1); })();
	return((new HashRef(Hash_a)));
})())._hash_));
					return(make_sub(__PACKAGE__, "escape_string", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_s = null;

		var List_out = [];

		var v_tmp = null;

		(v_s = v__NAMESPACE.shift(List__));
		(v_tmp = '');
		if ( bool((v_s == '')) ) { (function () {
			throw((String.fromCharCode(39) + String.fromCharCode(39)));;
		})(); };
		(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_i) {
			var v_c = null;

			(v_c = v__NAMESPACE.substr(v_s, v_i, 1));
			if ( bool((or(or(or((and((v_c >= 'a'), function () { return (v_c <= 'z'); })), function () { return (and((v_c >= 'A'), function () { return (v_c <= 'Z'); })); }), function () { return (and((v_c >= '0'), function () { return (v_c <= '9'); })); }), function () { return (Hash_safe_char).hasOwnProperty(v_c); }))) ) { (function () {
				(v_tmp = (string(v_tmp) + string(v_c)));;
			})(); }
			else { (function () {
				if ( bool((v_tmp != '')) ) { (function () {
					v__NAMESPACE.push(List_out, (String.fromCharCode(39) + string(v_tmp) + String.fromCharCode(39)));;
				})(); };
				v__NAMESPACE.push(List_out, ('chr(' + string(v__NAMESPACE.ord(v_c)) + string((')'))));
				(v_tmp = '');;
			})(); };; })(a_[i_]) } })(Array.prototype.slice.call((function (a) { for (var i=0, l=(v__NAMESPACE.length(v_s) - 1); i<=l; ++i){ a.push(i) }; return a })([])));
		if ( bool((v_tmp != '')) ) { (function () {
			v__NAMESPACE.push(List_out, (String.fromCharCode(39) + string(v_tmp) + String.fromCharCode(39)));;
		})(); };
		throw(v__NAMESPACE.join(' . ', List_out));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("CompUnit");
(function () {
  var __PACKAGE__ = "CompUnit";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							return(List__[0]._class_.emit_perl5_indented(List__[0],0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "emit_perl5_indented", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							var v_level = null;

							var List_body = [];

							(v_self = List__[0]);
							(v_level = List__[1]);
							(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v__) {
								if ( bool(((v__ != null))) ) { (function () {
									v__NAMESPACE.push(List_body, v__);;
								})(); };; })(a_[i_]) } })(Array.prototype.slice.call((v_self._hash_[('body')])));
							return((string(NAMESPACE["Perl5"].tab(v_level)) + 'package ' + string(v_self._hash_[('name')]) + string((';')) + string((String.fromCharCode(10))) + string(v__NAMESPACE.join((';' + String.fromCharCode(10)), (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5_indented(v__,v_level))}; return out; })(List_body))) + string((';' + String.fromCharCode(10))) + string((String.fromCharCode(10)))));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_program", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_comp_units = null;

		var v_str = null;

		(v_comp_units = List__[0]);
		(v_str = ('' + string(('use v5;' + String.fromCharCode(10))) + string(('use utf8;' + String.fromCharCode(10))) + string(('use strict;' + String.fromCharCode(10))) + string(('use warnings;' + String.fromCharCode(10))) + string(('no warnings (' + String.fromCharCode(39) + 'redefine' + String.fromCharCode(39) + ', ' + String.fromCharCode(39) + 'once' + String.fromCharCode(39) + ', ' + String.fromCharCode(39) + 'void' + String.fromCharCode(39) + ', ' + String.fromCharCode(39) + 'uninitialized' + String.fromCharCode(39) + ', ' + String.fromCharCode(39) + 'misc' + String.fromCharCode(39) + ', ' + String.fromCharCode(39) + 'recursion' + String.fromCharCode(39) + ');' + String.fromCharCode(10))) + string(('use Perlito5::Perl5::Runtime;' + String.fromCharCode(10))) + string(('our ' + '$' + 'MATCH = Perlito5::Match->new();' + String.fromCharCode(10)))));
		(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_comp_unit) {
			(v_str = (string(v_str) + string(v_comp_unit._class_.emit_perl5_indented(v_comp_unit,0))));; })(a_[i_]) } })(Array.prototype.slice.call((v_comp_units)));
		(v_str = (string(v_str) + string(('1;' + String.fromCharCode(10)))));
		throw(v_str);;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Val::Int");
(function () {
  var __PACKAGE__ = "Val::Int";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		return((string(NAMESPACE["Perl5"].tab(v_level)) + string(v_self._hash_[('int')])));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Val::Num");
(function () {
  var __PACKAGE__ = "Val::Num";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		return((string(NAMESPACE["Perl5"].tab(v_level)) + string(v_self._hash_[('num')])));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Val::Buf");
(function () {
  var __PACKAGE__ = "Val::Buf";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		return((string(NAMESPACE["Perl5"].tab(v_level)) + string(NAMESPACE["Perl5"].escape_string(v_self._hash_[('buf')]))));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Lit::Block");
(function () {
  var __PACKAGE__ = "Lit::Block";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		return((string(NAMESPACE["Perl5"].tab(v_level)) + string(('sub ' + '{' + String.fromCharCode(10))) + string(v__NAMESPACE.join((';' + String.fromCharCode(10)), (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5_indented(v__,add(v_level, 1)))}; return out; })((v_self._hash_[('stmts')])))) + string((String.fromCharCode(10))) + string(NAMESPACE["Perl5"].tab(v_level)) + string(('}'))));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Lit::Array");
(function () {
  var __PACKAGE__ = "Lit::Array";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_ast = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		(v_ast = v_self._class_.expand_interpolation(v_self));
		throw(v_ast._class_.emit_perl5_indented(v_ast,v_level));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Lit::Hash");
(function () {
  var __PACKAGE__ = "Lit::Hash";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_ast = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		(v_ast = v_self._class_.expand_interpolation(v_self));
		throw(v_ast._class_.emit_perl5_indented(v_ast,v_level));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Index");
(function () {
  var __PACKAGE__ = "Index";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		if ( bool((and(v_self._hash_[('obj')]._class_.isa(v_self._hash_[('obj')],'Var'), function () { return (v_self._hash_[('obj')]._class_.sigil(v_self._hash_[('obj')]) == '$'); }))) ) { (function () {
			var v_v = null;

			(v_v = v_self._hash_[('obj')]);
			throw((string(v_v._class_.emit_perl5_indented(v_v,v_level)) + '[' + string(v_self._hash_[('index_exp')]._class_.emit_perl5(v_self._hash_[('index_exp')])) + ']'));;
		})(); };
		return((string(v_self._hash_[('obj')]._class_.emit_perl5_indented(v_self._hash_[('obj')],v_level)) + '->[' + string(v_self._hash_[('index_exp')]._class_.emit_perl5(v_self._hash_[('index_exp')])) + ']'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Lookup");
(function () {
  var __PACKAGE__ = "Lookup";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		if ( bool((and(v_self._hash_[('obj')]._class_.isa(v_self._hash_[('obj')],'Var'), function () { return (v_self._hash_[('obj')]._class_.sigil(v_self._hash_[('obj')]) == '$'); }))) ) { (function () {
			var v_v = null;

			(v_v = v_self._hash_[('obj')]);
			throw((string(v_v._class_.emit_perl5_indented(v_v,v_level)) + '{' + string(v_self._hash_[('index_exp')]._class_.emit_perl5(v_self._hash_[('index_exp')])) + '}'));;
		})(); };
		return((string(v_self._hash_[('obj')]._class_.emit_perl5_indented(v_self._hash_[('obj')],v_level)) + '->{' + string(v_self._hash_[('index_exp')]._class_.emit_perl5(v_self._hash_[('index_exp')])) + '}'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Var");
(function () {
  var __PACKAGE__ = "Var";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "emit_perl5_indented", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							var v_level = null;

							var v_ns = null;

							(v_self = List__[0]);
							(v_level = List__[1]);
							(v_ns = '');
							if ( bool((v_self._hash_[('namespace')])) ) { (function () {
								(v_ns = (string(v_self._hash_[('namespace')]) + '::'));;
							})(); };
							throw((string(NAMESPACE["Perl5"].tab(v_level)) + string(v_self._hash_[('sigil')]) + string(v_ns) + string(v_self._hash_[('name')])));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "plain_name", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		(v_self = List__[0]);
		if ( bool((v_self._hash_[('namespace')])) ) { (function () {
			throw((string(v_self._hash_[('namespace')]) + '::' + string(v_self._hash_[('name')])));;
		})(); };
		throw(v_self._hash_[('name')]);;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Proto");
(function () {
  var __PACKAGE__ = "Proto";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		return((string(NAMESPACE["Perl5"].tab(v_level)) + string(v_self._hash_[('name')])));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Call");
(function () {
  var __PACKAGE__ = "Call";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_invocant = null;

		var v_meth = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		(v_invocant = v_self._hash_[('invocant')]._class_.emit_perl5(v_self._hash_[('invocant')]));
		if ( bool(((v_self._hash_[('method')] == 'postcircumfix:<[ ]>'))) ) { (function () {
			throw((string(NAMESPACE["Perl5"].tab(v_level)) + string(v_invocant) + '->[' + string(v_self._hash_[('arguments')]._class_.emit_perl5(v_self._hash_[('arguments')])) + ']'));;
		})(); };
		if ( bool(((v_self._hash_[('method')] == 'postcircumfix:<{ }>'))) ) { (function () {
			throw((string(NAMESPACE["Perl5"].tab(v_level)) + string(v_invocant) + '->{' + string(v_self._hash_[('arguments')]._class_.emit_perl5(v_self._hash_[('arguments')])) + '}'));;
		})(); };
		(v_meth = v_self._hash_[('method')]);
		if ( bool(((v_meth == 'postcircumfix:<( )>'))) ) { (function () {
			(v_meth = '');;
		})(); };
		return((string(NAMESPACE["Perl5"].tab(v_level)) + string(v_invocant) + '->' + string(v_meth) + '(' + string(v__NAMESPACE.join(', ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Apply");
(function () {
  var __PACKAGE__ = "Apply";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
					var Hash_op_prefix_perl5 = {};

					var Hash_op_infix_perl5 = {};

					(Hash_op_prefix_perl5 = (function (_h) { var _tmp = {}; for (var _i in _h) { _tmp[_i] = _h[_i]; }; return _tmp; })( ((function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['say']  = 'Perlito5::Runtime::say'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['print']  = 'print'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['grep']  = 'Perlito5::Runtime::grep'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['sort']  = 'Perlito5::Runtime::sort'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['keys']  = 'keys'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['values']  = 'values'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['warn']  = 'warn'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['prefix:<' + String.fromCharCode(33) + '>']  = String.fromCharCode(33)); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['prefix:<++>']  = '++'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['prefix:<-->']  = '--'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['prefix:<+>']  = '+'); })();
	return((new HashRef(Hash_a)));
})())._hash_));
					(Hash_op_infix_perl5 = (function (_h) { var _tmp = {}; for (var _i in _h) { _tmp[_i] = _h[_i]; }; return _tmp; })( ((function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['list:<.>']  = ' . '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<+>']  = ' + '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<->']  = ' - '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<*>']  = ' * '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<' + String.fromCharCode(47) + '>']  = ' ' + String.fromCharCode(47) + ' '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<>>']  = ' > '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<<>']  = ' < '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<>=>']  = ' >= '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<<=>']  = ' <= '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<x>']  = ' x '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<&&>']  = ' && '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<||>']  = ' || '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<and>']  = ' and '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<or>']  = ' or '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<' + String.fromCharCode(47) + String.fromCharCode(47) + '>']  = ' ' + String.fromCharCode(47) + String.fromCharCode(47) + ' '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<eq>']  = ' eq '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<ne>']  = ' ne '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<le>']  = ' le '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<ge>']  = ' ge '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<==>']  = ' == '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<' + String.fromCharCode(33) + '=>']  = ' ' + String.fromCharCode(33) + '= '); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<=>>']  = ' => '); })();
	return((new HashRef(Hash_a)));
})())._hash_));
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
make_sub(__PACKAGE__, "emit_perl5_indented", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							var v_level = null;

							var v_apply = null;

							var v_ns = null;

							var v_code = null;

							(v_self = List__[0]);
							(v_level = List__[1]);
							(v_apply = v_self._class_.op_assign(v_self));
							if ( bool((v_apply)) ) { (function () {
								throw(v_apply._class_.emit_perl5_indented(v_apply,v_level));;
							})(); };
							(v_ns = '');
							if ( bool((v_self._hash_[('namespace')])) ) { (function () {
								(v_ns = (string(v_self._hash_[('namespace')]) + '::'));;
							})(); };
							(v_code = (string(v_ns) + string(v_self._hash_[('code')])));
							if ( bool((v__NAMESPACE.ref((v_code != '')))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + '(' + string(v_self._hash_[('code')]._class_.emit_perl5(v_self._hash_[('code')])) + ')->(' + string(v__NAMESPACE.join(', ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((Hash_op_infix_perl5).hasOwnProperty(v_code))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + '(' + string(v__NAMESPACE.join(Hash_op_infix_perl5[v_code], ((function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')]))))) + ')'));;
							})(); };
							if ( bool(((Hash_op_prefix_perl5).hasOwnProperty(v_code))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + string(Hash_op_prefix_perl5[v_code]) + '(' + string(v__NAMESPACE.join(', ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((v_self._hash_[('code')] == 'package'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + 'package ' + string(v_self._hash_[('namespace')])));;
							})(); };
							if ( bool(((v_code == 'undef'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + 'undef()'));;
							})(); };
							if ( bool(((v_code == 'scalar'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + 'scalar(' + string((v_self._hash_[('arguments')][0]._class_.emit_perl5(v_self._hash_[('arguments')][0]))) + ')'));;
							})(); };
							if ( bool(((v_code == 'pop'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + 'pop(' + string((v_self._hash_[('arguments')][0]._class_.emit_perl5(v_self._hash_[('arguments')][0]))) + ')'));;
							})(); };
							if ( bool(((v_code == 'push'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + 'push(' + string((v_self._hash_[('arguments')][0]._class_.emit_perl5(v_self._hash_[('arguments')][0]))) + ', ' + string((v_self._hash_[('arguments')][1])._class_.emit_perl5((v_self._hash_[('arguments')][1]))) + ' )'));;
							})(); };
							if ( bool(((v_code == 'shift'))) ) { (function () {
								if ( bool((and(v_self._hash_[('arguments')], function () { return (v_self._hash_[('arguments')]); }))) ) { (function () {
									throw((string(NAMESPACE["Perl5"].tab(v_level)) + 'shift(' + string(v__NAMESPACE.join(' ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
								})(); };
								throw('shift()');;
							})(); };
							if ( bool(((v_code == 'unshift'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + 'unshift(' + string(v_self._hash_[('arguments')][0]._class_.emit_perl5(v_self._hash_[('arguments')][0])) + ', ' + string(v_self._hash_[('arguments')][1]._class_.emit_perl5(v_self._hash_[('arguments')][1])) + ')'));;
							})(); };
							if ( bool(((v_code == 'map'))) ) { (function () {
								var v_str = null;

								(v_str = v__NAMESPACE.shift((v_self._hash_[('arguments')])));
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + 'map(' + string(v_str._class_.emit_perl5(v_str)) + ', ' + string(v__NAMESPACE.join(',', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((v_code == 'join'))) ) { (function () {
								var v_str = null;

								(v_str = v__NAMESPACE.shift((v_self._hash_[('arguments')])));
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + 'join(' + string(v_str._class_.emit_perl5(v_str)) + ', ' + string(v__NAMESPACE.join(',', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((v_code == 'circumfix:<[ ]>'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + '[' + string(v__NAMESPACE.join(', ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + ']'));;
							})(); };
							if ( bool(((v_code == 'prefix:<' + String.fromCharCode(92) + '>'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + String.fromCharCode(92) + string(v__NAMESPACE.join(' ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + ''));;
							})(); };
							if ( bool(((v_code == 'prefix:<$>'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + '${' + string(v__NAMESPACE.join(' ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + '}'));;
							})(); };
							if ( bool(((v_code == 'prefix:<@>'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + '@{' + string(v__NAMESPACE.join(' ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + '}'));;
							})(); };
							if ( bool(((v_code == 'prefix:<%>'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + '%{' + string(v__NAMESPACE.join(' ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + '}'));;
							})(); };
							if ( bool(((v_code == 'postfix:<++>'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + '(' + string(v__NAMESPACE.join(' ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')++'));;
							})(); };
							if ( bool(((v_code == 'postfix:<-->'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + '(' + string(v__NAMESPACE.join(' ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')--'));;
							})(); };
							if ( bool(((v_code == 'infix:<..>'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + '(' + string(v__NAMESPACE.join(' .. ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + string((')'))));;
							})(); };
							if ( bool(((v_code == 'ternary:<' + String.fromCharCode(63) + String.fromCharCode(63) + ' ' + String.fromCharCode(33) + String.fromCharCode(33) + '>'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + '(' + string(v_self._hash_[('arguments')][0]._class_.emit_perl5(v_self._hash_[('arguments')][0])) + ' ' + String.fromCharCode(63) + ' ' + string(v_self._hash_[('arguments')][1]._class_.emit_perl5(v_self._hash_[('arguments')][1])) + ' : ' + string(v_self._hash_[('arguments')][2]._class_.emit_perl5(v_self._hash_[('arguments')][2])) + ')'));;
							})(); };
							if ( bool(((v_code == 'circumfix:<( )>'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + '(' + string(v__NAMESPACE.join(', ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							if ( bool(((v_code == 'infix:<=>'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + string(v__NAMESPACE.emit_perl5_bind(v_self._hash_[('arguments')][0], v_self._hash_[('arguments')][1]))));;
							})(); };
							if ( bool(((v_code == 'return'))) ) { (function () {
								throw((string(NAMESPACE["Perl5"].tab(v_level)) + 'return (' + string(v__NAMESPACE.join(', ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
							})(); };
							return((string(NAMESPACE["Perl5"].tab(v_level)) + string(v_code) + '(' + string(v__NAMESPACE.join(', ', (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5(v__))}; return out; })((v_self._hash_[('arguments')])))) + ')'));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_bind", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_parameters = null;

		var v_arguments = null;

		(v_parameters = v__NAMESPACE.shift(List__));
		(v_arguments = v__NAMESPACE.shift(List__));
		if ( bool((v_parameters._class_.isa(v_parameters,'Call'))) ) { (function () {
			if ( bool((or((v_parameters._class_.method(v_parameters) == 'postcircumfix:<{ }>'), function () { return (v_parameters._class_.method(v_parameters) == 'postcircumfix:<[ ]>'); }))) ) { (function () {
				throw(('(' + string(v_parameters._class_.emit_perl5(v_parameters)) + ' = ' + string(v_arguments._class_.emit_perl5(v_arguments)) + ')'));;
			})(); };;
		})(); };
		return(('(' + string(v_parameters._class_.emit_perl5(v_parameters)) + ' = ' + string(v_arguments._class_.emit_perl5(v_arguments)) + ')'));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("If");
(function () {
  var __PACKAGE__ = "If";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		throw((string(NAMESPACE["Perl5"].tab(v_level)) + 'if (' + string(v_self._hash_[('cond')]._class_.emit_perl5(v_self._hash_[('cond')])) + string((') ' + '{' + String.fromCharCode(10))) + string((( bool(v_self._hash_[('body')]) ? (string(v__NAMESPACE.join((';' + String.fromCharCode(10)), (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5_indented(v__,add(v_level, 1)))}; return out; })((v_self._hash_[('body')]._class_.stmts(v_self._hash_[('body')]))))) + string((String.fromCharCode(10)))) : ''))) + string(NAMESPACE["Perl5"].tab(v_level)) + string(('}')) + string((( and(v_self._hash_[('otherwise')], function () { return v__NAMESPACE.scalar((v_self._hash_[('otherwise')]._class_.stmts(v_self._hash_[('otherwise')]))); }) ? ((String.fromCharCode(10) + string(NAMESPACE["Perl5"].tab(v_level)) + string(('else ' + '{' + String.fromCharCode(10))) + string(v__NAMESPACE.join((';' + String.fromCharCode(10)), (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5_indented(v__,add(v_level, 1)))}; return out; })((v_self._hash_[('otherwise')]._class_.stmts(v_self._hash_[('otherwise')]))))) + string((String.fromCharCode(10))) + string(NAMESPACE["Perl5"].tab(v_level)) + string(('}')))) : '')))));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("While");
(function () {
  var __PACKAGE__ = "While";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_cond = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		(v_cond = v_self._hash_[('cond')]);
		return((string(NAMESPACE["Perl5"].tab(v_level)) + 'for ( ' + string((( bool(v_self._hash_[('init')]) ? (string(v_self._hash_[('init')]._class_.emit_perl5(v_self._hash_[('init')])) + '; ') : '; '))) + string((( bool(v_cond) ? (string(v_cond._class_.emit_perl5(v_cond)) + '; ') : '; '))) + string((( bool(v_self._hash_[('continue')]) ? (string(v_self._hash_[('continue')]._class_.emit_perl5(v_self._hash_[('continue')])) + ' ') : ' '))) + ') {' + string((String.fromCharCode(10))) + string(v__NAMESPACE.join((';' + String.fromCharCode(10)), (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5_indented(v__,add(v_level, 1)))}; return out; })((v_self._hash_[('body')]._class_.stmts(v_self._hash_[('body')]))))) + string((String.fromCharCode(10))) + string(NAMESPACE["Perl5"].tab(v_level)) + string(('}'))));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("For");
(function () {
  var __PACKAGE__ = "For";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_cond = null;

		var v_sig = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		(v_cond = v_self._hash_[('cond')]);
		if ( bool((v_self._hash_[('body')]._class_.sig(v_self._hash_[('body')]))) ) { (function () {
			(v_sig = ('my ' + string(v_self._hash_[('body')]._class_.sig(v_self._hash_[('body')])._class_.emit_perl5(v_self._hash_[('body')]._class_.sig(v_self._hash_[('body')]))) + ' '));;
		})(); };
		throw((string(NAMESPACE["Perl5"].tab(v_level)) + 'for ' + string(v_sig) + '(' + string(v_cond._class_.emit_perl5(v_cond)) + ') {' + string((String.fromCharCode(10))) + string(v__NAMESPACE.join((';' + String.fromCharCode(10)), (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5_indented(v__,add(v_level, 1)))}; return out; })((v_self._hash_[('body')]._class_.stmts(v_self._hash_[('body')]))))) + string((String.fromCharCode(10))) + string(NAMESPACE["Perl5"].tab(v_level)) + string(('}'))));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Decl");
(function () {
  var __PACKAGE__ = "Decl";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_decl = null;

		var v_name = null;

		var v_str = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		(v_decl = v_self._hash_[('decl')]);
		(v_name = v_self._hash_[('var')]._class_.plain_name(v_self._hash_[('var')]));
		(v_str = ('(' + string(v_self._hash_[('decl')]) + ' ' + string(v_self._hash_[('type')]) + ' ' + string(v_self._hash_[('var')]._class_.emit_perl5(v_self._hash_[('var')])) + ')'));
		throw((string(NAMESPACE["Perl5"].tab(v_level)) + string(v_str)));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Sub");
(function () {
  var __PACKAGE__ = "Sub";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_sig = null;

		var v_pos = null;

		var v_i = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		(v_sig = v_self._hash_[('sig')]);
		(v_pos = v_sig._class_.positional(v_sig));
		(v_i = 0);
		return((string(NAMESPACE["Perl5"].tab(v_level)) + 'sub ' + string(v_self._hash_[('name')]) + string((' ' + '{' + String.fromCharCode(10))) + string(v__NAMESPACE.join((';' + String.fromCharCode(10)), (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.emit_perl5_indented(v__,add(v_level, 1)))}; return out; })((v_self._hash_[('block')])))) + string((String.fromCharCode(10))) + string(NAMESPACE["Perl5"].tab(v_level)) + string(('}'))));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Do");
(function () {
  var __PACKAGE__ = "Do";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		var v_block = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		(v_block = v_self._class_.simplify(v_self)._class_.block(v_self._class_.simplify(v_self)));
		return((string(NAMESPACE["Perl5"].tab(v_level)) + string(('(do ' + '{' + String.fromCharCode(10))) + string(v__NAMESPACE.join((';' + String.fromCharCode(10)), (function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(and((v__ != null), function () { return v__._class_.emit_perl5_indented(v__,add(v_level, 1)); }))}; return out; })((v_block)))) + string((String.fromCharCode(10))) + string(NAMESPACE["Perl5"].tab(v_level)) + string(('})'))));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
make_package("Use");
(function () {
  var __PACKAGE__ = "Use";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
				(function () {
make_sub(__PACKAGE__, "emit_perl5", function () {
						var List__ = Array.prototype.slice.call(arguments);
						try {
							var v_self = null;

							(v_self = List__[0]);
							return(v_self._class_.emit_perl5_indented(v_self,0));;
						}
						catch(err) {
							if ( err instanceof Error ) {
								throw(err);
							}
							else {
								return(err);
							}
						}
					});
					return(make_sub(__PACKAGE__, "emit_perl5_indented", function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_self = null;

		var v_level = null;

		(v_self = List__[0]);
		(v_level = List__[1]);
		if ( bool((or((v_self._hash_[('mod')] == 'strict'), function () { return (v_self._hash_[('mod')] == 'feature'); }))) ) { (function () {
			throw((String.fromCharCode(10) + string(NAMESPACE["Perl5"].tab(v_level)) + string((String.fromCharCode(35) + ' use ')) + string(v_self._hash_[('mod')]) + string((String.fromCharCode(10)))));;
		})(); };
		return((string(NAMESPACE["Perl5"].tab(v_level)) + 'use ' + string(v_self._hash_[('mod')])));;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
}));
				})();
})()
;
})()
;
make_package("main");
(function () {
  var __PACKAGE__ = "main";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_package("Perlito5::Expression");
(function () {
  var __PACKAGE__ = "Perlito5::Expression";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
  var v_reduce_to_ast = null;
make_sub(__PACKAGE__, "expand_list", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_param_list = null;

						(v_param_list = v__NAMESPACE.shift(List__));
						if ( bool((and((v__NAMESPACE.ref(v_param_list) == 'Apply'), function () { return (v_param_list._class_.code(v_param_list) == 'list:<,>'); }))) ) { return (function () {
							var v_args = null;

							(v_args = (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})());
							(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_v) {
								if ( bool(((v_v != null))) ) { (function () {
									v__NAMESPACE.push((v_args), v_v);;
								})(); };; })(a_[i_]) } })(Array.prototype.slice.call((v_param_list._class_.arguments(v_param_list))));
							throw(v_args);
						})(); }
						else { return (function () {
							if ( bool(((v_param_list == '*undef*'))) ) { return (function () {
								throw((function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})());
							})(); }
							else { return (function () {
								throw((function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_param_list);
	return(List_a);
})());
							})(); };
						})(); };;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "block_or_hash", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_o = null;

						var v_stmts = null;

						var v_stmt = null;

						(v_o = v__NAMESPACE.shift(List__));
						if ( bool(((v_o._class_.sig(v_o) != null))) ) { (function () {
							throw(v_o);;
						})(); };
						(v_stmts = v_o._class_.stmts(v_o));
						if ( bool((or(( bool(((v_stmts != null))) ? false : true), function () { return (v__NAMESPACE.scalar((v_stmts)) == 0); }))) ) { (function () {
							throw(CLASS["Lit::Hash"]._class_.new(CLASS["Lit::Hash"],'hash1', (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})()));;
						})(); };
						if ( bool(((v__NAMESPACE.scalar((v_stmts)) != 1))) ) { (function () {
							throw(v_o);;
						})(); };
						(v_stmt = v_stmts[0]);
						if ( bool(((v__NAMESPACE.ref(v_stmt) == 'Var'))) ) { (function () {
							throw(CLASS["Lit::Hash"]._class_.new(CLASS["Lit::Hash"],'hash1', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_stmt);
	return(List_a);
})()));;
						})(); };
						if ( bool(((v__NAMESPACE.ref(v_stmt) != 'Apply'))) ) { (function () {
							throw(v_o);;
						})(); };
						if ( bool(((v_stmt._class_.code(v_stmt) == 'infix:<=>>'))) ) { (function () {
							throw(CLASS["Lit::Hash"]._class_.new(CLASS["Lit::Hash"],'hash1', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_stmt);
	return(List_a);
})()));;
						})(); };
						if ( bool(((v_stmt._class_.code(v_stmt) != 'list:<,>'))) ) { (function () {
							throw(v_o);;
						})(); };
						(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_item) {
							if ( bool((and((v__NAMESPACE.ref(v_item) == 'Apply'), function () { return (v_item._class_.code(v_item) == 'infix:<=>>'); }))) ) { (function () {
								throw(CLASS["Lit::Hash"]._class_.new(CLASS["Lit::Hash"],'hash1', v__NAMESPACE.expand_list(v_stmt)));;
							})(); };; })(a_[i_]) } })(Array.prototype.slice.call((v_stmt._class_.arguments(v_stmt))));
						throw(v_o);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "pop_term", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_num_stack = null;

						var v_v = null;

						(v_num_stack = v__NAMESPACE.shift(List__));
						(v_v = v__NAMESPACE.pop((v_num_stack)));
						if ( bool(((v__NAMESPACE.ref(v_v) == 'ARRAY'))) ) { (function () {
							if ( bool(((v_v[1] == 'methcall_no_params'))) ) { (function () {
								(v_v = CLASS["Call"]._class_.new(CLASS["Call"],'invocant', null,'method', v_v[2],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})()));
								throw(v_v);;
							})(); };
							if ( bool(((v_v[1] == 'funcall_no_params'))) ) { (function () {
								(v_v = CLASS["Apply"]._class_.new(CLASS["Apply"],'code', v_v[3],'namespace', v_v[2]));
								throw(v_v);;
							})(); };
							if ( bool(((v_v[1] == 'methcall'))) ) { (function () {
								var v_param_list = null;

								if ( bool((v_v[3])._hash_['end_block']) ) { (function () {
									v__NAMESPACE.unshift((v_num_stack), (v_v[3])._hash_['end_block']);;
								})(); };
								(v_param_list = v__NAMESPACE.expand_list((v_v[3])._hash_['exp']));
								(v_v = CLASS["Call"]._class_.new(CLASS["Call"],'invocant', null,'method', v_v[2],'arguments', v_param_list));
								throw(v_v);;
							})(); };
							if ( bool(((v_v[1] == 'funcall'))) ) { (function () {
								var v_param_list = null;

								if ( bool((v_v[4])._hash_['end_block']) ) { (function () {
									v__NAMESPACE.unshift((v_num_stack), (v_v[4])._hash_['end_block']);;
								})(); };
								(v_param_list = v__NAMESPACE.expand_list((v_v[4])._hash_['exp']));
								(v_v = CLASS["Apply"]._class_.new(CLASS["Apply"],'code', v_v[3],'arguments', v_param_list,'namespace', v_v[2]));
								throw(v_v);;
							})(); };
							if ( bool(((v_v[1] == '( )'))) ) { (function () {
								var v_param_list = null;

								(v_param_list = v__NAMESPACE.expand_list(v_v[2]));
								(v_v = CLASS["Apply"]._class_.new(CLASS["Apply"],'code', 'circumfix:<( )>','arguments', v_param_list,'namespace', ''));
								throw(v_v);;
							})(); };
							if ( bool(((v_v[1] == '[ ]'))) ) { (function () {
								var v_param_list = null;

								(v_param_list = v__NAMESPACE.expand_list(v_v[2]));
								(v_v = CLASS["Lit::Array"]._class_.new(CLASS["Lit::Array"],'array1', v_param_list));
								throw(v_v);;
							})(); };
							if ( bool(((v_v[1] == 'block'))) ) { (function () {
								(v_v = CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', v_v[2],'sig', v_v[3]));
								(v_v = v__NAMESPACE.block_or_hash(v_v));
								throw(v_v);;
							})(); };
							if ( bool(((v_v[1] == '.( )'))) ) { (function () {
								(v_v = CLASS["Call"]._class_.new(CLASS["Call"],'invocant', null,'method', 'postcircumfix:<( )>','arguments', v_v[2]));
								throw(v_v);;
							})(); };
							if ( bool(((v_v[1] == '.[ ]'))) ) { (function () {
								(v_v = CLASS["Index"]._class_.new(CLASS["Index"],'obj', null,'index_exp', v_v[2]));
								throw(v_v);;
							})(); };
							if ( bool(((v_v[1] == '.{ }'))) ) { (function () {
								(v_v = CLASS["Lookup"]._class_.new(CLASS["Lookup"],'obj', null,'index_exp', v_v[2]));
								throw(v_v);;
							})(); };
							if ( bool((and((v__NAMESPACE.ref(v_v[1]) == 'ARRAY'), function () { return (v__NAMESPACE.scalar(v_v[1]) == 2); }))) ) { (function () {
								(v_v = CLASS["Apply"]._class_.new(CLASS["Apply"],'code', 'pair','arguments', v_v[1],'namespace', ''));
								throw(v_v);;
							})(); };
							throw(v_v[1]);;
						})(); };
						throw(v_v);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "reduce_postfix", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_op = null;

						var v_value = null;

						var v_v = null;

						(v_op = v__NAMESPACE.shift(List__));
						(v_value = v__NAMESPACE.shift(List__));
						(v_v = v_op);
						if ( bool(((v_v[1] == 'methcall_no_params'))) ) { (function () {
							(v_v = CLASS["Call"]._class_.new(CLASS["Call"],'invocant', v_value,'method', v_v[2],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})()));
							throw(v_v);;
						})(); };
						if ( bool(((v_v[1] == 'funcall_no_params'))) ) { (function () {
							v__NAMESPACE.die(('unexpected function call'));
							v__NAMESPACE.push((v_v), v_value);
							throw(v_v);;
						})(); };
						if ( bool(((v_v[1] == 'methcall'))) ) { (function () {
							var v_param_list = null;

							(v_param_list = v__NAMESPACE.expand_list(v_v[3]._hash_['exp']));
							(v_v = CLASS["Call"]._class_.new(CLASS["Call"],'invocant', v_value,'method', v_v[2],'arguments', v_param_list));
							throw(v_v);;
						})(); };
						if ( bool(((v_v[1] == 'funcall'))) ) { (function () {
							v__NAMESPACE.die(('unexpected function call'));
							v__NAMESPACE.push((v_v), v_value);
							throw(v_v);;
						})(); };
						if ( bool(((v_v[1] == '( )'))) ) { (function () {
							var v_param_list = null;

							(v_param_list = v__NAMESPACE.expand_list(v_v[2]));
							if ( bool((and((v__NAMESPACE.ref(v_value) == 'Apply'), function () { return ( bool(((v_value._class_.arguments(v_value) != null))) ? false : true); }))) ) { (function () {
								(function () { if (v_value == null) { v_value = new HashRef({}) }; return (v_value._hash_['arguments']  = v_param_list); })();
								throw(v_value);;
							})(); };
							if ( bool((and((v__NAMESPACE.ref(v_value) == 'Call'), function () { return ( bool(((v_value._class_.arguments(v_value) != null))) ? false : true); }))) ) { (function () {
								(function () { if (v_value == null) { v_value = new HashRef({}) }; return (v_value._hash_['arguments']  = v_param_list); })();
								throw(v_value);;
							})(); };
							(v_v = CLASS["Call"]._class_.new(CLASS["Call"],'invocant', v_value,'method', 'postcircumfix:<( )>','arguments', v_param_list));
							throw(v_v);;
						})(); };
						if ( bool(((v_v[1] == '[ ]'))) ) { (function () {
							(v_v = CLASS["Index"]._class_.new(CLASS["Index"],'obj', v_value,'index_exp', v_v[2]));
							throw(v_v);;
						})(); };
						if ( bool(((v_v[1] == 'block'))) ) { (function () {
							(v_v = CLASS["Lookup"]._class_.new(CLASS["Lookup"],'obj', v_value,'index_exp', (v_v[2])[0]));
							throw(v_v);;
						})(); };
						if ( bool(((v_v[1] == '.( )'))) ) { (function () {
							var v_param_list = null;

							(v_param_list = v__NAMESPACE.expand_list(v_v[2]));
							(v_v = CLASS["Call"]._class_.new(CLASS["Call"],'invocant', v_value,'method', 'postcircumfix:<( )>','arguments', v_param_list));
							throw(v_v);;
						})(); };
						if ( bool(((v_v[1] == '.[ ]'))) ) { (function () {
							(v_v = CLASS["Call"]._class_.new(CLASS["Call"],'invocant', v_value,'method', 'postcircumfix:<[ ]>','arguments', v_v[2]));
							throw(v_v);;
						})(); };
						if ( bool(((v_v[1] == '.{ }'))) ) { (function () {
							(v_v = CLASS["Call"]._class_.new(CLASS["Call"],'invocant', v_value,'method', 'postcircumfix:<{ }>','arguments', v_v[2]));
							throw(v_v);;
						})(); };
						v__NAMESPACE.push((v_op), v_value);
						throw(v_op);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "after_arrow", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.opt_ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(or(((function () {
	return(and(and(and((and(('(' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.paren_parse(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['paren_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and((')' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'postfix_or_term');
	v__NAMESPACE.push(List_a, '.( )');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('paren_parse')]._class_.flat(v_MATCH._hash_[('paren_parse')]));
	return(List_a);
})()); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and((and(('[' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.square_parse(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['square_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and((']' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'postfix_or_term');
	v__NAMESPACE.push(List_a, '.[ ]');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('square_parse')]._class_.flat(v_MATCH._hash_[('square_parse')]));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and((and(('{' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.curly_parse(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['curly_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and(('}' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'postfix_or_term');
	v__NAMESPACE.push(List_a, '.{ }');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('curly_parse')]._class_.flat(v_MATCH._hash_[('curly_parse')]));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ident(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.opt_ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(and(and((and(('(' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.paren_parse(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['paren_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and((')' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'postfix_or_term');
	v__NAMESPACE.push(List_a, 'methcall');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('Perlito5::Grammar.ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.ident')]));
	v__NAMESPACE.push(List_a, (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['end_block']  = null); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['exp']  = v_MATCH._hash_[('paren_parse')]._class_.flat(v_MATCH._hash_[('paren_parse')])); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['terminated']  = 0); })();
	return((new HashRef(Hash_a)));
})());
	return(List_a);
})()); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'postfix_or_term');
	v__NAMESPACE.push(List_a, 'methcall_no_params');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('Perlito5::Grammar.ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.ident')]));
	return(List_a);
})()); })();
	return(1);
})())));
})()); }));
})()); })));
})()); }));
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "operator", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(or(or(or(or(or(or(or(or(or(or(or(or(or(((function () {
	return(and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.var_sigil(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.var_sigil']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(and(and((and(('{' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.curly_parse(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['curly_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and(('}' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_MATCH._hash_[('curly_parse')]._class_.flat(v_MATCH._hash_[('curly_parse')]));
	return(List_a);
})(),'code', ('prefix:<' + string(v_MATCH._hash_[('Perlito5::Grammar.var_sigil')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.var_sigil')])) + '>'),'namespace', ''));
	return(List_a);
})()); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.optional_namespace_before_ident(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.optional_namespace_before_ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.var_name(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.var_name']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, CLASS["Var"]._class_.new(CLASS["Var"],'sigil', v_MATCH._hash_[('Perlito5::Grammar.var_sigil')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.var_sigil')]),'namespace', v_MATCH._hash_[('Perlito5::Grammar.optional_namespace_before_ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.optional_namespace_before_ident')]),'name', v_MATCH._hash_[('Perlito5::Grammar.var_name')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.var_name')])));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }));
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and((and(('(' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.paren_parse(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['paren_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and((')' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'postfix_or_term');
	v__NAMESPACE.push(List_a, '( )');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('paren_parse')]._class_.flat(v_MATCH._hash_[('paren_parse')]));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and((and(('[' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.square_parse(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['square_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and((']' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'postfix_or_term');
	v__NAMESPACE.push(List_a, '[ ]');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('square_parse')]._class_.flat(v_MATCH._hash_[('square_parse')]));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and(and(and((and(('{' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.exp_stmts(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.exp_stmts']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()); }), function () { return (and(('}' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'postfix_or_term');
	v__NAMESPACE.push(List_a, 'block');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('Perlito5::Grammar.exp_stmts')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.exp_stmts')]));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and((and(('sub' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 3)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(3, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.sub_def(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.sub_def']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('Perlito5::Grammar.sub_def')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.sub_def')]));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and((and(('token' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 5)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(5, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.token(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.token']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('Perlito5::Grammar.token')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.token')]));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and((and(('do' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 2)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(2, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.statement_parse(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['statement_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, CLASS["Do"]._class_.new(CLASS["Do"],'block', v_MATCH._hash_[('statement_parse')]._class_.flat(v_MATCH._hash_[('statement_parse')])));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and((and((String.fromCharCode(63) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ternary5_parse(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['ternary5_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and((':' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'op');
	v__NAMESPACE.push(List_a, String.fromCharCode(63) + String.fromCharCode(63) + ' ' + String.fromCharCode(33) + String.fromCharCode(33));
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('ternary5_parse')]._class_.flat(v_MATCH._hash_[('ternary5_parse')]));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Precedence"]._class_.op_parse(CLASS["Perlito5::Precedence"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Precedence.op_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('Perlito5::Precedence.op_parse')]._class_.flat(v_MATCH._hash_[('Perlito5::Precedence.op_parse')])); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and(and(and((and(('use' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 3)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(3, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.full_ident(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.full_ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and((and(('-' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ident(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		if ( bool(((v_MATCH)._hash_.hasOwnProperty('Perlito5::Grammar.ident'))) ) { (function () {
			v__NAMESPACE.push((v_MATCH._hash_['Perlito5::Grammar.ident']), v_m2);;
		})(); }
		else { (function () {
			(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.ident']  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_m2);
	return(List_a);
})()); })();;
		})(); };
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }));
})()));
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.list_parse(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['list_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, CLASS["Use"]._class_.new(CLASS["Use"],'mod', v_MATCH._hash_[('Perlito5::Grammar.full_ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.full_ident')])));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and((and(('package' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 7)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(7, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.full_ident(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.full_ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'code', 'package','arguments', (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})(),'namespace', v_MATCH._hash_[('Perlito5::Grammar.full_ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.full_ident')])));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and(and(and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.declarator(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.declarator']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.opt_type(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.opt_type']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.opt_ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.var_ident(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.var_ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, CLASS["Decl"]._class_.new(CLASS["Decl"],'decl', v_MATCH._hash_[('Perlito5::Grammar.declarator')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.declarator')]),'type', v_MATCH._hash_[('Perlito5::Grammar.opt_type')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.opt_type')]),'var', v_MATCH._hash_[('Perlito5::Grammar.var_ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.var_ident')])));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.digit(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? 1 : 0)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.val_num(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.val_num']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('Perlito5::Grammar.val_num')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.val_num')]));
	return(List_a);
})()); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.val_int(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.val_int']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('Perlito5::Grammar.val_int')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.val_int')]));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }));
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.word(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? 1 : 0)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.optional_namespace_before_ident(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.optional_namespace_before_ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ident(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(or(((function () {
	return(and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()), function () { return (and(('=>' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 2)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(2, v_MATCH._hash_[('to')])); })()); })); }));
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? 1 : 0)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return ((function () {
	var v_namespace = null;

	var v_name = null;

	(v_namespace = v_MATCH._hash_[('Perlito5::Grammar.optional_namespace_before_ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.optional_namespace_before_ident')]));
	(v_name = v_MATCH._hash_[('Perlito5::Grammar.ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.ident')]));
	if ( bool((v_namespace)) ) { (function () {
		(v_name = (string(v_namespace) + '::' + string(v_name)));;
	})(); };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, CLASS["Val::Buf"]._class_.new(CLASS["Val::Buf"],'buf', v_name));
	return(List_a);
})()); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.list_parse(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['list_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'postfix_or_term');
	v__NAMESPACE.push(List_a, 'funcall');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('Perlito5::Grammar.optional_namespace_before_ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.optional_namespace_before_ident')]));
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('Perlito5::Grammar.ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.ident')]));
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('list_parse')]._class_.flat(v_MATCH._hash_[('list_parse')]));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(('->' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 2)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(2, v_MATCH._hash_[('to')])); })()); }));
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? 1 : 0)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return ((function () {
	var v_namespace = null;

	var v_name = null;

	(v_namespace = v_MATCH._hash_[('Perlito5::Grammar.optional_namespace_before_ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.optional_namespace_before_ident')]));
	(v_name = v_MATCH._hash_[('Perlito5::Grammar.ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.ident')]));
	if ( bool((v_namespace)) ) { (function () {
		(v_name = (string(v_namespace) + '::' + string(v_name)));;
	})(); };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, CLASS["Proto"]._class_.new(CLASS["Proto"],'name', v_name));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'postfix_or_term');
	v__NAMESPACE.push(List_a, 'funcall_no_params');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('Perlito5::Grammar.optional_namespace_before_ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.optional_namespace_before_ident')]));
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('Perlito5::Grammar.ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.ident')]));
	return(List_a);
})()); })();
	return(1);
})())));
})()); }));
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.val_buf(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.val_buf']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'term');
	v__NAMESPACE.push(List_a, v_MATCH._hash_[('Perlito5::Grammar.val_buf')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.val_buf')]));
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'space');
	v__NAMESPACE.push(List_a, ' ');
	return(List_a);
})()); })();
	return(1);
})()); })));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "has_newline_after", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(((function () {
	return(and((String.fromCharCode(35) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.is_newline(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.space(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.has_newline_after(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); })));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "has_no_comma_or_colon_after", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and((',' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and((':' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }))));
})()); }));
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? false : true)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()); }), function () { return (and(('' != v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "list_parse", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var v_str = null;

						var v_pos = null;

						var v_expr = null;

						var v_last_pos = null;

						var v_is_first_token = null;

						var v_lexer_stack = null;

						var v_terminated = null;

						var v_last_token_was_space = null;

						var v_get_token = null;

						var v_prec = null;

						var v_res = null;

						var v_block = null;

						var v_result = null;

						(v_self = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_last_pos = v_pos);
						(v_is_first_token = 1);
						(v_lexer_stack = (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})());
						(v_terminated = 0);
						(v_last_token_was_space = 1);
						(v_get_token = function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_v = null;

		if ( bool((v__NAMESPACE.scalar((v_lexer_stack)))) ) { (function () {
			(v_v = v__NAMESPACE.pop((v_lexer_stack)));
			if ( bool((and(and(v_is_first_token, function () { return ((v_v[0] == 'op')); }), function () { return ( bool((NAMESPACE["Perlito5::Precedence"].is_fixity_type('prefix', v_v[1]))) ? false : true); }))) ) { (function () {
				(function () { if (v_v == null) { v_v = [] }; return (v_v[0]  = 'end'); })();;
			})(); };;
		})(); }
		else { (function () {
			var v_m = null;

			(v_m = v_self._class_.operator(v_self,v_str,v_last_pos));
			if ( bool((( bool(v_m._class_.bool(v_m)) ? false : true))) ) { (function () {
				throw((function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'end');
	v__NAMESPACE.push(List_a, '*end*');
	return(List_a);
})());;
			})(); };
			(v_v = v_m._class_.flat(v_m));
			if ( bool((and(and(v_is_first_token, function () { return ((v_v[0] == 'op')); }), function () { return ( bool((NAMESPACE["Perlito5::Precedence"].is_fixity_type('prefix', v_v[1]))) ? false : true); }))) ) { (function () {
				(function () { if (v_v == null) { v_v = [] }; return (v_v[0]  = 'end'); })();;
			})(); };
			if ( bool(((v_v[0] != 'end'))) ) { (function () {
				(v_last_pos = v_m._class_.to(v_m));;
			})(); };;
		})(); };
		if ( bool((and(and((v_v[0] == 'postfix_or_term'), function () { return (v_v[1] == 'block'); }), function () { return v_last_token_was_space; }))) ) { (function () {
			if ( bool((v_self._class_.has_newline_after(v_self,v_str,v_last_pos)._class_.bool(v_self._class_.has_newline_after(v_self,v_str,v_last_pos)))) ) { (function () {
				(v_terminated = 1);
				v__NAMESPACE.push((v_lexer_stack), (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'end');
	v__NAMESPACE.push(List_a, '*end*');
	return(List_a);
})());;
			})(); }
			else { (function () {
				if ( bool((v_self._class_.has_no_comma_or_colon_after(v_self,v_str,v_last_pos)._class_.bool(v_self._class_.has_no_comma_or_colon_after(v_self,v_str,v_last_pos)))) ) { (function () {
					(v_terminated = 1);
					v__NAMESPACE.push((v_lexer_stack), (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'end');
	v__NAMESPACE.push(List_a, '*end*');
	return(List_a);
})());;
				})(); };;
			})(); };;
		})(); };
		(v_last_token_was_space = ((v_v[0] == 'space')));
		(v_is_first_token = 0);
		throw(v_v);;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
});
						(v_prec = CLASS["Perlito5::Precedence"]._class_.new(CLASS["Perlito5::Precedence"],'get_token', v_get_token,'reduce', v_reduce_to_ast,'end_token', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'and');
	v__NAMESPACE.push(List_a, 'or');
	v__NAMESPACE.push(List_a, ':');
	v__NAMESPACE.push(List_a, ']');
	v__NAMESPACE.push(List_a, ')');
	v__NAMESPACE.push(List_a, '}');
	v__NAMESPACE.push(List_a, ';');
	v__NAMESPACE.push(List_a, 'if');
	v__NAMESPACE.push(List_a, 'else');
	v__NAMESPACE.push(List_a, 'elsif');
	v__NAMESPACE.push(List_a, 'unless');
	v__NAMESPACE.push(List_a, 'when');
	v__NAMESPACE.push(List_a, 'foreach');
	v__NAMESPACE.push(List_a, 'for');
	v__NAMESPACE.push(List_a, 'while');
	return(List_a);
})()));
						(v_res = v_prec._class_.precedence_parse(v_prec));
						if ( bool(((v__NAMESPACE.scalar((v_res)) == 0))) ) { (function () {
							throw(CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_last_pos,'bool', 1,'capture', (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['exp']  = '*undef*'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['end_block']  = null); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['terminated']  = null); })();
	return((new HashRef(Hash_a)));
})()));;
						})(); };
						if ( bool(((v__NAMESPACE.scalar((v_res)) > 1))) ) { (function () {
							(v_block = v__NAMESPACE.pop((v_res)));
							(v_block = CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', v_block[2],'sig', v_block[3]));;
						})(); };
						(v_result = v__NAMESPACE.pop_term(v_res));
						if ( bool(((v__NAMESPACE.scalar((v_res)) > 0))) ) { (function () {
							(v_block = v__NAMESPACE.pop((v_res)));
							(v_block = CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', v_block[2],'sig', v_block[3]));;
						})(); };
						throw(CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_last_pos,'bool', 1,'capture', (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['exp']  = v_result); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['end_block']  = v_block); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['terminated']  = v_terminated); })();
	return((new HashRef(Hash_a)));
})()));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "circumfix_parse", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var v_str = null;

						var v_pos = null;

						var v_delimiter = null;

						var v_expr = null;

						var v_last_pos = null;

						var v_get_token = null;

						var v_prec = null;

						var v_res = null;

						(v_self = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_delimiter = List__[3]);
						(v_last_pos = v_pos);
						(v_get_token = function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_m = null;

		var v_v = null;

		(v_m = v_self._class_.operator(v_self,v_str,v_last_pos));
		if ( bool((( bool(v_m._class_.bool(v_m)) ? false : true))) ) { (function () {
			v__NAMESPACE.die(('Expected closing delimiter: '), (v_delimiter), ' near ', v_last_pos);;
		})(); };
		(v_v = v_m._class_.flat(v_m));
		if ( bool(((v_v[0] != 'end'))) ) { (function () {
			(v_last_pos = v_m._class_.to(v_m));;
		})(); };
		throw(v_v);;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
});
						(v_prec = CLASS["Perlito5::Precedence"]._class_.new(CLASS["Perlito5::Precedence"],'get_token', v_get_token,'reduce', v_reduce_to_ast,'end_token', v_delimiter));
						(v_res = v_prec._class_.precedence_parse(v_prec));
						(v_res = v__NAMESPACE.pop_term(v_res));
						if ( bool((( bool(((v_res != null))) ? false : true))) ) { (function () {
							(v_res = '*undef*');;
						})(); };
						throw(CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_last_pos,'bool', 1,'capture', v_res));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "ternary5_parse", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var v_str = null;

						var v_pos = null;

						(v_self = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						throw(v_self._class_.circumfix_parse(v_self,v_str,v_pos,(function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, ':');
	return(List_a);
})()));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "curly_parse", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var v_str = null;

						var v_pos = null;

						(v_self = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						throw(v_self._class_.circumfix_parse(v_self,v_str,v_pos,(function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, '}');
	return(List_a);
})()));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "square_parse", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var v_str = null;

						var v_pos = null;

						(v_self = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						throw(v_self._class_.circumfix_parse(v_self,v_str,v_pos,(function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, ']');
	return(List_a);
})()));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "paren_parse", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var v_str = null;

						var v_pos = null;

						(v_self = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						throw(v_self._class_.circumfix_parse(v_self,v_str,v_pos,(function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, ')');
	return(List_a);
})()));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "exp_parse", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var v_str = null;

						var v_pos = null;

						var v_expr = null;

						var v_last_pos = null;

						var v_lexer_stack = null;

						var v_terminated = null;

						var v_get_token = null;

						var v_prec = null;

						var v_res = null;

						var v_block = null;

						var v_result = null;

						(v_self = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_last_pos = v_pos);
						(v_lexer_stack = (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})());
						(v_terminated = 0);
						(v_get_token = function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_v = null;

		if ( bool((v__NAMESPACE.scalar((v_lexer_stack)))) ) { (function () {
			(v_v = v__NAMESPACE.pop((v_lexer_stack)));;
		})(); }
		else { (function () {
			var v_m = null;

			(v_m = v_self._class_.operator(v_self,v_str,v_last_pos));
			if ( bool((( bool(v_m._class_.bool(v_m)) ? false : true))) ) { (function () {
				throw((function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'end');
	v__NAMESPACE.push(List_a, '*end*');
	return(List_a);
})());;
			})(); };
			(v_v = v_m._class_.flat(v_m));
			if ( bool(((v_v[0] != 'end'))) ) { (function () {
				(v_last_pos = v_m._class_.to(v_m));;
			})(); };;
		})(); };
		if ( bool((or(or(or((and((v_v[0] == 'postfix_or_term'), function () { return (v_v[1] == 'block'); })), function () { return (and((v_v[0] == 'term'), function () { return (v__NAMESPACE.ref(v_v[1]) == 'Sub'); })); }), function () { return (and((v_v[0] == 'term'), function () { return (v__NAMESPACE.ref(v_v[1]) == 'Do'); })); }), function () { return (and((v_v[0] == 'term'), function () { return (v__NAMESPACE.ref(v_v[1]) == 'CompUnit'); })); }))) ) { (function () {
			if ( bool((v_self._class_.has_newline_after(v_self,v_str,v_last_pos)._class_.bool(v_self._class_.has_newline_after(v_self,v_str,v_last_pos)))) ) { (function () {
				(v_terminated = 1);
				v__NAMESPACE.push((v_lexer_stack), (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, 'end');
	v__NAMESPACE.push(List_a, '*end*');
	return(List_a);
})());;
			})(); };;
		})(); };
		throw(v_v);;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
});
						(v_prec = CLASS["Perlito5::Precedence"]._class_.new(CLASS["Perlito5::Precedence"],'get_token', v_get_token,'reduce', v_reduce_to_ast,'end_token', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, ']');
	v__NAMESPACE.push(List_a, ')');
	v__NAMESPACE.push(List_a, '}');
	v__NAMESPACE.push(List_a, ';');
	v__NAMESPACE.push(List_a, 'if');
	v__NAMESPACE.push(List_a, 'else');
	v__NAMESPACE.push(List_a, 'elsif');
	v__NAMESPACE.push(List_a, 'unless');
	v__NAMESPACE.push(List_a, 'when');
	v__NAMESPACE.push(List_a, 'foreach');
	v__NAMESPACE.push(List_a, 'for');
	v__NAMESPACE.push(List_a, 'while');
	return(List_a);
})()));
						(v_res = v_prec._class_.precedence_parse(v_prec));
						if ( bool(((v__NAMESPACE.scalar((v_res)) == 0))) ) { (function () {
							throw(CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'bool', 0));;
						})(); };
						if ( bool(((v__NAMESPACE.scalar((v_res)) > 1))) ) { (function () {
							(v_block = v__NAMESPACE.pop((v_res)));
							(v_block = CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', v_block[2],'sig', v_block[3]));;
						})(); };
						(v_result = v__NAMESPACE.pop_term(v_res));
						if ( bool(((v__NAMESPACE.scalar((v_res)) > 0))) ) { (function () {
							(v_block = v__NAMESPACE.pop((v_res)));
							if ( bool((( bool(((v__NAMESPACE.ref(v_block) == 'Lit::Block'))) ? false : true))) ) { (function () {
								(v_block = CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', v_block[2],'sig', v_block[3]));;
							})(); };;
						})(); };
						throw(CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_last_pos,'bool', 1,'capture', (function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['exp']  = v_result); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['end_block']  = v_block); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['terminated']  = v_terminated); })();
	return((new HashRef(Hash_a)));
})()));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "exp_stmt", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(or(or(((function () {
	return(and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.if(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.if']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('Perlito5::Grammar.if')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.if')])); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.unless(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.unless']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('Perlito5::Grammar.unless')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.unless')])); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.when(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.when']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('Perlito5::Grammar.when')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.when')])); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.for(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.for']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('Perlito5::Grammar.for')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.for')])); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.while(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.while']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('Perlito5::Grammar.while')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.while')])); })();
	return(1);
})()); })));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "statement_modifier", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(or(or(or(((function () {
	return(and(('if' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 2)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(2, v_MATCH._hash_[('to')])); })()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('unless' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 6)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(6, v_MATCH._hash_[('to')])); })()); }))));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('when' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 4)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(4, v_MATCH._hash_[('to')])); })()); }))));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('foreach' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 7)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(7, v_MATCH._hash_[('to')])); })()); }))));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('for' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 3)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(3, v_MATCH._hash_[('to')])); })()); }))));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('while' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 5)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(5, v_MATCH._hash_[('to')])); })()); }))));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "delimited_statement", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and((and((';' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.statement_parse(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['statement_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	return(and((';' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()); }), function () { return ((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.ws(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('statement_parse')]._class_.flat(v_MATCH._hash_[('statement_parse')])); })();
	return(1);
})()); })));
})()); }));
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "statement_parse", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var v_str = null;

						var v_pos = null;

						var v_expr = null;

						var v_last_pos = null;

						var v_lexer_stack = null;

						var v_res = null;

						var v_modifier = null;

						var v_modifier_exp = null;

						(v_self = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_last_pos = v_pos);
						(v_lexer_stack = (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})());
						(v_res = v_self._class_.exp_stmt(v_self,v_str,v_pos));
						if ( bool((v_res._class_.bool(v_res))) ) { (function () {
							throw(v_res);;
						})(); };
						(v_res = v_self._class_.exp_parse(v_self,v_str,v_pos));
						if ( bool((( bool(v_res._class_.bool(v_res)) ? false : true))) ) { (function () {
							throw(v_res);;
						})(); };
						if ( bool(((v__NAMESPACE.ref(v_res._class_.flat(v_res)._hash_['exp']) == 'Lit::Block'))) ) { (function () {
							(function () { return (v_res._class_.flat(v_res)._hash_['exp']  = CLASS["Do"]._class_.new(CLASS["Do"],'block', v_res._class_.flat(v_res)._hash_['exp'])); })();;
						})(); };
						if ( bool((v_res._class_.flat(v_res)._hash_['end_block'])) ) { (function () {
							v__NAMESPACE.die(('Unexpected block after expression near '), v_pos);;
						})(); };
						if ( bool((v_res._class_.flat(v_res)._hash_['terminated'])) ) { (function () {
							(function () { if (v_res == null) { v_res = new HashRef({}) }; return (v_res._hash_[('capture')]  = v_res._class_.flat(v_res)._hash_['exp']); })();
							throw(v_res);;
						})(); };
						(v_modifier = v_self._class_.statement_modifier(v_self,v_str,v_res._class_.to(v_res)));
						if ( bool((( bool(v_modifier._class_.bool(v_modifier)) ? false : true))) ) { (function () {
							(function () { if (v_res == null) { v_res = new HashRef({}) }; return (v_res._hash_[('capture')]  = v_res._class_.flat(v_res)._hash_['exp']); })();
							throw(v_res);;
						})(); };
						(v_modifier_exp = v_self._class_.exp_parse(v_self,v_str,v_modifier._class_.to(v_modifier)));
						if ( bool((( bool(v_modifier_exp._class_.bool(v_modifier_exp)) ? false : true))) ) { (function () {
							v__NAMESPACE.die(('Expected expression after ' + String.fromCharCode(39)), v_modifier._class_.flat(v_modifier), (String.fromCharCode(39)));;
						})(); };
						if ( bool((v_modifier_exp._class_.flat(v_modifier_exp)._hash_['end_block'])) ) { (function () {
							v__NAMESPACE.die(('Unexpected block after expression near '), v_modifier._class_.to(v_modifier));;
						})(); };
						(v_modifier = v_modifier._class_.flat(v_modifier));
						if ( bool(((v_modifier == 'if'))) ) { (function () {
							throw(CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_modifier_exp._class_.to(v_modifier_exp),'bool', 1,'capture', CLASS["If"]._class_.new(CLASS["If"],'cond', v_modifier_exp._class_.flat(v_modifier_exp)._hash_['exp'],'body', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_res._class_.flat(v_res)._hash_['exp']);
	return(List_a);
})()),'otherwise', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})()))));;
						})(); };
						if ( bool(((v_modifier == 'unless'))) ) { (function () {
							throw(CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_modifier_exp._class_.to(v_modifier_exp),'bool', 1,'capture', CLASS["If"]._class_.new(CLASS["If"],'cond', v_modifier_exp._class_.flat(v_modifier_exp)._hash_['exp'],'body', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})()),'otherwise', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_res._class_.flat(v_res)._hash_['exp']);
	return(List_a);
})()))));;
						})(); };
						if ( bool(((v_modifier == 'while'))) ) { (function () {
							throw(CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_modifier_exp._class_.to(v_modifier_exp),'bool', 1,'capture', CLASS["While"]._class_.new(CLASS["While"],'cond', v_modifier_exp._class_.flat(v_modifier_exp)._hash_['exp'],'body', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_res._class_.flat(v_res)._hash_['exp']);
	return(List_a);
})()))));;
						})(); };
						if ( bool((or((v_modifier == 'for'), function () { return (v_modifier == 'foreach'); }))) ) { (function () {
							throw(CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_modifier_exp._class_.to(v_modifier_exp),'bool', 1,'capture', CLASS["For"]._class_.new(CLASS["For"],'cond', v_modifier_exp._class_.flat(v_modifier_exp)._hash_['exp'],'body', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_res._class_.flat(v_res)._hash_['exp']);
	return(List_a);
})()))));;
						})(); };
						return(v__NAMESPACE.die(('Unexpected statement modifier ' + String.fromCharCode(39) + string(v_modifier) + String.fromCharCode(39))));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
				// use Perlito5::Precedence
;
				// use Perlito5::Grammar
;
				// use Perlito5::Perl5::Emitter
;
				(v_reduce_to_ast = function () {
	var List__ = Array.prototype.slice.call(arguments);
	try {
		var v_op_stack = null;

		var v_num_stack = null;

		var v_last_op = null;

		(v_op_stack = v__NAMESPACE.shift(List__));
		(v_num_stack = v__NAMESPACE.shift(List__));
		(v_last_op = v__NAMESPACE.shift((v_op_stack)));
		if ( bool(((v_last_op[0] == 'prefix'))) ) { return (function () {
			return(v__NAMESPACE.push((v_num_stack), CLASS["Apply"]._class_.new(CLASS["Apply"],'namespace', '','code', ('prefix:<' + string(v_last_op[1]) + '>'),'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v__NAMESPACE.pop_term(v_num_stack));
	return(List_a);
})())));
		})(); }
		else { return (function () {
			if ( bool(((v_last_op[0] == 'postfix'))) ) { return (function () {
				return(v__NAMESPACE.push((v_num_stack), CLASS["Apply"]._class_.new(CLASS["Apply"],'namespace', '','code', ('postfix:<' + string(v_last_op[1]) + '>'),'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v__NAMESPACE.pop_term(v_num_stack));
	return(List_a);
})())));
			})(); }
			else { return (function () {
				if ( bool(((v_last_op[0] == 'postfix_or_term'))) ) { return (function () {
					return(v__NAMESPACE.push((v_num_stack), v__NAMESPACE.reduce_postfix(v_last_op, v__NAMESPACE.pop_term(v_num_stack))));
				})(); }
				else { return (function () {
					if ( bool((NAMESPACE["Perlito5::Precedence"].is_assoc_type('list', v_last_op[1]))) ) { return (function () {
						var v_arg = null;

						if ( bool(((v__NAMESPACE.scalar((v_num_stack)) < 2))) ) { (function () {
							var v_v2 = null;

							(v_v2 = v__NAMESPACE.pop_term(v_num_stack));
							if ( bool((and((v__NAMESPACE.ref(v_v2) == 'Apply'), function () { return (v_v2._class_.code(v_v2) == (('list:<' + string(v_last_op[1]) + '>'))); }))) ) { (function () {
								v__NAMESPACE.push((v_num_stack), CLASS["Apply"]._class_.new(CLASS["Apply"],'namespace', v_v2._class_.namespace(v_v2),'code', v_v2._class_.code(v_v2),'arguments', (function () {
	var List_a = [];

	var List_v = [];

	(List_v = ((Array.prototype.slice.call((v_v2._class_.arguments(v_v2))))).slice());
	(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_x) {
		v__NAMESPACE.push(List_a, List_v[v_x]);; })(a_[i_]) } })(Array.prototype.slice.call((function (a) { for (var i=0, l=((v__NAMESPACE.scalar(List_v) - 1)); i<=l; ++i){ a.push(i) }; return a })([])));
	v__NAMESPACE.push(List_a, null);
	return(List_a);
})()));;
							})(); }
							else { (function () {
								v__NAMESPACE.push((v_num_stack), CLASS["Apply"]._class_.new(CLASS["Apply"],'namespace', '','code', ('list:<' + string(v_last_op[1]) + '>'),'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_v2);
	v__NAMESPACE.push(List_a, null);
	return(List_a);
})()));;
							})(); };
							throw(null);;
						})(); }
						else { (function () {
							var v_v2 = null;

							(v_v2 = v__NAMESPACE.pop_term(v_num_stack));
							(v_arg = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v__NAMESPACE.pop_term(v_num_stack));
	v__NAMESPACE.push(List_a, v_v2);
	return(List_a);
})());;
						})(); };
						if ( bool((and(and((v__NAMESPACE.ref(v_arg[0]) == 'Apply'), function () { return (v_last_op[0] == 'infix'); }), function () { return ((v_arg[0]._class_.code(v_arg[0]) == ('list:<' + string(v_last_op[1]) + '>'))); }))) ) { (function () {
							v__NAMESPACE.push((v_num_stack), CLASS["Apply"]._class_.new(CLASS["Apply"],'namespace', '','code', (v_arg[0])._class_.code((v_arg[0])),'arguments', (function () {
	var List_a = [];

	var List_v = [];

	(List_v = ((Array.prototype.slice.call(((v_arg[0])._class_.arguments((v_arg[0])))))).slice());
	(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_x) {
		v__NAMESPACE.push(List_a, List_v[v_x]);; })(a_[i_]) } })(Array.prototype.slice.call((function (a) { for (var i=0, l=((v__NAMESPACE.scalar(List_v) - 1)); i<=l; ++i){ a.push(i) }; return a })([])));
	v__NAMESPACE.push(List_a, v_arg[1]);
	return(List_a);
})()));
							throw(null);;
						})(); };
						return(v__NAMESPACE.push((v_num_stack), CLASS["Apply"]._class_.new(CLASS["Apply"],'namespace', '','code', ('list:<' + string(v_last_op[1]) + '>'),'arguments', v_arg)));
					})(); }
					else { return (function () {
						if ( bool((NAMESPACE["Perlito5::Precedence"].is_assoc_type('chain', v_last_op[1]))) ) { return (function () {
							var v_v2 = null;

							var v_arg = null;

							if ( bool(((v__NAMESPACE.scalar((v_num_stack)) < 2))) ) { (function () {
								v__NAMESPACE.die(('Missing value after operator ' + string(v_last_op[1])));;
							})(); };
							(v_v2 = v__NAMESPACE.pop_term(v_num_stack));
							(v_arg = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v__NAMESPACE.pop_term(v_num_stack));
	v__NAMESPACE.push(List_a, v_v2);
	return(List_a);
})());
							return(v__NAMESPACE.push((v_num_stack), CLASS["Apply"]._class_.new(CLASS["Apply"],'namespace', '','code', ('infix:<' + string(v_last_op[1]) + '>'),'arguments', v_arg)));
						})(); }
						else { return (function () {
							if ( bool(((v_last_op[0] == 'ternary'))) ) { return (function () {
								var v_v2 = null;

								if ( bool(((v__NAMESPACE.scalar((v_num_stack)) < 2))) ) { (function () {
									v__NAMESPACE.die(('Missing value after ternary operator'));;
								})(); };
								(v_v2 = v__NAMESPACE.pop_term(v_num_stack));
								return(v__NAMESPACE.push((v_num_stack), CLASS["Apply"]._class_.new(CLASS["Apply"],'namespace', '','code', ('ternary:<' + string(v_last_op[1]) + '>'),'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v__NAMESPACE.pop_term(v_num_stack));
	v__NAMESPACE.push(List_a, v_last_op[2]);
	v__NAMESPACE.push(List_a, v_v2);
	return(List_a);
})())));
							})(); }
							else { return (function () {
								var v_v2 = null;

								if ( bool(((v__NAMESPACE.scalar((v_num_stack)) < 2))) ) { (function () {
									v__NAMESPACE.die(('missing value after operator ' + String.fromCharCode(39) + string(v_last_op[1]) + string((String.fromCharCode(39)))));;
								})(); };
								(v_v2 = v__NAMESPACE.pop_term(v_num_stack));
								return(v__NAMESPACE.push((v_num_stack), CLASS["Apply"]._class_.new(CLASS["Apply"],'namespace', '','code', ('infix:<' + string(v_last_op[1]) + '>'),'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v__NAMESPACE.pop_term(v_num_stack));
	v__NAMESPACE.push(List_a, v_v2);
	return(List_a);
})())));
							})(); };
						})(); };
					})(); };
				})(); };
			})(); };
		})(); };;
	}
	catch(err) {
		if ( err instanceof Error ) {
			throw(err);
		}
		else {
			return(err);
		}
	}
});
				1;
})()
;
})()
;
make_package("main");
(function () {
  var __PACKAGE__ = "main";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_package("Perlito5::Grammar");
(function () {
  var __PACKAGE__ = "Perlito5::Grammar";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "unless", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and(and(and(and(and(and(and((and(('u' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return (and(('n' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('l' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('e' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('s' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('s' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.exp(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['exp']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_body = null;

	(v_body = v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['end_block']);
	if ( bool((( bool((v_body != null)) ? false : true))) ) { (function () {
		v__NAMESPACE.die(('Missing code block in ' + String.fromCharCode(39) + 'unless' + String.fromCharCode(39)));;
	})(); };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["If"]._class_.new(CLASS["If"],'cond', v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['exp'],'body', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})()),'otherwise', v_body)); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "if", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and(and(and((and(('i' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return (and(('f' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.exp(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['exp']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(((function () {
	return(and(and(and(and(and(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return (and(('e' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('l' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('s' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('e' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.exp2(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['exp2']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_body = null;

	var v_otherwise = null;

	(v_body = v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['end_block']);
	(v_otherwise = (v_MATCH._hash_[('exp2')]._class_.flat(v_MATCH._hash_[('exp2')]))._hash_['exp']);
	if ( bool((( bool((v_body != null)) ? false : true))) ) { (function () {
		v__NAMESPACE.die(('Missing code block in ' + String.fromCharCode(39) + 'if' + String.fromCharCode(39)));;
	})(); };
	if ( bool((( bool(((v_otherwise != null))) ? false : true))) ) { (function () {
		v__NAMESPACE.die(('Missing code block in ' + String.fromCharCode(39) + 'else' + String.fromCharCode(39)));;
	})(); };
	if ( bool(((v__NAMESPACE.ref(v_otherwise) == 'Lit::Hash'))) ) { (function () {
		(v_otherwise = CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', v_otherwise._class_.hash1(v_otherwise)));;
	})(); };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["If"]._class_.new(CLASS["If"],'cond', v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['exp'],'body', v_body,'otherwise', v_otherwise)); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and(and(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return (and(('e' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('l' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('s' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.if(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['if']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_body = null;

	(v_body = v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['end_block']);
	if ( bool((( bool((v_body != null)) ? false : true))) ) { (function () {
		v__NAMESPACE.die(('Missing code block in ' + String.fromCharCode(39) + 'if' + String.fromCharCode(39)));;
	})(); };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["If"]._class_.new(CLASS["If"],'cond', v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['exp'],'body', v_body,'otherwise', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_MATCH._hash_[('if')]._class_.flat(v_MATCH._hash_[('if')]));
	return(List_a);
})()))); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((((function () {
	var v_body = null;

	(v_body = v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['end_block']);
	if ( bool((( bool((v_body != null)) ? false : true))) ) { (function () {
		v__NAMESPACE.die(('Missing code block in ' + String.fromCharCode(39) + 'if' + String.fromCharCode(39)));;
	})(); };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["If"]._class_.new(CLASS["If"],'cond', v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['exp'],'body', v_body,'otherwise', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})()))); })();
	return(1);
})())));
})()); }));
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "when", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and(and(and(and(and((and(('w' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return (and(('h' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('e' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('n' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.exp(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['exp']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_body = null;

	(v_body = v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['end_block']);
	if ( bool((( bool((v_body != null)) ? false : true))) ) { (function () {
		v__NAMESPACE.die(('Missing code block in ' + String.fromCharCode(39) + 'when' + String.fromCharCode(39)));;
	})(); };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["When"]._class_.new(CLASS["When"],'parameters', v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['exp'],'body', v_body)); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "for", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and(and(and(and((and(('f' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return (and(('o' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('r' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	return(and(('each' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 4)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(4, v_MATCH._hash_[('to')])); })()); }));
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(and(and(and(and(and(and(and(and(and(and(and(and(and((and(('m' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return (and(('y' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.var_ident(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.var_ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and(('(' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Expression"]._class_.paren_parse(CLASS["Perlito5::Expression"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Expression.paren_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and((')' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and(('{' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar"]._class_.exp_stmts(CLASS["Perlito5::Grammar"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar.exp_stmts']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and(('}' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["For"]._class_.new(CLASS["For"],'cond', v_MATCH._hash_[('Perlito5::Expression.paren_parse')]._class_.flat(v_MATCH._hash_[('Perlito5::Expression.paren_parse')]),'topic', null,'body', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'stmts', v_MATCH._hash_[('Perlito5::Grammar.exp_stmts')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.exp_stmts')]),'sig', v_MATCH._hash_[('Perlito5::Grammar.var_ident')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar.var_ident')])))); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.exp(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['exp']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_body = null;

	(v_body = v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['end_block']);
	if ( bool((( bool((v_body != null)) ? false : true))) ) { (function () {
		v__NAMESPACE.die(('Missing code block in ' + String.fromCharCode(39) + 'when' + String.fromCharCode(39)));;
	})(); };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["For"]._class_.new(CLASS["For"],'cond', v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['exp'],'topic', null,'body', v_body)); })();
	return(1);
})()); })));
})()); }));
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "while", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and(and(and(and(and(and((and(('w' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return (and(('h' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('i' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('l' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return (and(('e' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.exp(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['exp']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_body = null;

	(v_body = v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['end_block']);
	if ( bool((( bool((v_body != null)) ? false : true))) ) { (function () {
		v__NAMESPACE.die(('Missing code block in ' + String.fromCharCode(39) + 'while' + String.fromCharCode(39)));;
	})(); };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["While"]._class_.new(CLASS["While"],'cond', v_MATCH._hash_[('exp')]._class_.flat(v_MATCH._hash_[('exp')])._hash_['exp'],'body', v_body)); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
})()
;
make_package("main");
(function () {
  var __PACKAGE__ = "main";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_package("Perlito5::Grammar");
(function () {
  var __PACKAGE__ = "Perlito5::Grammar";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "is_newline", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and((and((String.fromCharCode(10) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	return(and((String.fromCharCode(13) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and((and((String.fromCharCode(13) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	return(and((String.fromCharCode(10) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()); })));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "not_newline", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.is_newline(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? false : true)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return (and(('' != v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "ident", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.digit(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? false : true)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return ((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	var v_count = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	(v_count = 0);
	for ( ; bool((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.word(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);
		(v_count = add(v_count, 1));; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return((v_count > 0));
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "full_ident", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ident(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	for ( ; bool((and(((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and((and(('::' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 2)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(2, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ident(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }));
})()));
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "namespace_before_ident", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ident(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(('::' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 2)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(2, v_MATCH._hash_[('to')])); })()); }));
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? 1 : 0)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()); }), function () { return ((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	for ( ; bool((and(((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and((and(('::' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 2)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(2, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ident(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(('::' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 2)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(2, v_MATCH._hash_[('to')])); })()); }));
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? 1 : 0)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()); }));
})()));
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "optional_namespace_before_ident", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(((function () {
	return(and(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.namespace_before_ident(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['namespace_before_ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return (and(('::' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 2)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(2, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('namespace_before_ident')]._class_.flat(v_MATCH._hash_[('namespace_before_ident')])); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and((and(('::' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 2)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(2, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = 'main'); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(1, function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = ''); })();
	return(1);
})()); })));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "pod_begin", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.is_newline(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return (and(('=end' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 4)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(4, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	for ( ; bool((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.not_newline(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and((and(('' != v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	for ( ; bool((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.not_newline(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return(1);
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.pod_begin(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); })));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "ws", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	var v_count = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	(v_count = 0);
	for ( ; bool((and(((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(((function () {
	return(and((and((String.fromCharCode(35) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	for ( ; bool((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.not_newline(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and((and((String.fromCharCode(10) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	return(and((String.fromCharCode(13) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and((and((String.fromCharCode(13) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	return(and((String.fromCharCode(10) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()); })));
})()); }));
})()), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(((function () {
	return(and((and(('=begin' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 6)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(6, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.pod_begin(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and((and(('=for' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 4)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(4, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.pod_begin(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((1));
})()); }));
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.space(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())));
})()); }));
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);
		(v_count = add(v_count, 1));; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return((v_count > 0));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "opt_ws", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "opt_ws2", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "opt_ws3", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "declarator", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(('my' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 2)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(2, v_MATCH._hash_[('to')])); })()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('state' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 5)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(5, v_MATCH._hash_[('to')])); })()); }))));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "exp_stmts2", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.exp_stmts(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['exp_stmts']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('exp_stmts')]._class_.flat(v_MATCH._hash_[('exp_stmts')])); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "exp", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Expression"]._class_.exp_parse(CLASS["Perlito5::Expression"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Expression.exp_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('Perlito5::Expression.exp_parse')]._class_.flat(v_MATCH._hash_[('Perlito5::Expression.exp_parse')])); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "exp2", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Expression"]._class_.exp_parse(CLASS["Perlito5::Expression"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Expression.exp_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('Perlito5::Expression.exp_parse')]._class_.flat(v_MATCH._hash_[('Perlito5::Expression.exp_parse')])); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "opt_ident", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ident(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('ident')]._class_.flat(v_MATCH._hash_[('ident')])); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(1, function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = 'postcircumfix:<( )>'); })();
	return(1);
})()); })));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "opt_type", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(and(((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	return(and(('::' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 2)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(2, v_MATCH._hash_[('to')])); })()); }));
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.full_ident(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['full_ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('full_ident')]._class_.flat(v_MATCH._hash_[('full_ident')])); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(1, function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = ''); })();
	return(1);
})()); })));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "var_sigil", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(or(or(((function () {
	return(and(('$' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('%' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }))));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('@' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }))));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('&' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }))));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('*' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }))));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "var_name", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.full_ident(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['full_ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.digit(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['digit']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "var_ident", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.var_sigil(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['var_sigil']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.optional_namespace_before_ident(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['optional_namespace_before_ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.var_name(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['var_name']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Var"]._class_.new(CLASS["Var"],'sigil', v_MATCH._hash_[('var_sigil')]._class_.flat(v_MATCH._hash_[('var_sigil')]),'namespace', v_MATCH._hash_[('optional_namespace_before_ident')]._class_.flat(v_MATCH._hash_[('optional_namespace_before_ident')]),'name', v_MATCH._hash_[('var_name')]._class_.flat(v_MATCH._hash_[('var_name')]))); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "exponent", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and(((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(('e' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('E' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }))));
})()); }));
})()), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(((function () {
	return(and(('+' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('-' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }))));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((1));
})()); }));
})()); }), function () { return ((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	var v_count = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	(v_count = 0);
	for ( ; bool((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.digit(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);
		(v_count = add(v_count, 1));; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return((v_count > 0));
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "val_num", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(and((and(('.' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	var v_count = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	(v_count = 0);
	for ( ; bool((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.digit(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);
		(v_count = add(v_count, 1));; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return((v_count > 0));
})()); }), function () { return ((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.exponent(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	var v_count = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	(v_count = 0);
	for ( ; bool((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.digit(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);
		(v_count = add(v_count, 1));; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return((v_count > 0));
})()), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.exponent(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and((and(('.' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	var v_count = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	(v_count = 0);
	for ( ; bool((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.digit(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);
		(v_count = add(v_count, 1));; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return((v_count > 0));
})()); }), function () { return ((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.exponent(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()); })));
})()); }));
})()); })));
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Val::Num"]._class_.new(CLASS["Val::Num"],'num', v_MATCH._class_.flat(v_MATCH))); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "char_any", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(('' != v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "char_any_single_quote", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and((String.fromCharCode(39) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? false : true)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return (and(('' != v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	for ( ; bool((and(((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and((String.fromCharCode(39) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and((String.fromCharCode(92) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }))));
})()); }));
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? false : true)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return (and(('' != v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }));
})()));
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "single_quoted_unescape", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(or(or(((function () {
	return(and(and(and((and((String.fromCharCode(92) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return (and((String.fromCharCode(92) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.single_quoted_unescape(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['single_quoted_unescape']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (String.fromCharCode(92) + string(v_MATCH._hash_[('single_quoted_unescape')]._class_.flat(v_MATCH._hash_[('single_quoted_unescape')])))); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and((and((String.fromCharCode(92) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return (and((String.fromCharCode(39) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.single_quoted_unescape(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['single_quoted_unescape']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (String.fromCharCode(39) + string(v_MATCH._hash_[('single_quoted_unescape')]._class_.flat(v_MATCH._hash_[('single_quoted_unescape')])))); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and((and((String.fromCharCode(92) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.single_quoted_unescape(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['single_quoted_unescape']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (String.fromCharCode(92) + string(v_MATCH._hash_[('single_quoted_unescape')]._class_.flat(v_MATCH._hash_[('single_quoted_unescape')])))); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.char_any_single_quote(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['char_any_single_quote']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.single_quoted_unescape(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['single_quoted_unescape']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (string(v_MATCH._hash_[('char_any_single_quote')]._class_.flat(v_MATCH._hash_[('char_any_single_quote')])) + string(v_MATCH._hash_[('single_quoted_unescape')]._class_.flat(v_MATCH._hash_[('single_quoted_unescape')])))); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((1));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "char_any_double_quote", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(((function () {
	return(and((String.fromCharCode(34) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('$' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }))));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('@' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }))));
})()); }));
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? false : true)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return (and(('' != v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	for ( ; bool((and(((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(or(((function () {
	return(and((String.fromCharCode(34) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('$' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }))));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and(('@' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }))));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return(((and((String.fromCharCode(92) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }))));
})()); }));
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? false : true)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return (and(('' != v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }));
})()));
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "double_quoted_unescape", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and((and((String.fromCharCode(92) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(or(or(((function () {
	return(and((and(('c' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(and(and((and(('[' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.digits(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['digits']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and((']' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v__NAMESPACE.chr(v_MATCH._hash_[('digits')]._class_.flat(v_MATCH._hash_[('digits')]))); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.digits(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['digits']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v__NAMESPACE.chr(v_MATCH._hash_[('digits')]._class_.flat(v_MATCH._hash_[('digits')]))); })();
	return(1);
})()); })));
})()); }));
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and((and(('e' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v__NAMESPACE.chr(27)); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and((and(('n' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (String.fromCharCode(10))); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and((and(('t' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v__NAMESPACE.chr(9)); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.char_any(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['char_any']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('char_any')]._class_.flat(v_MATCH._hash_[('char_any')])); })();
	return(1);
})()); })));
})()); }));
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.char_any_double_quote(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['char_any_double_quote']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('char_any_double_quote')]._class_.flat(v_MATCH._hash_[('char_any_double_quote')])); })();
	return(1);
})()); })));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "double_quoted_buf", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(((function () {
	return(and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(('$' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? 1 : 0)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(((function () {
	return(and(and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and((and(('$' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ident(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }));
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? 1 : 0)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Expression"]._class_.operator(CLASS["Perlito5::Expression"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Expression.operator']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = (v_MATCH._hash_[('Perlito5::Expression.operator')]._class_.flat(v_MATCH._hash_[('Perlito5::Expression.operator')]))[1]); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and(and((and(('$' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return (and(('{' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ident(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['ident']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and(('}' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Var"]._class_.new(CLASS["Var"],'sigil', '$','name', v_MATCH._hash_[('ident')]._class_.flat(v_MATCH._hash_[('ident')]))); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.char_any(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['char_any']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Val::Buf"]._class_.new(CLASS["Val::Buf"],'buf', v_MATCH._hash_[('char_any')]._class_.flat(v_MATCH._hash_[('char_any')]))); })();
	return(1);
})()); })));
})()); }));
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(('@' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? 1 : 0)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(or(((function () {
	return(and(and(((function () {
	var v_tmp = null;

	(v_tmp = v_MATCH);
	(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_tmp._hash_[('to')],'to', v_tmp._hash_[('to')],'bool', 1));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and((and(('@' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ident(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }));
})()));
})())); })();
	(function () { if (v_tmp == null) { v_tmp = new HashRef({}) }; return (v_tmp._hash_[('bool')]  = ( bool(v_MATCH._hash_[('bool')]) ? 1 : 0)); })();
	(v_MATCH = v_tmp);
	return(( bool(v_MATCH._hash_[('bool')]) ? 1 : 0));
})()), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Expression"]._class_.operator(CLASS["Perlito5::Expression"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Expression.operator']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Apply"]._class_.new(CLASS["Apply"],'namespace', '','code', 'join','arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Val::Buf"]._class_.new(CLASS["Val::Buf"],'buf', ' '));
	v__NAMESPACE.push(List_a, (v_MATCH._hash_[('Perlito5::Expression.operator')]._class_.flat(v_MATCH._hash_[('Perlito5::Expression.operator')]))[1]);
	return(List_a);
})())); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and(and((and(('@' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return (and(('{' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.exp_stmts(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['exp_stmts']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and(('}' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Apply"]._class_.new(CLASS["Apply"],'namespace', '','code', 'join','arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Val::Buf"]._class_.new(CLASS["Val::Buf"],'buf', ' '));
	v__NAMESPACE.push(List_a, (v_MATCH._hash_[('exp_stmts')]._class_.flat(v_MATCH._hash_[('exp_stmts')]))[0]);
	return(List_a);
})())); })();
	return(1);
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.char_any(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['char_any']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Val::Buf"]._class_.new(CLASS["Val::Buf"],'buf', v_MATCH._hash_[('char_any')]._class_.flat(v_MATCH._hash_[('char_any')]))); })();
	return(1);
})()); })));
})()); }));
})()); })));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.double_quoted_unescape(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['double_quoted_unescape']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Val::Buf"]._class_.new(CLASS["Val::Buf"],'buf', v_MATCH._hash_[('double_quoted_unescape')]._class_.flat(v_MATCH._hash_[('double_quoted_unescape')]))); })();
	return(1);
})()); })));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "val_buf", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(and(and((and((String.fromCharCode(34) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	for ( ; bool((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.double_quoted_buf(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		if ( bool(((v_MATCH)._hash_.hasOwnProperty('double_quoted_buf'))) ) { (function () {
			v__NAMESPACE.push((v_MATCH._hash_['double_quoted_buf']), v_m2);;
		})(); }
		else { (function () {
			(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['double_quoted_buf']  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_m2);
	return(List_a);
})()); })();;
		})(); };
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return(1);
})()); }), function () { return (and((String.fromCharCode(34) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_args = null;

	(v_args = v_MATCH._hash_[('double_quoted_buf')]);
	if ( bool((( bool(v_args) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Val::Buf"]._class_.new(CLASS["Val::Buf"],'buf', '')); })();;
	})(); }
	else { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Apply"]._class_.new(CLASS["Apply"],'namespace', '','code', 'list:<.>','arguments', Array.prototype.slice.call((function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.capture(v__))}; return out; })((v_MATCH._hash_[('double_quoted_buf')]))))); })();;
	})(); };
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((and(and(and((and((String.fromCharCode(39) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.single_quoted_unescape(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['single_quoted_unescape']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and((String.fromCharCode(39) == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Val::Buf"]._class_.new(CLASS["Val::Buf"],'buf', v_MATCH._hash_[('single_quoted_unescape')]._class_.flat(v_MATCH._hash_[('single_quoted_unescape')]))); })();
	return(1);
})()); })));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "digits", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	var v_count = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	(v_count = 0);
	for ( ; bool((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.digit(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);
		(v_count = add(v_count, 1));; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return((v_count > 0));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "val_int", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	var v_count = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	(v_count = 0);
	for ( ; bool((and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.digit(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);
		(v_count = add(v_count, 1));; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return((v_count > 0));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Val::Int"]._class_.new(CLASS["Val::Int"],'int', v_MATCH._class_.flat(v_MATCH))); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "exp_stmts", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_last_match_null = null;

	var v_last_pos = null;

	(v_last_match_null = 0);
	(v_last_pos = v_MATCH._hash_[('to')]);
	for ( ; bool((and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Expression"]._class_.delimited_statement(CLASS["Perlito5::Expression"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		if ( bool(((v_MATCH)._hash_.hasOwnProperty('Perlito5::Expression.delimited_statement'))) ) { (function () {
			v__NAMESPACE.push((v_MATCH._hash_['Perlito5::Expression.delimited_statement']), v_m2);;
		})(); }
		else { (function () {
			(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Expression.delimited_statement']  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_m2);
	return(List_a);
})()); })();;
		})(); };
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((v_last_match_null < 2)); })));  ) { (function () {
		if ( bool(((v_last_pos == v_MATCH._hash_[('to')]))) ) { (function () {
			(v_last_match_null = add(v_last_match_null, 1));;
		})(); }
		else { (function () {
			(v_last_match_null = 0);;
		})(); };
		(v_last_pos = v_MATCH._hash_[('to')]);; })() };
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();
	return(1);
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = Array.prototype.slice.call((function (a_) { var out = []; if ( a_ == null ) { return out; }; for(var i = 0; i < a_.length; i++) { var v__ = a_[i]; out.push(v__._class_.capture(v__))}; return out; })((v_MATCH._hash_[('Perlito5::Expression.delimited_statement')])))); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "opt_name", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	var v_last_pos = null;

	(v_last_pos = v_MATCH._hash_[('to')]);
	if ( bool((( bool(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.ident(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		if ( bool(((v_MATCH)._hash_.hasOwnProperty('ident'))) ) { (function () {
			v__NAMESPACE.push((v_MATCH._hash_['ident']), v_m2);;
		})(); }
		else { (function () {
			(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['ident']  = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_m2);
	return(List_a);
})()); })();;
		})(); };
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})())) ? false : true))) ) { (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_last_pos); })();;
	})(); };
	return(1);
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "args_sig", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Expression"]._class_.list_parse(CLASS["Perlito5::Expression"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Expression.list_parse']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Sig"]._class_.new(CLASS["Sig"],'positional', NAMESPACE["Perlito5::Expression"].expand_list(v_MATCH._hash_[('Perlito5::Expression.list_parse')]._class_.flat(v_MATCH._hash_[('Perlito5::Expression.list_parse')])._hash_['exp']),'named', (function () {
	var Hash_a = {};

	return((new HashRef(Hash_a)));
})())); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "method_sig", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(and(and(and(and(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return (and(('(' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.args_sig(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['args_sig']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and((')' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_MATCH._hash_[('args_sig')]._class_.flat(v_MATCH._hash_[('args_sig')])); })();
	return(1);
})()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Sig"]._class_.new(CLASS["Sig"],'positional', (function () {
	var List_a = [];

	var List_v = [];

	return(List_a);
})(),'named', (function () {
	var Hash_a = {};

	return((new HashRef(Hash_a)));
})())); })();
	return(1);
})())));
})()); }));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "sub_def", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and(and(and(and(and(and(and(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_name(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['opt_name']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.method_sig(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['method_sig']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and(('{' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.exp_stmts(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['exp_stmts']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return ((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(or(((function () {
	return(and(('}' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); }));
})()), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_pos1); })();
	return((((function () {
	v__NAMESPACE.die('Syntax Error in sub ' + String.fromCharCode(39), v_MATCH._hash_[('opt_name')]._class_.flat(v_MATCH._hash_[('opt_name')]), String.fromCharCode(39));
	return(1);
})())));
})()); }));
})()); }), function () { return ((function () {
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = CLASS["Sub"]._class_.new(CLASS["Sub"],'name', v_MATCH._hash_[('opt_name')]._class_.flat(v_MATCH._hash_[('opt_name')]),'sig', v_MATCH._hash_[('method_sig')]._class_.flat(v_MATCH._hash_[('method_sig')]),'block', v_MATCH._hash_[('exp_stmts')]._class_.flat(v_MATCH._hash_[('exp_stmts')]))); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "token", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_grammar = null;

						var v_str = null;

						var v_pos = null;

						var v_MATCH = null;

						(v_grammar = List__[0]);
						(v_str = List__[1]);
						(v_pos = List__[2]);
						(v_MATCH = CLASS["Perlito5::Match"]._class_.new(CLASS["Perlito5::Match"],'str', v_str,'from', v_pos,'to', v_pos,'bool', 1));
						(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('bool')]  = (((function () {
	var v_pos1 = null;

	(v_pos1 = v_MATCH._hash_[('to')]);
	return(((function () {
	return(and(and(and(and(and(((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_name(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['opt_name']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = v_grammar._class_.opt_ws(v_grammar,v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and(('{' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_m2 = null;

	(v_m2 = CLASS["Perlito5::Grammar::Regex"]._class_.rule(CLASS["Perlito5::Grammar::Regex"],v_str,v_MATCH._hash_[('to')]));
	if ( bool((v_m2._hash_[('bool')])) ) { return (function () {
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = v_m2._hash_[('to')]); })();
		(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_['Perlito5::Grammar::Regex.rule']  = v_m2); })();
		return(1);
	})(); }
	else { return (function () {
		return(0);
	})(); };
})()); }), function () { return (and(('}' == v__NAMESPACE.substr(v_str, v_MATCH._hash_[('to')], 1)), function () { return ((function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('to')]  = add(1, v_MATCH._hash_[('to')])); })()); })); }), function () { return ((function () {
	var v_source = null;

	var v_ast = null;

	(v_source = (string(v_MATCH._hash_[('opt_name')]._class_.flat(v_MATCH._hash_[('opt_name')])) + '{ ' + 'my $grammar = $_[0]; ' + 'my $str     = $_[1]; ' + 'my $pos     = $_[2]; ' + 'my $MATCH = Perlito5::Match->new( str => $str, from => $pos, to => $pos, bool => 1 ); ' + '$MATCH->{' + String.fromCharCode(34) + 'bool' + String.fromCharCode(34) + '} = ( ' + string(v_MATCH._hash_[('Perlito5::Grammar::Regex.rule')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar::Regex.rule')])._class_.emit_perl5(v_MATCH._hash_[('Perlito5::Grammar::Regex.rule')]._class_.flat(v_MATCH._hash_[('Perlito5::Grammar::Regex.rule')]))) + '); ' + '$MATCH; ' + '}'));
	(v_ast = CLASS["Perlito5::Grammar"]._class_.sub_def(CLASS["Perlito5::Grammar"],v_source,0));
	(function () { if (v_MATCH == null) { v_MATCH = new HashRef({}) }; return (v_MATCH._hash_[('capture')]  = v_ast._class_.flat(v_ast)); })();
	return(1);
})()); }));
})()));
})()))); })();
						return(v_MATCH);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
				// use Perlito5::Expression
;
				// use Perlito5::Grammar::Control
;
})()
;
})()
;
		// use Perlito5::Grammar
;
		// use Perlito5::Grammar::Control
;
		// use Perlito5::Precedence
;
		// use Perlito5::Expression
;
make_package("main");
(function () {
  var __PACKAGE__ = "main";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
			// use v5
;
make_package("Lit::Array");
(function () {
  var __PACKAGE__ = "Lit::Array";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "expand_interpolation", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var v_needs_interpolation = null;

						var List_items = [];

						var List_s = [];

						(v_self = List__[0]);
						(v_needs_interpolation = 0);
						(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_item) {
							if ( bool((and(v_item._class_.isa(v_item,'Apply'), function () { return (or((v_item._class_.code(v_item) == 'circumfix:<( )>'), function () { return (v_item._class_.code(v_item) == 'list:<,>'); })); }))) ) { (function () {
								(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_arg) {
									v__NAMESPACE.push(List_items, v_arg);; })(a_[i_]) } })(Array.prototype.slice.call((v_item._class_.arguments(v_item))));;
							})(); }
							else { (function () {
								v__NAMESPACE.push(List_items, v_item);;
							})(); };; })(a_[i_]) } })(Array.prototype.slice.call((v_self._hash_[('array1')])));
						(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_item) {
							if ( bool((or(and(v_item._class_.isa(v_item,'Var'), function () { return (v_item._class_.sigil(v_item) == '@'); }), function () { return and(v_item._class_.isa(v_item,'Apply'), function () { return (or(or((v_item._class_.code(v_item) == 'prefix:<@>'), function () { return (v_item._class_.code(v_item) == 'infix:<..>'); }), function () { return (v_item._class_.code(v_item) == 'map'); })); }); }))) ) { (function () {
								(v_needs_interpolation = 1);;
							})(); };; })(a_[i_]) } })(List_items);
						if ( bool((and(v_needs_interpolation, function () { return (v__NAMESPACE.scalar(List_items) == 1); }))) ) { (function () {
							throw(CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, List_items[0]);
	return(List_a);
})(),'code', 'circumfix:<[ ]>','namespace', ''));;
						})(); };
						(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_item) {
							if ( bool((or(and(v_item._class_.isa(v_item,'Var'), function () { return (v_item._class_.sigil(v_item) == '@'); }), function () { return and(v_item._class_.isa(v_item,'Apply'), function () { return (or(or((v_item._class_.code(v_item) == 'prefix:<@>'), function () { return (v_item._class_.code(v_item) == 'infix:<..>'); }), function () { return (v_item._class_.code(v_item) == 'map'); })); }); }))) ) { (function () {
								v__NAMESPACE.push(List_s, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Var"]._class_.new(CLASS["Var"],'name', 'v','namespace', '','sigil', '@'));
	v__NAMESPACE.push(List_a, v_item);
	return(List_a);
})(),'code', 'infix:<=>','namespace', ''));
								v__NAMESPACE.push(List_s, CLASS["For"]._class_.new(CLASS["For"],'body', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'sig', CLASS["Var"]._class_.new(CLASS["Var"],'name', 'x','namespace', '','sigil', '$'),'stmts', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Var"]._class_.new(CLASS["Var"],'name', 'a','namespace', '','sigil', '@'));
	v__NAMESPACE.push(List_a, CLASS["Index"]._class_.new(CLASS["Index"],'index_exp', CLASS["Var"]._class_.new(CLASS["Var"],'name', 'x','namespace', '','sigil', '$'),'obj', CLASS["Var"]._class_.new(CLASS["Var"],'name', 'v','namespace', '','sigil', '$')));
	return(List_a);
})(),'code', 'push','namespace', ''));
	return(List_a);
})()),'cond', CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Val::Int"]._class_.new(CLASS["Val::Int"],'int', 0));
	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Var"]._class_.new(CLASS["Var"],'name', 'v','namespace', '','sigil', '@'));
	return(List_a);
})(),'code', 'scalar','namespace', ''));
	v__NAMESPACE.push(List_a, CLASS["Val::Int"]._class_.new(CLASS["Val::Int"],'int', 1));
	return(List_a);
})(),'code', 'infix:<->','namespace', ''));
	return(List_a);
})(),'code', 'circumfix:<( )>','namespace', ''));
	return(List_a);
})(),'code', 'infix:<..>','namespace', ''),'topic', null));;
							})(); }
							else { (function () {
								v__NAMESPACE.push(List_s, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Var"]._class_.new(CLASS["Var"],'name', 'a','namespace', '','sigil', '@'));
	v__NAMESPACE.push(List_a, v_item);
	return(List_a);
})(),'code', 'push','namespace', ''));;
							})(); };; })(a_[i_]) } })(List_items);
						throw(CLASS["Do"]._class_.new(CLASS["Do"],'block', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'sig', null,'stmts', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Decl"]._class_.new(CLASS["Decl"],'decl', 'my','type', '','var', CLASS["Var"]._class_.new(CLASS["Var"],'name', 'a','namespace', '','sigil', '@')));
	v__NAMESPACE.push(List_a, CLASS["Decl"]._class_.new(CLASS["Decl"],'decl', 'my','type', '','var', CLASS["Var"]._class_.new(CLASS["Var"],'name', 'v','namespace', '','sigil', '@')));
	(List_v = ((Array.prototype.slice.call(List_s))).slice());
	(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_x) {
		v__NAMESPACE.push(List_a, List_v[v_x]);; })(a_[i_]) } })(Array.prototype.slice.call((function (a) { for (var i=0, l=((v__NAMESPACE.scalar(List_v) - 1)); i<=l; ++i){ a.push(i) }; return a })([])));
	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Var"]._class_.new(CLASS["Var"],'name', 'a','namespace', '','sigil', '@'));
	return(List_a);
})(),'code', 'prefix:<' + String.fromCharCode(92) + '>','namespace', ''));
	return(List_a);
})())));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Lit::Hash");
(function () {
  var __PACKAGE__ = "Lit::Hash";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "expand_interpolation", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var List_items = [];

						var List_s = [];

						(v_self = List__[0]);
						(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_item) {
							if ( bool((and(v_item._class_.isa(v_item,'Apply'), function () { return (or((v_item._class_.code(v_item) == 'circumfix:<( )>'), function () { return (v_item._class_.code(v_item) == 'list:<,>'); })); }))) ) { (function () {
								(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_arg) {
									v__NAMESPACE.push(List_items, v_arg);; })(a_[i_]) } })(Array.prototype.slice.call((v_item._class_.arguments(v_item))));;
							})(); }
							else { (function () {
								v__NAMESPACE.push(List_items, v_item);;
							})(); };; })(a_[i_]) } })(Array.prototype.slice.call((v_self._hash_[('hash1')])));
						(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_item) {
							if ( bool((and(v_item._class_.isa(v_item,'Apply'), function () { return (v_item._class_.code(v_item) == 'infix:<=>>'); }))) ) { (function () {
								v__NAMESPACE.push(List_s, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Lookup"]._class_.new(CLASS["Lookup"],'index_exp', v_item._class_.arguments(v_item)[0],'obj', CLASS["Var"]._class_.new(CLASS["Var"],'name', 'a','namespace', '','sigil', '$')));
	v__NAMESPACE.push(List_a, v_item._class_.arguments(v_item)[1]);
	return(List_a);
})(),'code', 'infix:<=>','namespace', ''));;
							})(); }
							else { (function () {
								if ( bool((or(and(v_item._class_.isa(v_item,'Var'), function () { return (v_item._class_.sigil(v_item) == '%'); }), function () { return and(v_item._class_.isa(v_item,'Apply'), function () { return (v_item._class_.code(v_item) == 'prefix:<%>'); }); }))) ) { (function () {
									var v_v = null;

									(v_v = v_item);
									if ( bool(v_item._class_.isa(v_item,'Var')) ) { (function () {
										(v_v = CLASS["Var"]._class_.new(CLASS["Var"],'sigil', '$','namespace', v_item._class_.namespace(v_item),'name', v_item._class_.name(v_item)));;
									})(); };
									v__NAMESPACE.push(List_s, CLASS["For"]._class_.new(CLASS["For"],'body', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'sig', CLASS["Var"]._class_.new(CLASS["Var"],'name', 'p','namespace', '','sigil', '$'),'stmts', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Lookup"]._class_.new(CLASS["Lookup"],'index_exp', CLASS["Var"]._class_.new(CLASS["Var"],'name', 'p','namespace', '','sigil', '$'),'obj', CLASS["Var"]._class_.new(CLASS["Var"],'name', 'a','namespace', '','sigil', '$')));
	v__NAMESPACE.push(List_a, CLASS["Lookup"]._class_.new(CLASS["Lookup"],'index_exp', CLASS["Var"]._class_.new(CLASS["Var"],'name', 'p','namespace', '','sigil', '$'),'obj', v_v));
	return(List_a);
})(),'code', 'infix:<=>','namespace', ''));
	return(List_a);
})()),'cond', CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_item);
	return(List_a);
})(),'code', 'keys','namespace', ''),'topic', null));;
								})(); }
								else { (function () {
									if ( bool((or(and(v_item._class_.isa(v_item,'Var'), function () { return (v_item._class_.sigil(v_item) == '@'); }), function () { return and(v_item._class_.isa(v_item,'Apply'), function () { return (v_item._class_.code(v_item) == 'prefix:<@>'); }); }))) ) { (function () {
										v__NAMESPACE.push(List_s, CLASS["Do"]._class_.new(CLASS["Do"],'block', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'sig', null,'stmts', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Decl"]._class_.new(CLASS["Decl"],'decl', 'my','type', '','var', CLASS["Var"]._class_.new(CLASS["Var"],'name', '_i','namespace', '','sigil', '$')));
	v__NAMESPACE.push(List_a, CLASS["Val::Int"]._class_.new(CLASS["Val::Int"],'int', 0));
	return(List_a);
})(),'code', 'infix:<=>','namespace', ''));
	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Decl"]._class_.new(CLASS["Decl"],'decl', 'my','type', '','var', CLASS["Var"]._class_.new(CLASS["Var"],'name', '_a','namespace', '','sigil', '@')));
	v__NAMESPACE.push(List_a, v_item);
	return(List_a);
})(),'code', 'infix:<=>','namespace', ''));
	v__NAMESPACE.push(List_a, CLASS["While"]._class_.new(CLASS["While"],'body', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'sig', null,'stmts', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Lookup"]._class_.new(CLASS["Lookup"],'index_exp', CLASS["Index"]._class_.new(CLASS["Index"],'index_exp', CLASS["Var"]._class_.new(CLASS["Var"],'name', '_i','namespace', '','sigil', '$'),'obj', CLASS["Var"]._class_.new(CLASS["Var"],'name', '_a','namespace', '','sigil', '$')),'obj', CLASS["Var"]._class_.new(CLASS["Var"],'name', 'a','namespace', '','sigil', '$')));
	v__NAMESPACE.push(List_a, CLASS["Index"]._class_.new(CLASS["Index"],'index_exp', CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Var"]._class_.new(CLASS["Var"],'name', '_i','namespace', '','sigil', '$'));
	v__NAMESPACE.push(List_a, CLASS["Val::Int"]._class_.new(CLASS["Val::Int"],'int', 1));
	return(List_a);
})(),'code', 'infix:<+>','namespace', ''),'obj', CLASS["Var"]._class_.new(CLASS["Var"],'name', '_a','namespace', '','sigil', '$')));
	return(List_a);
})(),'code', 'infix:<=>','namespace', ''));
	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Var"]._class_.new(CLASS["Var"],'name', '_i','namespace', '','sigil', '$'));
	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Var"]._class_.new(CLASS["Var"],'name', '_i','namespace', '','sigil', '$'));
	v__NAMESPACE.push(List_a, CLASS["Val::Int"]._class_.new(CLASS["Val::Int"],'int', 2));
	return(List_a);
})(),'code', 'infix:<+>','namespace', ''));
	return(List_a);
})(),'code', 'infix:<=>','namespace', ''));
	return(List_a);
})()),'cond', CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Var"]._class_.new(CLASS["Var"],'name', '_i','namespace', '','sigil', '$'));
	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Var"]._class_.new(CLASS["Var"],'name', '_a','namespace', '','sigil', '@'));
	return(List_a);
})(),'code', 'scalar','namespace', ''));
	return(List_a);
})(),'code', 'infix:<<>','namespace', ''));
	return(List_a);
})(),'code', 'circumfix:<( )>','namespace', '')));
	return(List_a);
})())));;
									})(); }
									else { (function () {
										v__NAMESPACE.die('Error in hash composer: ', v_item);;
									})(); };;
								})(); };;
							})(); };; })(a_[i_]) } })(List_items);
						throw(CLASS["Do"]._class_.new(CLASS["Do"],'block', CLASS["Lit::Block"]._class_.new(CLASS["Lit::Block"],'sig', null,'stmts', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Decl"]._class_.new(CLASS["Decl"],'decl', 'my','type', '','var', CLASS["Var"]._class_.new(CLASS["Var"],'name', 'a','namespace', '','sigil', '%')));
	(List_v = ((Array.prototype.slice.call(List_s))).slice());
	(function (a_) { for (var i_ = 0; i_ < a_.length ; i_++) { (function (v_x) {
		v__NAMESPACE.push(List_a, List_v[v_x]);; })(a_[i_]) } })(Array.prototype.slice.call((function (a) { for (var i=0, l=((v__NAMESPACE.scalar(List_v) - 1)); i<=l; ++i){ a.push(i) }; return a })([])));
	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, CLASS["Var"]._class_.new(CLASS["Var"],'name', 'a','namespace', '','sigil', '%'));
	return(List_a);
})(),'code', 'prefix:<' + String.fromCharCode(92) + '>','namespace', ''));
	return(List_a);
})())));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
make_package("Apply");
(function () {
  var __PACKAGE__ = "Apply";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
  var Hash_op = {};
make_sub(__PACKAGE__, "op_assign", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var v_code = null;

						(v_self = List__[0]);
						(v_code = v_self._hash_[('code')]);
						if ( bool(v__NAMESPACE.ref(v_code)) ) { (function () {
							throw(0);;
						})(); };
						if ( bool(((Hash_op).hasOwnProperty(v_code))) ) { (function () {
							throw(CLASS["Apply"]._class_.new(CLASS["Apply"],'code', 'infix:<=>','arguments', (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_self._hash_[('arguments')][0]);
	v__NAMESPACE.push(List_a, CLASS["Apply"]._class_.new(CLASS["Apply"],'code', Hash_op[v_code],'arguments', v_self._hash_[('arguments')]));
	return(List_a);
})()));;
						})(); };
						throw(0);;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
				(Hash_op = (function (_h) { var _tmp = {}; for (var _i in _h) { _tmp[_i] = _h[_i]; }; return _tmp; })( ((function () {
	var Hash_a = {};

	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<+=>']  = 'infix:<+>'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<-=>']  = 'infix:<->'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<*=>']  = 'infix:<*>'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<' + String.fromCharCode(47) + '=>']  = 'infix:<' + String.fromCharCode(47) + '>'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<||=>']  = 'infix:<||>'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<&&=>']  = 'infix:<&&>'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<|=>']  = 'infix:<|>'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<&=>']  = 'infix:<&>'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<' + String.fromCharCode(47) + String.fromCharCode(47) + '=>']  = 'infix:<' + String.fromCharCode(47) + String.fromCharCode(47) + '>'); })();
	(function () { if (Hash_a == null) { Hash_a = {} }; return (Hash_a['infix:<.=>']  = 'list:<.>'); })();
	return((new HashRef(Hash_a)));
})())._hash_));
})()
;
make_package("Do");
(function () {
  var __PACKAGE__ = "Do";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "simplify", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_self = null;

						var v_block = null;

						(v_self = List__[0]);
						if ( bool((v_self._hash_[('block')]._class_.isa(v_self._hash_[('block')],'Lit::Block'))) ) { (function () {
							(v_block = v_self._hash_[('block')]._class_.stmts(v_self._hash_[('block')]));;
						})(); }
						else { (function () {
							(v_block = (function () {
	var List_a = [];

	var List_v = [];

	v__NAMESPACE.push(List_a, v_self._hash_[('block')]);
	return(List_a);
})());;
						})(); };
						if ( bool(((v__NAMESPACE.scalar((v_block)) == 1))) ) { (function () {
							var v_stmt = null;

							(v_stmt = v_block[0]);
							if ( bool((and(v_stmt._class_.isa(v_stmt,'Apply'), function () { return (v_stmt._class_.code(v_stmt) == 'circumfix:<( )>'); }))) ) { (function () {
								var v_args = null;

								(v_args = v_stmt._class_.arguments(v_stmt));
								throw(CLASS["Do"]._class_.new(CLASS["Do"],'block', v_args[0])._class_.simplify(CLASS["Do"]._class_.new(CLASS["Do"],'block', v_args[0])));;
							})(); };
							if ( bool((v_stmt._class_.isa(v_stmt,'Do'))) ) { (function () {
								throw(v_stmt._class_.simplify(v_stmt));;
							})(); };;
						})(); };
						throw(CLASS["Do"]._class_.new(CLASS["Do"],'block', v_block));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
})()
;
})()
;
		// use Perlito5::Macro
;
make_package("main");
(function () {
  var __PACKAGE__ = "main";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_package("Perlito5::Runtime");
(function () {
  var __PACKAGE__ = "Perlito5::Runtime";
  var v__NAMESPACE = NAMESPACE[__PACKAGE__];
make_sub(__PACKAGE__, "_replace", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_s = null;

						var v_old = null;

						var v_new = null;

						var v_p = null;

						(v_s = v__NAMESPACE.shift(List__));
						(v_old = v__NAMESPACE.shift(List__));
						(v_new = v__NAMESPACE.shift(List__));
						(v_p = v__NAMESPACE.index(v_s, v_old));
						return(( bool((v_p >= 0)) ? (string(v__NAMESPACE.substr(v_s, 0, v_p)) + string(v_new) + string(v__NAMESPACE._replace(v__NAMESPACE.substr(v_s, add(v_p, v__NAMESPACE.length(v_old))), v_old, v_new))) : v_s));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "lisp_escape_string", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_s = null;

						(v_s = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE._replace(v_s, (String.fromCharCode(92)), (String.fromCharCode(92) + String.fromCharCode(92))));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
make_sub(__PACKAGE__, "to_go_namespace", function () {
					var List__ = Array.prototype.slice.call(arguments);
					try {
						var v_s = null;

						(v_s = v__NAMESPACE.shift(List__));
						return(v__NAMESPACE._replace(v_s, ('::'), ('__')));;
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
				1;
})()
;
})()
;
		// use Perlito5::Runtime
;
		1;
})()
;
})()

