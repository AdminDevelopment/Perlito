// Do not edit this file - Generated by Perlito5 8.0
//
// lib/Perlito5/Javascript/Runtime.js
//
// Runtime for "Perlito" Perl5-in-Javascript
//
// AUTHORS
//
// Flavio Soibelmann Glock  fglock@gmail.com
//
// COPYRIGHT
//
// Copyright 2009, 2010, 2011, 2012 by Flavio Soibelmann Glock and others.
//
// This program is free software; you can redistribute it and/or modify it
// under the same terms as Perl itself.
//
// See http://www.perl.com/perl/misc/Artistic.html

var isNode = typeof require != "undefined";

if (typeof NAMESPACE !== "object") {
    NAMESPACE = {};
    LOCAL = [];

    var universal = function () {};
    NAMESPACE.UNIVERSAL = new universal();
    NAMESPACE.UNIVERSAL._ref_ = "UNIVERSAL";
    NAMESPACE.UNIVERSAL.isa = function (List__) {
        // TODO - use @ISA
        return List__[0]._class_._ref_ == List__[1]
    };
    NAMESPACE.UNIVERSAL.can = function (List__) {
        var o = List__[0];
        var s = List__[1];
        if ( s.indexOf("::") == -1 ) {
            // TODO - use _method_lookup_
            return o._class_[s]
        }
        var c = s.split("::");
        s = c.pop(); 
        // TODO - use _method_lookup_
        return _method_lookup_(s, c.join("::"), {});
    };
    NAMESPACE.UNIVERSAL.DOES = NAMESPACE.UNIVERSAL.can;

    var core = function () {};
    NAMESPACE["CORE"] = new core();
    NAMESPACE["CORE"]._ref_ = "CORE";

    var core_global = function () {};
    core_global.prototype = NAMESPACE.CORE;
    NAMESPACE["CORE::GLOBAL"] = new core_global();
    NAMESPACE["CORE::GLOBAL"]._ref_ = "CORE::GLOBAL";

    p5_error = function (v) {
        this.v = v;
    };
    p5_error.prototype = Error;
}

function make_package(pkg_name) {
    if (!NAMESPACE.hasOwnProperty(pkg_name)) {
        var tmp = function () {};
        tmp.prototype = NAMESPACE["CORE::GLOBAL"];
        NAMESPACE[pkg_name] = new tmp();
        NAMESPACE[pkg_name]._ref_ = pkg_name;
        NAMESPACE[pkg_name]._class_ = NAMESPACE[pkg_name];  // XXX memory leak

        // TODO - add the other package global variables
        NAMESPACE[pkg_name]["List_ISA"] = [];
        NAMESPACE[pkg_name]["v_a"] = null;
        NAMESPACE[pkg_name]["v_b"] = null;
        NAMESPACE[pkg_name]["v__"] = null;
    }
    return NAMESPACE[pkg_name];
}

function _method_lookup_(method, class_name, seen) {
    // default mro
    c = NAMESPACE[class_name];
    if ( c.hasOwnProperty(method) ) {
        return c[method]
    }
    var isa = c.List_ISA;
    for (var i = 0; i < isa.length; i++) {
        if (!seen[isa[i]]) {
            var m = _method_lookup_(method, isa[i]);
            if (m) {
                return m 
            }
            seen[isa[i]]++;
        }
    }
    // TODO - AUTOLOAD
}

function p5cal(invocant, method, list) {
    // TODO - method can have an optional namespace
    list.unshift(invocant);
    if ( invocant._class_.hasOwnProperty(method) ) {
        return invocant._class_[method](list) 
    }
    var m = _method_lookup_(method, invocant._class_._ref_, {});
    if (m) {
        return m(list)
    }
    if ( NAMESPACE.UNIVERSAL.hasOwnProperty(method) ) {
        return NAMESPACE.UNIVERSAL[method](list) 
    }
    // TODO - cache the methods that were already looked up
    NAMESPACE.CORE.die(["method not found: ", method, " in class ", invocant._ref_]);
}

make_package("main");
NAMESPACE["main"]["v_@"] = [];   // $@

make_package("Perlito5");
make_package("Perlito5::IO");
make_package("Perlito5::Runtime");
make_package("Perlito5::Grammar");

function make_sub(pkg_name, sub_name, func) {
    NAMESPACE[pkg_name][sub_name] = func;
}

function set_local(namespace, name, sigil) {
    var v = name;
    if (sigil == "$") {
        v = "v_"+name;
    }
    LOCAL.push([namespace, v, namespace[v]]);
}

function cleanup_local(idx, value) {
    while (LOCAL.length > idx) {
        l = LOCAL.pop();
        l[0][l[1]] = l[2];
    }
    return value;
}

if (isNode) {
    List_ARGV = process.argv.splice(2);
} else if (typeof arguments === "object") {
    List_ARGV = arguments;
}

function HashRef(o) {
    this._hash_ = o;
    this._ref_ = "HASH";
    this.bool = function() { return 1 };
}

function ArrayRef(o) {
    this._array_ = o;
    this._ref_ = "ARRAY";
    this.bool = function() { return 1 };
}

function ScalarRef(o) {
    this._scalar_ = o;
    this._ref_ = "SCALAR";
    this.bool = function() { return 1 };
}

if (isNode) {
    var fs = require("fs");
    make_sub("Perlito5::IO", "slurp", function(List__) {
        return fs.readFileSync(List__[0],"utf8");
    });
} else {
    make_sub("Perlito5::IO", "slurp", function(List__) {
        var filename = List__[0];
        if (typeof readFile == "function") {
            return readFile(filename);
        }
        if (typeof read == "function") {
            // v8
            return read(filename);
        }
        NAMESPACE.CORE.die(["Perlito5::IO::slurp() not implemented"]);
    });
}

interpolate_array = function() {
    var res = [];
    for (i = 0; i < arguments.length; i++) {
        var o = arguments[i];
        if  (  o == null
            || o._class_    // perl5 blessed reference
            || o._ref_      // perl5 un-blessed reference
            )
        {
            res.push(o);
        }
        else if (o instanceof Array) {
            // perl5 array
            for (j = 0; j < o.length; j++) {
                res.push(o[j]);
            }
        }
        else if (typeof o === "object") {
            // perl5 hash
            for(var j in o) {
                if (o.hasOwnProperty(j)) {
                    res.push(j);
                    res.push(o[j]);
                }
            }
        }
        else {
            // non-ref
            res.push(o);
        }
    }
    return res;
};

array_to_hash = function(a) {
    var res = {};
    for (i = 0; i < a.length; i+=2) {
        res[p5str(a[i])] = a[i+1];
    }
    return res;
};

p5str = function(o) {
    if (o == null) {
        return "";
    }
    if (typeof o === "object" && (o instanceof Array)) {
        var out = [];
        for (var i = 0; i < o.length; i++) {
            out.push(p5str(o[i]));
        }
        return out.join(" ");
    }
    if (typeof o.string === "function") {
        return o.string();
    }
    if (typeof o !== "string") {
        return "" + o;
    }
    return o;
};

num = function(o) {
    if (o == null) {
        return 0;
    }
    if (typeof o === "object" && (o instanceof Array)) {
        return o.length;
    }
    if (typeof o.num === "function") {
        return o.num();
    }
    if (typeof o !== "number") {
        return parseFloat(p5str(o));
    }
    return o;
};

add = function(o1, o2) {
    return num(o1) + num(o2)
};

bool = function(o) {
    if (o == null) {
        return o;
    }
    if (typeof o === "boolean") {
        return o;
    }
    if (typeof o === "number") {
        return o;
    }
    if (typeof o === "string") {
        return o != "" && o != "0";
    }
    if (typeof o.bool === "function") {
        return o.bool();
    }
    if (typeof o.length === "number") {
        return o.length;
    }
    for (var i in o) {
        return true;
    }
    return false;
};

and = function(a, fb) {
    if (bool(a)) {
        return fb();
    }
    return a;
};

or = function(a, fb) {
    if (bool(a)) {
        return a;
    }
    return fb();
};

defined_or = function(a, fb) {
    if (a == null) {
        return fb();
    }
    return a;
};

str_replicate = function(o, n) {
    n = num(n);
    return n ? Array(n + 1).join(o) : "";
};

p5for = function(namespace, func, args) {
    var v_old = namespace["v__"];
    for(var i = 0; i < args.length; i++) {
        namespace["v__"] = args[i];
        func()
    }
    namespace["v__"] = v_old;
};

p5map = function(namespace, func, args) {
    var v_old = namespace["v__"];
    var out = [];
    for(var i = 0; i < args.length; i++) {
        namespace["v__"] = args[i];
        out.push(func())
    }
    namespace["v__"] = v_old;
    return out;
};

p5grep = function(namespace, func, args) {
    var v_old = namespace["v__"];
    var out = [];
    for(var i = 0; i < args.length; i++) {
        namespace["v__"] = args[i];
        if (bool(func())) {
            out.push(args[i])
        }
    }
    namespace["v__"] = v_old;
    return out;
};

p5sort = function(namespace, func, args) {
    var a_old = namespace["v_a"];
    var b_old = namespace["v_b"];
    var out = 
        func == null
        ? args.sort()
        : args.sort(
            function(a, b) {
                namespace["v_a"] = a;
                namespace["v_b"] = b;
                return func();
            }
        );
    namespace["v_a"] = a_old;
    namespace["v_b"] = b_old;
    return out;
};

function perl5_to_js( source, namespace, var_env_js ) {
    // say( "source: [" + source + "]" );

    var strict_old = NAMESPACE["Perlito5"].v_STRICT;
    var var_env_js_old = NAMESPACE["Perlito5"].v_VAR;
    NAMESPACE["Perlito5"].v_VAR = var_env_js;

    var namespace_old = NAMESPACE["Perlito5"].v_PKG_NAME;
    NAMESPACE["Perlito5"].v_PKG_NAME = namespace;

    match = p5cal(NAMESPACE["Perlito5::Grammar"], "exp_stmts", [source, 0]);

    if ( !match._hash_.bool || match._hash_.to != source.length ) {
        CORE.die(["Syntax error in eval near pos ", match._hash_.to]);
    }

    ast = NAMESPACE.CORE.bless([
        new HashRef({
            block:  NAMESPACE.CORE.bless([
                        new HashRef({
                            stmts:   p5cal(match, "flat", []),
                        }),
                        NAMESPACE["Perlito5::AST::Lit::Block"]
                    ]),
        }),
        NAMESPACE["Perlito5::AST::Do"]
    ]);

    // CORE.say( "ast: [" + perl(ast) + "]" );
    js_code = p5cal(ast, "emit_javascript", []);
    // CORE.say( "js-source: [" + js_code + "]" );

    NAMESPACE["Perlito5"].v_PKG_NAME = namespace_old;
    NAMESPACE["Perlito5"].v_VAR      = var_env_js_old;
    NAMESPACE["Perlito5"].v_STRICT = strict_old;
    return js_code;
}
//
//
// lib/Perlito5/Javascript/CORE.js
//
// CORE functions for "Perlito" Perl5-in-Javascript
//
// AUTHORS
//
// Flavio Soibelmann Glock  fglock@gmail.com
//
// COPYRIGHT
//
// Copyright 2009, 2010, 2011, 2012 by Flavio Soibelmann Glock and others.
//
// This program is free software; you can redistribute it and/or modify it
// under the same terms as Perl itself.
//
// See http://www.perl.com/perl/misc/Artistic.html

var CORE = NAMESPACE.CORE;

var isNode = typeof require != "undefined";
if (isNode) {
    CORE.print = function(List__) {
        var i;
        for (i = 0; i < List__.length; i++) {
            var s = p5str(List__[i]);
            process.stdout.write(s);
        }
        return 1;
    }
} else {
    var _print_buf = "";
    CORE.print = function(List__) {
        var i;
        for (i = 0; i < List__.length; i++) {
            var s = p5str(List__[i]);
            if (s.substr(s.length - 2, 2) == "\n") {
                print(_print_buf + s.substr(0, s.length - 2));
                _print_buf = "";
            }
            else if (s.substr(s.length - 1, 1) == "\n") {
                print(_print_buf + s.substr(0, s.length - 1));
                _print_buf = "";
            }
            else {
                _print_buf = _print_buf + s;
            }
        }
        return 1;
    };
}

CORE.say = function(List__) {
    CORE.print(List__);
    return CORE.print(["\n"]);
};

CORE.die = function(List__) {
    var i;
    var s = "";
    for (i = 0; i < List__.length; i++) {
        s = s + p5str(List__[i]);
    }
    NAMESPACE["main"]["v_@"] = "Died: " + s;
    throw(new p5_error("Died: " + s));
};

CORE.warn = function(List__) {
    var i;
    var s = "";
    for (i = 0; i < List__.length; i++) {
        s = s + p5str(List__[i]);
    }
    CORE.print(["Warning: " + s + "\n"]);
};

CORE.bless = function(List__) {
    var o        = List__[0];
    var pkg_name = List__[1];
    if (typeof pkg_name === "object") {
        // bless {}, Class
        o._class_ = pkg_name;
        return o;
    }
    if (!NAMESPACE.hasOwnProperty(pkg_name)) {
        make_package(pkg_name);
    }
    o._class_ = NAMESPACE[pkg_name];
    return o;
};

CORE.chr = function(List__) {
    return String.fromCharCode(num(List__[0]));
};

CORE.ord = function(List__) {
    return p5str(List__[0]).charCodeAt(0);
};

CORE.substr = function(List__) {
    var expr        = List__[0];
    var offset      = List__[1];
    var length      = List__[2];
    var replacement = List__[3];
    return p5str(expr).substr(offset, length);
};

CORE.scalar = function(List__) {
    var o = List__[0];
    if (o == null) {
        return 1;
    };
    if (typeof o.scalar === "function") {
        return o.scalar();
    }
    if (typeof o === "object" && (o instanceof Array)) {
        return o.length;
    }
    switch (typeof o) {
        case "string":   return o;
        case "function": return o;
        case "number":   return o;
        case "boolean":  return o;
    }
    var l = 0;
    for (var i in o) {
        l++;
    }
    return l;
};

CORE.values = function(List__) {
    var o = List__[0];
    if (o == null) {
        return [];
    };
    if (typeof o.values === "function") {
        return o.values();
    }
    var out = [];
    for (var i in o) {
        out.push(o[i]);
    }
    return out;
};

CORE.keys = function(List__) {
    var o = List__[0];
    if (o == null) {
        return [];
    }
    if (typeof o.keys === "function") {
        return o.keys();
    }
    var out = [];
    for (var i in o) {
        out.push(i);
    }
    return out;
};

CORE.reverse = function(List__) {
    var o = List__[0];
    if (o == null) {
        return "";
    }
    if (typeof o === "string") {
        return o.split("").reverse().join("")
    }
    var out = [];
    for(var i = 0; i < o.length; i++) {
        out.unshift(o[i]);
    }
    return out;
};

CORE.splice = function(List__) {
    var array  = List__.shift();
    // CORE.say([ array ]);
    var offset = num(List__.shift());
    var limit  = List__.length ? num(List__.shift()) : (array.length + 1);

    if (limit < 0) {
        limit = array.length + limit - 1;
    }

    var list   = interpolate_array(offset, limit, List__);
    out = array.splice.apply(array, list);
    // CORE.say([ CORE.join([":",array]), " ofs=", offset, " lim=", limit, " list=", list, " out=", CORE.join([":",out])  ]);
    return out;
};

CORE.pop = function(List__) {
    var o = List__[0];
    if (o.length == null) {
        return null;
    }
    return o.pop();
};

CORE.shift = function(List__) {
    var o = List__[0];
    if (o.length == null) {
        return null;
    }
    return o.shift();
};

CORE.push = function(List__) {
    var o = List__[0];
    var v = List__[1];
    return o.push(v);
};

CORE.unshift = function(List__) {
    var o = List__[0];
    var v = List__[1];
    return o.unshift(v);
};

CORE.join = function(List__) {
    var s = List__[0];
    var o = List__[1];
    return o.join(s);
};

CORE.index = function(List__) {
    var o = List__[0];
    var s = List__[1];
    try {
        return o.indexOf(s);
    }
    catch(err) {
        return -1;
    }
};

CORE.length = function(List__) {
    var o = List__[0];
    if (typeof o.string === "function") {
        return o.string().length;
    }
    return o.length;
};

CORE.ref = function(List__) {
    var o = List__[0];
    if (o == null) {
        return "";
    }
    if (o._class_ && typeof o._class_._ref_ === "string") {
        // blessed reference
        return o._class_._ref_;
    }
    if (typeof o._ref_ === "string") {
        // un-blessed reference
        return o._ref_;
    }
    if (typeof o === "function") {
        return "CODE";
    }
    return "";
};

CORE.split = function(List__) {
    var pattern = List__[0];
    var s       = List__[1];
    var limit   = List__[2];
    if (typeof pattern === "string") {
        if (pattern == " ") {
            var res = [];
            for (var i_ = 0, a_ = s.split(/(?: |\n)+/); i_ < a_.length ; i_++) {
                if (a_[i_] != "") {
                    res.push(a_[i_])
                }
            }
            return res;
        }
    }
    CORE.die(["not implemented"]);
};

CORE.prototype = function(List__, data) {
    var name = List__[0];
    // TODO - fully qualify "name" using information from "data"
    // XXX - lookup in CORE::GLOBAL?
    NAMESPACE["Perlito5"].v_PROTO._hash_[name] || NAMESPACE["Perlito5"].v_CORE_PROTO._hash_[name]
};

var p541 = make_package('Perlito5::Runtime');
var p531 = make_package('Perlito5::Dumper');
var p514 = make_package('Perlito5::AST::Val::Buf');
var p515 = make_package('Perlito5::AST::Lit::Block');
var p518 = make_package('Perlito5::AST::Var');
var p537 = make_package('Perlito5::Grammar::Bareword');
var p511 = make_package('Perlito5::AST::CompUnit');
var p539 = make_package('When');
var p523 = make_package('Perlito5::AST::While');
var p528 = make_package('Perlito5::AST::Do');
var p532 = make_package('Perlito5');
var p512 = make_package('Perlito5::AST::Val::Int');
var p517 = make_package('Perlito5::AST::Lookup');
var p534 = make_package('Perlito5::Javascript::LexicalBlock');
var p533 = make_package('Perlito5::Javascript');
var p524 = make_package('Perlito5::AST::For');
var p525 = make_package('Perlito5::AST::Decl');
var p519 = make_package('Perlito5::AST::Proto');
var p520 = make_package('Perlito5::AST::Call');
var p527 = make_package('Perlito5::AST::Sub');
var p516 = make_package('Perlito5::AST::Index');
var p521 = make_package('Perlito5::AST::Apply');
var p535 = make_package('Perlito5::Expression');
var p526 = make_package('Perlito5::AST::Sig');
var p513 = make_package('Perlito5::AST::Val::Num');
var p530 = make_package('Perlito5::strict');
var p538 = make_package('Perlito5::Grammar');
var p536 = make_package('Perlito5::Precedence');
var p540 = make_package('Perlito5::Grammar::String');
var p522 = make_package('Perlito5::AST::If');
var p510 = make_package('Perlito5::Match');
var p529 = make_package('Perlito5::AST::Use');
(function () {
	// package Perlito5
;
	(function () {
		// use v5
;
		// package Perlito5::Match
;
		p510["new"] = function (List__) {
				var v_class = null;
				(v_class = p510.shift([List__]));
				return (p510.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p510["from"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['from']);
		};
		p510["to"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['to']);
		};
		p510["str"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['str']);
		};
		p510["bool"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['bool']);
		};
		p510["capture"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['capture']);
		};
		p510["flat"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				if ( bool((v_self || (v_self = new HashRef({})))._hash_['bool']) ) {
					if ( bool(((v_self || (v_self = new HashRef({})))._hash_['capture'] != null)) ) {
						throw((v_self || (v_self = new HashRef({})))._hash_['capture']);
					};
					throw(p510.substr([(v_self || (v_self = new HashRef({})))._hash_['str'], (v_self || (v_self = new HashRef({})))._hash_['from'], ((num((v_self || (v_self = new HashRef({})))._hash_['to']) - num((v_self || (v_self = new HashRef({})))._hash_['from'])))]))
				}
				
				else {
					throw('')
				}
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
	})()
;
	// use Perlito5::Match
;
	(function () {
		// use v5
;
		// package Perlito5::AST::CompUnit
;
		p511["new"] = function (List__) {
				var v_class = null;
				(v_class = p511.shift([List__]));
				return (p511.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p511["name"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['name']);
		};
		p511["body"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['body']);
		};
		// package Perlito5::AST::Val::Int
;
		p512["new"] = function (List__) {
				var v_class = null;
				(v_class = p512.shift([List__]));
				return (p512.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p512["int"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['int']);
		};
		// package Perlito5::AST::Val::Num
;
		p513["new"] = function (List__) {
				var v_class = null;
				(v_class = p513.shift([List__]));
				return (p513.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p513["num"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['num']);
		};
		// package Perlito5::AST::Val::Buf
;
		p514["new"] = function (List__) {
				var v_class = null;
				(v_class = p514.shift([List__]));
				return (p514.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p514["buf"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['buf']);
		};
		// package Perlito5::AST::Lit::Block
;
		p515["new"] = function (List__) {
				var v_class = null;
				(v_class = p515.shift([List__]));
				return (p515.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p515["sig"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['sig']);
		};
		p515["stmts"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['stmts']);
		};
		// package Perlito5::AST::Index
;
		p516["new"] = function (List__) {
				var v_class = null;
				(v_class = p516.shift([List__]));
				return (p516.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p516["obj"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['obj']);
		};
		p516["index_exp"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['index_exp']);
		};
		// package Perlito5::AST::Lookup
;
		p517["new"] = function (List__) {
				var v_class = null;
				(v_class = p517.shift([List__]));
				return (p517.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p517["obj"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['obj']);
		};
		p517["index_exp"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['index_exp']);
		};
		// package Perlito5::AST::Var
;
		p518["new"] = function (List__) {
				var v_class = null;
				(v_class = p518.shift([List__]));
				return (p518.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p518["sigil"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['sigil']);
		};
		p518["namespace"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['namespace']);
		};
		p518["name"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['name']);
		};
		p518["plain_name"] = function (List__) {
			try {
				var v_self = null;
				(v_self = p518.shift([List__]));
				if ( bool(p5cal(v_self, "namespace", [])) ) {
					throw((p5str(p5cal(v_self, "namespace", [])) + '::' + p5str(p5cal(v_self, "name", []))));
				};
				throw(p5cal(v_self, "name", []))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		// package Perlito5::AST::Proto
;
		p519["new"] = function (List__) {
				var v_class = null;
				(v_class = p519.shift([List__]));
				return (p519.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p519["name"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['name']);
		};
		// package Perlito5::AST::Call
;
		p520["new"] = function (List__) {
				var v_class = null;
				(v_class = p520.shift([List__]));
				return (p520.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p520["invocant"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['invocant']);
		};
		p520["method"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['method']);
		};
		p520["arguments"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['arguments']);
		};
		// package Perlito5::AST::Apply
;
		p521["new"] = function (List__) {
				var v_class = null;
				(v_class = p521.shift([List__]));
				return (p521.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p521["code"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['code']);
		};
		p521["arguments"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['arguments']);
		};
		p521["namespace"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['namespace']);
		};
		// package Perlito5::AST::If
;
		p522["new"] = function (List__) {
				var v_class = null;
				(v_class = p522.shift([List__]));
				return (p522.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p522["cond"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['cond']);
		};
		p522["body"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['body']);
		};
		p522["otherwise"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['otherwise']);
		};
		// package Perlito5::AST::While
;
		p523["new"] = function (List__) {
				var v_class = null;
				(v_class = p523.shift([List__]));
				return (p523.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p523["init"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['init']);
		};
		p523["cond"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['cond']);
		};
		p523["continue"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['continue']);
		};
		p523["body"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['body']);
		};
		// package Perlito5::AST::For
;
		p524["new"] = function (List__) {
				var v_class = null;
				(v_class = p524.shift([List__]));
				return (p524.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p524["cond"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['cond']);
		};
		p524["body"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['body']);
		};
		// package Perlito5::AST::Decl
;
		p525["new"] = function (List__) {
				var v_class = null;
				(v_class = p525.shift([List__]));
				return (p525.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p525["decl"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['decl']);
		};
		p525["type"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['type']);
		};
		p525["var"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['var']);
		};
		// package Perlito5::AST::Sig
;
		p526["new"] = function (List__) {
				var v_class = null;
				(v_class = p526.shift([List__]));
				return (p526.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p526["positional"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['positional']);
		};
		// package Perlito5::AST::Sub
;
		p527["new"] = function (List__) {
				var v_class = null;
				(v_class = p527.shift([List__]));
				return (p527.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p527["name"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['name']);
		};
		p527["sig"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['sig']);
		};
		p527["block"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['block']);
		};
		// package Perlito5::AST::Do
;
		p528["new"] = function (List__) {
				var v_class = null;
				(v_class = p528.shift([List__]));
				return (p528.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p528["block"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['block']);
		};
		// package Perlito5::AST::Use
;
		p529["new"] = function (List__) {
				var v_class = null;
				(v_class = p529.shift([List__]));
				return (p529.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		p529["mod"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['mod']);
		};
		p529["code"] = function (List__) {
				return ((List__[0] || (List__[0] = new HashRef({})))._hash_['code']);
		};
		p529["compiletime_eval"] = function (List__) {
			try {
				var v_self = null;
				(v_self = p529.shift([List__]));
				if ( (p5cal(v_self, "mod", []) == 'strict') ) {
					if ( (p5cal(v_self, "code", []) == 'use') ) {
						p5cal(p530, "import", []);
					}
					else {
						if ( (p5cal(v_self, "code", []) == 'no') ) {
							p5cal(p530, "unimport", []);
						};
					};
				};
				throw(v_self)
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
	})()
;
	(function () {
		// package Perlito5::Dumper
;
		p531["Dumper"] = function (List__) {
			try {
				var v_obj = null;
				(v_obj = List__[0]);
				var v_level = null;
				(v_level = or(List__[1], function () { return 0; }));
				var v_ref = null;
				(v_ref = p531.ref([v_obj]));
				var v_tab = null;
				(v_tab = str_replicate('    ', v_level));
				var v_tab1 = null;
				(v_tab1 = (p5str(v_tab) + '    '));
				if ( (v_ref == 'ARRAY') ) {
					throw(('[' + String.fromCharCode(10) + p531.join(['', p5map(p531, function () {
	return ((p5str(v_tab1) + p5str(p531.Dumper([p531["v__"], add(v_level, 1)])) + ',' + String.fromCharCode(10)));
}, (v_obj || (v_obj = new ArrayRef([])))._array_)]) + p5str(v_tab) + ']'));
				}
				else {
					if ( (v_ref == 'HASH') ) {
						throw(('{' + String.fromCharCode(10) + p531.join(['', p5map(p531, function () {
	return ((p5str(v_tab1) + (String.fromCharCode(39) + p5str(p531["v__"]) + String.fromCharCode(39) + ' => ') + p5str(p531.Dumper([(v_obj || (v_obj = new HashRef({})))._hash_[p531["v__"]], add(v_level, 1)])) + ',' + String.fromCharCode(10)));
}, p531.keys([(v_obj)._hash_]))]) + p5str(v_tab) + '}'));
					}
					else {
						if ( bool(v_ref) ) {
							throw(('bless(' + '...' + (', ' + String.fromCharCode(39) + p5str(v_ref) + String.fromCharCode(39) + ')')));
						};
					};
				};
				throw((String.fromCharCode(39) + p5str(v_obj) + String.fromCharCode(39)))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		1;
	})()
;
	(function () {
		// use v5
;
		// use Perlito5::AST
;
		// use Perlito5::Dumper
;
		// package Perlito5::Javascript
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			var v_label_count = null;
			(v_label_count = 10);
			var Hash_label = {};
			p533["pkg"] = function (List__) {
					return ((Hash_label[or(List__[0], function () { return p532.v_PKG_NAME; })] = or(Hash_label[or(List__[0], function () { return p532.v_PKG_NAME; })], function () { return ('p5' + p5str((v_label_count)++)); })));
			};
			p533["dump_labels"] = function (List__) {
				try {
					var v_str = null;
					(v_str = '');
					p5for(p533, function () {
						(v_str = (p5str(v_str) + ('var ' + p5str(Hash_label[p533["v__"]]) + ' = make_package(' + String.fromCharCode(39) + p5str(p533["v__"]) + String.fromCharCode(39) + ');' + String.fromCharCode(10))));
					}, interpolate_array(p533.keys([Hash_label])));
					throw(v_str)
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
			p533["tab"] = function (List__) {
					var v_level = null;
					(v_level = p533.shift([List__]));
					return (str_replicate(String.fromCharCode(9), v_level));
			};
			var Hash_safe_char = {};
			(Hash_safe_char = array_to_hash(interpolate_array(' ', 1, '!', 1, '"', 1, '#', 1, '$', 1, '%', 1, '&', 1, '(', 1, ')', 1, '*', 1, '+', 1, ',', 1, '-', 1, '.', 1, '/', 1, ':', 1, ';', 1, '<', 1, '=', 1, '>', 1, '?', 1, '@', 1, '[', 1, ']', 1, '^', 1, '_', 1, '`', 1, '{', 1, '|', 1, '}', 1, '~', 1)));
			p533["escape_string"] = function (List__) {
				try {
					var v_s = null;
					(v_s = p533.shift([List__]));
					var List_out = [];
					var v_tmp = null;
					(v_tmp = '');
					if ( (v_s == '') ) {
						throw(String.fromCharCode(39) + String.fromCharCode(39));
					};
					for (var i_ = 0, a_ = (interpolate_array((function (a) { for (var i=0, l=(num(p533.length([v_s])) - 1); i<=l; ++i){ a.push(i) }; return a })([]))); i_ < a_.length ; i_++) { (function (v_i) {
						var v_c = null;
						(v_c = p533.substr([v_s, v_i, 1]));
						if ( (((((v_c >= 'a') && (v_c <= 'z')) || ((v_c >= 'A') && (v_c <= 'Z'))) || ((v_c >= '0') && (v_c <= '9'))) || bool((Hash_safe_char).hasOwnProperty(v_c))) ) {
							(v_tmp = (p5str(v_tmp) + p5str(v_c)));
						}
						else {
							if ( (v_tmp != '') ) {
								p533.push([List_out, (String.fromCharCode(39) + p5str(v_tmp) + String.fromCharCode(39))]);
							};
							p533.push([List_out, ('String.fromCharCode(' + p5str(p533.ord([v_c])) + ')')]);
							(v_tmp = '');
						};
					})(a_[i_]) };
					if ( (v_tmp != '') ) {
						p533.push([List_out, (String.fromCharCode(39) + p5str(v_tmp) + String.fromCharCode(39))]);
					};
					throw(p533.join([' + ', List_out]))
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
			p533["to_str"] = function (List__) {
				try {
					var v_cond = null;
					(v_cond = p533.shift([List__]));
					if ( (((bool(p5cal(v_cond, "isa", ['Perlito5::AST::Apply'])) && (p5cal(v_cond, "code", []) == 'circumfix:<( )>')) && bool((v_cond || (v_cond = new HashRef({})))._hash_['arguments'])) && bool(((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] || ((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)) ) {
						throw(p533.to_str([((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] || ((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]]));
					};
					if ( (bool(p5cal(v_cond, "isa", ['Perlito5::AST::Val::Buf'])) || (bool(p5cal(v_cond, "isa", ['Perlito5::AST::Apply'])) && (((p5cal(v_cond, "code", []) == 'substr') || (p5cal(v_cond, "code", []) == 'join')) || (p5cal(v_cond, "code", []) == 'list:<.>')))) ) {
						throw(p5cal(v_cond, "emit_javascript", []))
					}
					
					else {
						throw(('p5str(' + p5str(p5cal(v_cond, "emit_javascript", [])) + ')'))
					}
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
			p533["to_num"] = function (List__) {
				try {
					var v_cond = null;
					(v_cond = p533.shift([List__]));
					if ( (bool(p5cal(v_cond, "isa", ['Perlito5::AST::Val::Int'])) || bool(p5cal(v_cond, "isa", ['Perlito5::AST::Val::Num']))) ) {
						throw(p5cal(v_cond, "emit_javascript", []))
					}
					
					else {
						throw(('num(' + p5str(p5cal(v_cond, "emit_javascript", [])) + ')'))
					}
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
			p533["to_bool"] = function (List__) {
				try {
					var v_cond = null;
					(v_cond = p533.shift([List__]));
					if ( (((bool(p5cal(v_cond, "isa", ['Perlito5::AST::Apply'])) && (p5cal(v_cond, "code", []) == 'circumfix:<( )>')) && bool((v_cond || (v_cond = new HashRef({})))._hash_['arguments'])) && bool(((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] || ((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)) ) {
						throw(p533.to_bool([((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] || ((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]]));
					};
					if ( (bool(p5cal(v_cond, "isa", ['Perlito5::AST::Apply'])) && ((p5cal(v_cond, "code", []) == 'infix:<&&>') || (p5cal(v_cond, "code", []) == 'infix:<and>'))) ) {
						throw(('(' + p5str(p533.to_bool([((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] || ((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]])) + ' && ' + p5str(p533.to_bool([((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] || ((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[1]])) + ')'));
					};
					if ( (bool(p5cal(v_cond, "isa", ['Perlito5::AST::Apply'])) && ((p5cal(v_cond, "code", []) == 'infix:<||>') || (p5cal(v_cond, "code", []) == 'infix:<or>'))) ) {
						throw(('(' + p5str(p533.to_bool([((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] || ((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]])) + ' || ' + p5str(p533.to_bool([((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] || ((v_cond || (v_cond = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[1]])) + ')'));
					};
					if ( ((bool(p5cal(v_cond, "isa", ['Perlito5::AST::Val::Int'])) || bool(p5cal(v_cond, "isa", ['Perlito5::AST::Val::Num']))) || (bool(p5cal(v_cond, "isa", ['Perlito5::AST::Apply'])) && (((((((((((p5cal(v_cond, "code", []) == 'prefix:<!>') || (p5cal(v_cond, "code", []) == 'infix:<!=>')) || (p5cal(v_cond, "code", []) == 'infix:<==>')) || (p5cal(v_cond, "code", []) == 'infix:<<=>')) || (p5cal(v_cond, "code", []) == 'infix:<>=>')) || (p5cal(v_cond, "code", []) == 'infix:<>>')) || (p5cal(v_cond, "code", []) == 'infix:<<>')) || (p5cal(v_cond, "code", []) == 'infix:<eq>')) || (p5cal(v_cond, "code", []) == 'infix:<ne>')) || (p5cal(v_cond, "code", []) == 'infix:<ge>')) || (p5cal(v_cond, "code", []) == 'infix:<le>')))) ) {
						throw(p5cal(v_cond, "emit_javascript", []))
					}
					
					else {
						throw(('bool(' + p5str(p5cal(v_cond, "emit_javascript", [])) + ')'))
					}
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
			p533["to_list"] = function (List__) {
					var v_items = null;
					(v_items = p533.to_list_preprocess([List__[0]]));
					return (( bool((v_items || (v_items = new ArrayRef([])))._array_) ? ('interpolate_array(' + p533.join([', ', p5map(p533, function () {
	return (p5cal(p533["v__"], "emit_javascript", []));
}, (v_items || (v_items = new ArrayRef([])))._array_)]) + ')') : '[]'));
			};
			p533["to_list_preprocess"] = function (List__) {
				try {
					var List_items = [];
					for (var i_ = 0, a_ = (interpolate_array((List__[0] || (List__[0] = new ArrayRef([])))._array_)); i_ < a_.length ; i_++) { (function (v_item) {
						if ( (bool(p5cal(v_item, "isa", ['Perlito5::AST::Apply'])) && (((p5cal(v_item, "code", []) == 'circumfix:<( )>') || (p5cal(v_item, "code", []) == 'list:<,>')) || (p5cal(v_item, "code", []) == 'infix:<=>>'))) ) {
							for (var i_ = 0, a_ = (interpolate_array((p533.to_list_preprocess([p5cal(v_item, "arguments", [])]) || (p533.to_list_preprocess([p5cal(v_item, "arguments", [])]) = new ArrayRef([])))._array_)); i_ < a_.length ; i_++) { (function (v_arg) {
								p533.push([List_items, v_arg]);
							})(a_[i_]) };
						}
						else {
							p533.push([List_items, v_item]);
						};
					})(a_[i_]) };
					throw((new ArrayRef(List_items)))
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::Javascript::LexicalBlock
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p534["new"] = function (List__) {
					var v_class = null;
					(v_class = p534.shift([List__]));
					return (p534.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
			};
			p534["block"] = function (List__) {
					return ((List__[0] || (List__[0] = new HashRef({})))._hash_['block']);
			};
			p534["needs_return"] = function (List__) {
					return ((List__[0] || (List__[0] = new HashRef({})))._hash_['needs_return']);
			};
			p534["top_level"] = function (List__) {
					return ((List__[0] || (List__[0] = new HashRef({})))._hash_['top_level']);
			};
			p534["has_decl"] = function (List__) {
				try {
					var v_self = null;
					(v_self = List__[0]);
					var v_type = null;
					(v_type = List__[1]);
					for (var i_ = 0, a_ = (interpolate_array(((v_self || (v_self = new HashRef({})))._hash_['block'] || ((v_self || (v_self = new HashRef({})))._hash_['block'] = new ArrayRef([])))._array_)); i_ < a_.length ; i_++) { (function (v_decl) {
						if ( bool((v_decl != null)) ) {
							if ( (bool(p5cal(v_decl, "isa", ['Perlito5::AST::Decl'])) && (p5cal(v_decl, "decl", []) == v_type)) ) {
								throw(1);
							};
							if ( (bool(p5cal(v_decl, "isa", ['Perlito5::AST::Apply'])) && (p5cal(v_decl, "code", []) == 'infix:<=>')) ) {
								(function () {
									var v_var = null;
									(v_var = (p5cal(v_decl, "arguments", []) || (p5cal(v_decl, "arguments", []) = new ArrayRef([])))._array_[0]);
									if ( (bool(p5cal(v_var, "isa", ['Perlito5::AST::Decl'])) && (p5cal(v_var, "decl", []) == v_type)) ) {
										throw(1);
									};
									})();
							};
						};
					})(a_[i_]) };
					throw(0)
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
			p534["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p534["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p534.shift([List__]));
					var v_level = null;
					(v_level = p534.shift([List__]));
					var List_block = [];
					p5for(p534, function () {
						if ( bool((p534["v__"] != null)) ) {
							p534.push([List_block, p534["v__"]]);
						};
					}, interpolate_array(((v_self || (v_self = new HashRef({})))._hash_['block'] || ((v_self || (v_self = new HashRef({})))._hash_['block'] = new ArrayRef([])))._array_));
					if ( !( bool(List_block)) ) {
						throw((p5str(p533.tab([v_level])) + 'null;'));
					};
					var v_out = null;
					(v_out = '');
					var List_str = [];
					var v_has_local = null;
					(v_has_local = p5cal(v_self, "has_decl", ['local']));
					var v_create_context = null;
					(v_create_context = and((v_self || (v_self = new HashRef({})))._hash_['create_context'], function () { return p5cal(v_self, "has_decl", ['my']); }));
					var v_outer_pkg = null;
					(v_outer_pkg = p532.v_PKG_NAME);
					var v_outer_throw = null;
					(v_outer_throw = p532.v_THROW);
					p534.unshift([(p532.v_VAR || (p532.v_VAR = new ArrayRef([])))._array_, (new HashRef(array_to_hash([])))]);
					if ( bool((v_self || (v_self = new HashRef({})))._hash_['top_level']) ) {
						(p532.v_THROW = 0);
					};
					if ( bool(v_has_local) ) {
						(v_out = (p5str(v_out) + (p5str(p533.tab([v_level])) + 'var local_idx = LOCAL.length;' + String.fromCharCode(10))));
					};
					if ( bool((v_self || (v_self = new HashRef({})))._hash_['top_level']) ) {
						(v_level)++;
					};
					if ( bool(v_create_context) ) {
						(v_out = (p5str(v_out) + (p5str(p533.tab([v_level])) + '(function () {' + String.fromCharCode(10))));
						(v_level)++;
					};
					var v_tab = null;
					(v_tab = p533.tab([v_level]));
					var v_last_statement = null;
					if ( bool((v_self || (v_self = new HashRef({})))._hash_['needs_return']) ) {
						(v_last_statement = p534.pop([List_block]));
					};
					for (var i_ = 0, a_ = (interpolate_array(List_block)); i_ < a_.length ; i_++) { (function (v_decl) {
						if ( ((p534.ref([v_decl]) == 'Perlito5::AST::Apply') && (p5cal(v_decl, "code", []) == 'package')) ) {
							(p532.v_PKG_NAME = (v_decl || (v_decl = new HashRef({})))._hash_['namespace']);
							(((p532.v_VAR || (p532.v_VAR = new ArrayRef([])))._array_[0] || ((p532.v_VAR || (p532.v_VAR = new ArrayRef([])))._array_[0] = new HashRef({})))._hash_['$_'] = (new HashRef(array_to_hash(interpolate_array('decl', 'our', 'namespace', p532.v_PKG_NAME)))));
							(((p532.v_VAR || (p532.v_VAR = new ArrayRef([])))._array_[0] || ((p532.v_VAR || (p532.v_VAR = new ArrayRef([])))._array_[0] = new HashRef({})))._hash_['$a'] = (new HashRef(array_to_hash(interpolate_array('decl', 'our', 'namespace', p532.v_PKG_NAME)))));
							(((p532.v_VAR || (p532.v_VAR = new ArrayRef([])))._array_[0] || ((p532.v_VAR || (p532.v_VAR = new ArrayRef([])))._array_[0] = new HashRef({})))._hash_['$b'] = (new HashRef(array_to_hash(interpolate_array('decl', 'our', 'namespace', p532.v_PKG_NAME)))));
						};
						if ( bool(p5cal(v_decl, "isa", ['Perlito5::AST::Decl'])) ) {
							p534.push([List_str, p5cal(v_decl, "emit_javascript_init", [])]);
						};
						if ( (bool(p5cal(v_decl, "isa", ['Perlito5::AST::Apply'])) && (p5cal(v_decl, "code", []) == 'infix:<=>')) ) {
							if ( bool(p5cal(((v_decl || (v_decl = new HashRef({})))._hash_['arguments'] || ((v_decl || (v_decl = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "isa", ['Perlito5::AST::Decl'])) ) {
								p534.push([List_str, p5cal(((v_decl || (v_decl = new HashRef({})))._hash_['arguments'] || ((v_decl || (v_decl = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "emit_javascript_init", [])]);
							};
						};
						if ( !( (bool(p5cal(v_decl, "isa", ['Perlito5::AST::Decl'])) && (p5cal(v_decl, "decl", []) == 'my'))) ) {
							p534.push([List_str, (p5str(p5cal(v_decl, "emit_javascript_indented", [v_level])) + ';')]);
						};
					})(a_[i_]) };
					if ( (bool((v_self || (v_self = new HashRef({})))._hash_['needs_return']) && bool(v_last_statement)) ) {
						if ( bool(p5cal(v_last_statement, "isa", ['Perlito5::AST::Decl'])) ) {
							p534.push([List_str, p5cal(v_last_statement, "emit_javascript_init", [])]);
						};
						if ( (bool(p5cal(v_last_statement, "isa", ['Perlito5::AST::Apply'])) && (p5cal(v_last_statement, "code", []) == 'infix:<=>')) ) {
							if ( bool(p5cal(((v_last_statement || (v_last_statement = new HashRef({})))._hash_['arguments'] || ((v_last_statement || (v_last_statement = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "isa", ['Perlito5::AST::Decl'])) ) {
								p534.push([List_str, p5cal(((v_last_statement || (v_last_statement = new HashRef({})))._hash_['arguments'] || ((v_last_statement || (v_last_statement = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "emit_javascript_init", [])]);
							};
						};
						if ( bool(p5cal(v_last_statement, "isa", ['Perlito5::AST::If'])) ) {
							(function () {
								var v_cond = null;
								(v_cond = p5cal(v_last_statement, "cond", []));
								var v_body = null;
								(v_body = p5cal(v_last_statement, "body", []));
								var v_otherwise = null;
								(v_otherwise = p5cal(v_last_statement, "otherwise", []));
								(v_body = p5cal(p534, "new", ['block', p5cal(v_body, "stmts", []),'needs_return', 1]));
								p534.push([List_str, ('if ( ' + p5str(p533.to_bool([v_cond])) + ' ) {' + String.fromCharCode(10) + p5str(p5cal(v_body, "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}')]);
								if ( bool(v_otherwise) ) {
									(v_otherwise = p5cal(p534, "new", ['block', p5cal(v_otherwise, "stmts", []),'needs_return', 1]));
									p534.push([List_str, (String.fromCharCode(10) + p5str(p533.tab([v_level])) + 'else {' + String.fromCharCode(10) + p5str(p5cal(v_otherwise, "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}')]);
								};
								})();
						}
						else {
							if ( bool(p5cal(v_last_statement, "isa", ['Perlito5::AST::Lit::Block'])) ) {
								(function () {
									var v_body = null;
									(v_body = p5cal(p534, "new", ['block', (v_last_statement || (v_last_statement = new HashRef({})))._hash_['stmts'],'needs_return', 1]));
									p534.push([List_str, ('for (var i_ = 0; i_ < 1 ; i_++) {' + String.fromCharCode(10) + p5str(p5cal(v_body, "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}')]);
									})();
							}
							else {
								if ( (((bool(p5cal(v_last_statement, "isa", ['Perlito5::AST::For'])) || bool(p5cal(v_last_statement, "isa", ['Perlito5::AST::While']))) || (bool(p5cal(v_last_statement, "isa", ['Perlito5::AST::Apply'])) && (p5cal(v_last_statement, "code", []) == 'goto'))) || (bool(p5cal(v_last_statement, "isa", ['Perlito5::AST::Apply'])) && (p5cal(v_last_statement, "code", []) == 'return'))) ) {
									p534.push([List_str, p5cal(v_last_statement, "emit_javascript_indented", [v_level])]);
								}
								else {
									if ( bool(v_has_local) ) {
										p534.push([List_str, ('return cleanup_local(local_idx, (' + p5str(p5cal(v_last_statement, "emit_javascript_indented", [add(v_level, 1)])) + '));')]);
									}
									else {
										p534.push([List_str, ('return (' + p5str(p5cal(v_last_statement, "emit_javascript_indented", [add(v_level, 1)])) + ');')]);
									};
								};
							};
						};
					};
					if ( bool(v_has_local) ) {
						p534.push([List_str, 'cleanup_local(local_idx, null);']);
					};
					if ( bool(v_create_context) ) {
						(v_level)--;
						p534.push([List_str, '})();']);
					};
					if ( (bool((v_self || (v_self = new HashRef({})))._hash_['top_level']) && bool(p532.v_THROW)) ) {
						(v_level)--;
						(v_out = (p5str(v_out) + (p5str(p533.tab([v_level])) + 'try {' + String.fromCharCode(10) + p534.join([String.fromCharCode(10), p5map(p534, function () {
	return ((p5str(v_tab) + p5str(p534["v__"])));
}, List_str)]) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}' + String.fromCharCode(10) + p5str(p533.tab([v_level])) + 'catch(err) {' + String.fromCharCode(10) + p5str(p533.tab([add(v_level, 1)])) + 'if ( err instanceof Error ) {' + String.fromCharCode(10) + p5str(p533.tab([add(v_level, 2)])) + 'throw(err);' + String.fromCharCode(10) + p5str(p533.tab([add(v_level, 1)])) + '}' + String.fromCharCode(10) + p5str(p533.tab([add(v_level, 1)])) + 'else {' + String.fromCharCode(10) + p5str(p533.tab([add(v_level, 2)])) + p5str(( bool(v_has_local) ? 'return cleanup_local(local_idx, err)' : 'return(err)')) + ';' + String.fromCharCode(10) + p5str(p533.tab([add(v_level, 1)])) + '}' + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}')));
					}
					else {
						(v_out = (p5str(v_out) + p534.join([String.fromCharCode(10), p5map(p534, function () {
	return ((p5str(v_tab) + p5str(p534["v__"])));
}, List_str)])));
					};
					(p532.v_PKG_NAME = v_outer_pkg);
					if ( bool((v_self || (v_self = new HashRef({})))._hash_['top_level']) ) {
						(p532.v_THROW = v_outer_throw);
					};
					p534.shift([(p532.v_VAR || (p532.v_VAR = new ArrayRef([])))._array_]);
					throw(v_out)
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::CompUnit
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p511["emit_javascript"] = function (List__) {
					var v_self = null;
					(v_self = List__[0]);
					return (p5cal(v_self, "emit_javascript_indented", [0]));
			};
			p511["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = List__[0]);
					var v_level = null;
					(v_level = List__[1]);
					var v_str = null;
					(v_str = ('(function () {' + String.fromCharCode(10) + p5str(p5cal(p5cal(p534, "new", ['block', (v_self || (v_self = new HashRef({})))._hash_['body'],'needs_return', 0]), "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '})()' + String.fromCharCode(10)));
					throw(v_str)
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
			p511["emit_javascript_program"] = function (List__) {
				try {
					var v_comp_units = null;
					(v_comp_units = p511.shift([List__]));
					(p532.v_PKG_NAME = 'main');
					var v_str = null;
					(v_str = '');
					(p532.v_VAR = (new ArrayRef(interpolate_array((new HashRef(array_to_hash(interpolate_array('@_', (new HashRef(array_to_hash(interpolate_array('decl', 'my')))), '@ARGV', (new HashRef(array_to_hash(interpolate_array('decl', 'my')))), '$@', (new HashRef(array_to_hash(interpolate_array('decl', 'our', 'namespace', 'main')))), '$_', (new HashRef(array_to_hash(interpolate_array('decl', 'our', 'namespace', p532.v_PKG_NAME)))), '$a', (new HashRef(array_to_hash(interpolate_array('decl', 'our', 'namespace', p532.v_PKG_NAME)))), '$b', (new HashRef(array_to_hash(interpolate_array('decl', 'our', 'namespace', p532.v_PKG_NAME))))))))))));
					for (var i_ = 0, a_ = (interpolate_array((v_comp_units || (v_comp_units = new ArrayRef([])))._array_)); i_ < a_.length ; i_++) { (function (v_comp_unit) {
						(v_str = (p5str(v_str) + p5str(p5cal(v_comp_unit, "emit_javascript", [])) + String.fromCharCode(10)));
					})(a_[i_]) };
					throw((p5str(p533.dump_labels([])) + p5str(v_str)))
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::Val::Int
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p512["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p512["emit_javascript_indented"] = function (List__) {
					var v_self = null;
					(v_self = p512.shift([List__]));
					var v_level = null;
					(v_level = p512.shift([List__]));
					return ((v_self || (v_self = new HashRef({})))._hash_['int']);
			};
		};
		// package Perlito5::AST::Val::Num
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p513["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p513["emit_javascript_indented"] = function (List__) {
					var v_self = null;
					(v_self = p513.shift([List__]));
					var v_level = null;
					(v_level = p513.shift([List__]));
					return ((v_self || (v_self = new HashRef({})))._hash_['num']);
			};
		};
		// package Perlito5::AST::Val::Buf
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p514["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p514["emit_javascript_indented"] = function (List__) {
					var v_self = null;
					(v_self = p514.shift([List__]));
					var v_level = null;
					(v_level = p514.shift([List__]));
					return (p533.escape_string([(v_self || (v_self = new HashRef({})))._hash_['buf']]));
			};
		};
		// package Perlito5::AST::Lit::Block
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p515["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p515["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p515.shift([List__]));
					var v_level = null;
					(v_level = p515.shift([List__]));
					var v_body = null;
					(v_body = p5cal(p534, "new", ['block', (v_self || (v_self = new HashRef({})))._hash_['stmts'],'needs_return', 0]));
					throw(('for (var i_ = 0; i_ < 1 ; i_++) {' + String.fromCharCode(10) + p5str(p5cal(v_body, "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}'))
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::Index
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p516["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p516["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p516.shift([List__]));
					var v_level = null;
					(v_level = p516.shift([List__]));
					if ( (bool(p5cal((v_self || (v_self = new HashRef({})))._hash_['obj'], "isa", ['Perlito5::AST::Var'])) && (p5cal((v_self || (v_self = new HashRef({})))._hash_['obj'], "sigil", []) == '$')) ) {
						(function () {
							var v_v = null;
							(v_v = p5cal(p518, "new", ['sigil', '@','namespace', p5cal((v_self || (v_self = new HashRef({})))._hash_['obj'], "namespace", []),'name', p5cal((v_self || (v_self = new HashRef({})))._hash_['obj'], "name", [])]));
							throw((p5str(p5cal(v_v, "emit_javascript_indented", [v_level])) + '[' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['index_exp'], "emit_javascript", [])) + ']'));
							})();
					};
					return (('(' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['obj'], "emit_javascript", [])) + ' || (' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['obj'], "emit_javascript", [])) + ' = new ArrayRef([]))' + ')._array_[' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['index_exp'], "emit_javascript", [])) + ']'));
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::Lookup
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p517["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p517["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p517.shift([List__]));
					var v_level = null;
					(v_level = p517.shift([List__]));
					if ( (bool(p5cal((v_self || (v_self = new HashRef({})))._hash_['obj'], "isa", ['Perlito5::AST::Var'])) && (p5cal((v_self || (v_self = new HashRef({})))._hash_['obj'], "sigil", []) == '$')) ) {
						(function () {
							var v_v = null;
							(v_v = p5cal(p518, "new", ['sigil', '%','namespace', p5cal((v_self || (v_self = new HashRef({})))._hash_['obj'], "namespace", []),'name', p5cal((v_self || (v_self = new HashRef({})))._hash_['obj'], "name", [])]));
							throw((p5str(p5cal(v_v, "emit_javascript_indented", [v_level])) + '[' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['index_exp'], "emit_javascript", [])) + ']'));
							})();
					};
					return (('(' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['obj'], "emit_javascript", [])) + ' || (' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['obj'], "emit_javascript", [])) + ' = new HashRef({}))' + ')._hash_[' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['index_exp'], "emit_javascript", [])) + ']'));
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::Var
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			var v_table = null;
			(v_table = (new HashRef(array_to_hash(interpolate_array('$', 'v_', '@', 'List_', '%', 'Hash_', '&', '')))));
			p518["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p518["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p518.shift([List__]));
					var v_level = null;
					(v_level = p518.shift([List__]));
					var v_perl5_name = null;
					(v_perl5_name = p5cal(v_self, "perl5_name", []));
					var v_decl_type = null;
					var v_decl = null;
					(v_decl = p5cal(v_self, "perl5_get_decl", [v_perl5_name]));
					if ( bool(v_decl) ) {
						(v_decl_type = (v_decl || (v_decl = new HashRef({})))._hash_['decl']);
					}
					else {
						if ( ((!( bool((v_self || (v_self = new HashRef({})))._hash_['namespace'])) && ((v_self || (v_self = new HashRef({})))._hash_['sigil'] != '*')) && bool(p532.v_STRICT)) ) {
							p518.die([('Global symbol "' + p5str(v_perl5_name) + '" requires explicit package name')]);
						};
					};
					if ( ((v_self || (v_self = new HashRef({})))._hash_['sigil'] == '&') ) {
						throw((p5str(p533.pkg([or((v_self || (v_self = new HashRef({})))._hash_['namespace'], function () { return p532.v_PKG_NAME; })])) + '["' + p5str((v_self || (v_self = new HashRef({})))._hash_['name']) + '"]'));
					};
					if ( ((v_self || (v_self = new HashRef({})))._hash_['sigil'] == '*') ) {
						throw((p5str(p533.pkg([or((v_self || (v_self = new HashRef({})))._hash_['namespace'], function () { return p532.v_PKG_NAME; })])) + '["' + p5str((v_self || (v_self = new HashRef({})))._hash_['name']) + '"]'));
					};
					if ( (v_decl_type == 'our') ) {
						throw((p5str(p533.pkg([or((v_self || (v_self = new HashRef({})))._hash_['namespace'], function () { return (v_decl || (v_decl = new HashRef({})))._hash_['namespace']; })])) + '["' + p5str((v_table || (v_table = new HashRef({})))._hash_[(v_self || (v_self = new HashRef({})))._hash_['sigil']]) + p5str((v_self || (v_self = new HashRef({})))._hash_['name']) + '"]'));
					};
					var v_ns = null;
					(v_ns = '');
					if ( bool((v_self || (v_self = new HashRef({})))._hash_['namespace']) ) {
						(v_ns = (p5str(p533.pkg([(v_self || (v_self = new HashRef({})))._hash_['namespace']])) + '.'));
					};
					return ((p5str(v_ns) + p5str((v_table || (v_table = new HashRef({})))._hash_[(v_self || (v_self = new HashRef({})))._hash_['sigil']]) + p5str((v_self || (v_self = new HashRef({})))._hash_['name'])));
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
			p518["perl5_name"] = function (List__) {
					var v_self = null;
					(v_self = p518.shift([List__]));
					return ((p5str((v_self || (v_self = new HashRef({})))._hash_['sigil']) + p5str(( bool((v_self || (v_self = new HashRef({})))._hash_['namespace']) ? (p5str((v_self || (v_self = new HashRef({})))._hash_['namespace']) + '::') : '')) + p5str((v_self || (v_self = new HashRef({})))._hash_['name'])));
			};
			p518["perl5_get_decl"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p518.shift([List__]));
					var v_perl5_name = null;
					(v_perl5_name = p518.shift([List__]));
					p5for(p518, function () {
						if ( bool((p518["v__"])._hash_.hasOwnProperty(v_perl5_name)) ) {
							throw((p518["v__"] || (p518["v__"] = new HashRef({})))._hash_[v_perl5_name]);
						};
					}, interpolate_array((p532.v_VAR || (p532.v_VAR = new ArrayRef([])))._array_));
					throw(null)
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::Decl
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p525["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p525["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p525.shift([List__]));
					var v_level = null;
					(v_level = p525.shift([List__]));
					if ( ((v_self || (v_self = new HashRef({})))._hash_['decl'] == 'local') ) {
						(function () {
							var v_perl5_name = null;
							(v_perl5_name = p5cal((v_self || (v_self = new HashRef({})))._hash_['var'], "perl5_name", []));
							var v_decl_namespace = null;
							(v_decl_namespace = '');
							var v_decl = null;
							(v_decl = p5cal((v_self || (v_self = new HashRef({})))._hash_['var'], "perl5_get_decl", [v_perl5_name]));
							if ( (bool(v_decl) && (((v_decl || (v_decl = new HashRef({})))._hash_['decl'] == 'our') || ((v_decl || (v_decl = new HashRef({})))._hash_['decl'] == 'local'))) ) {
								(v_decl_namespace = (v_decl || (v_decl = new HashRef({})))._hash_['namespace']);
							};
							var v_ns = null;
							(v_ns = p533.pkg([or(or(((v_self || (v_self = new HashRef({})))._hash_['var'] || ((v_self || (v_self = new HashRef({})))._hash_['var'] = new HashRef({})))._hash_['namespace'], function () { return v_decl_namespace; }), function () { return p532.v_PKG_NAME; })]));
							throw(('set_local(' + p5str(v_ns) + ',' + p5str(p533.escape_string([((v_self || (v_self = new HashRef({})))._hash_['var'] || ((v_self || (v_self = new HashRef({})))._hash_['var'] = new HashRef({})))._hash_['name']])) + ',' + p5str(p533.escape_string([((v_self || (v_self = new HashRef({})))._hash_['var'] || ((v_self || (v_self = new HashRef({})))._hash_['var'] = new HashRef({})))._hash_['sigil']])) + '); ' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['var'], "emit_javascript_indented", [v_level]))));
							})();
					};
					return (p5cal((v_self || (v_self = new HashRef({})))._hash_['var'], "emit_javascript_indented", [v_level]));
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
			p525["emit_javascript_init"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p525.shift([List__]));
					var v_env = null;
					(v_env = (new HashRef(array_to_hash(interpolate_array('decl', (v_self || (v_self = new HashRef({})))._hash_['decl'])))));
					var v_perl5_name = null;
					(v_perl5_name = p5cal((v_self || (v_self = new HashRef({})))._hash_['var'], "perl5_name", []));
					if ( ((v_self || (v_self = new HashRef({})))._hash_['decl'] != 'my') ) {
						if ( (((v_self || (v_self = new HashRef({})))._hash_['decl'] == 'our') && bool(((v_self || (v_self = new HashRef({})))._hash_['var'] || ((v_self || (v_self = new HashRef({})))._hash_['var'] = new HashRef({})))._hash_['namespace'])) ) {
							p525.die([('No package name allowed for variable ' + p5str(v_perl5_name) + ' in "our"')]);
						};
						if ( (((v_self || (v_self = new HashRef({})))._hash_['var'] || ((v_self || (v_self = new HashRef({})))._hash_['var'] = new HashRef({})))._hash_['namespace'] == '') ) {
							(function () {
								var v_decl_namespace = null;
								(v_decl_namespace = '');
								var v_decl = null;
								(v_decl = p5cal((v_self || (v_self = new HashRef({})))._hash_['var'], "perl5_get_decl", [v_perl5_name]));
								if ( ((((v_self || (v_self = new HashRef({})))._hash_['decl'] == 'local') && bool(v_decl)) && (((v_decl || (v_decl = new HashRef({})))._hash_['decl'] == 'our') || ((v_decl || (v_decl = new HashRef({})))._hash_['decl'] == 'local'))) ) {
									(v_decl_namespace = (v_decl || (v_decl = new HashRef({})))._hash_['namespace']);
								};
								((v_env || (v_env = new HashRef({})))._hash_['namespace'] = or(v_decl_namespace, function () { return p532.v_PKG_NAME; }));
								})();
						};
					};
					(((p532.v_VAR || (p532.v_VAR = new ArrayRef([])))._array_[0] || ((p532.v_VAR || (p532.v_VAR = new ArrayRef([])))._array_[0] = new HashRef({})))._hash_[v_perl5_name] = v_env);
					if ( ((v_self || (v_self = new HashRef({})))._hash_['decl'] == 'my') ) {
						var v_str = null;
						(v_str = '');
						(v_str = (p5str(v_str) + 'var ' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['var'], "emit_javascript", [])) + ' = '));
						if ( (p5cal((v_self || (v_self = new HashRef({})))._hash_['var'], "sigil", []) == '%') ) {
							(v_str = (p5str(v_str) + '{};'));
						}
						else {
							if ( (p5cal((v_self || (v_self = new HashRef({})))._hash_['var'], "sigil", []) == '@') ) {
								(v_str = (p5str(v_str) + '[];'));
							}
							else {
								(v_str = (p5str(v_str) + 'null;'));
							};
						};
						throw(v_str)
					}
					
					else {
						if ( ((v_self || (v_self = new HashRef({})))._hash_['decl'] == 'our') ) {
							throw(('// our ' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['var'], "emit_javascript", []))))
						}
						
						else {
							if ( ((v_self || (v_self = new HashRef({})))._hash_['decl'] == 'local') ) {
								throw(('// local ' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['var'], "emit_javascript", []))))
							}
							
							else {
								if ( ((v_self || (v_self = new HashRef({})))._hash_['decl'] == 'state') ) {
									throw(('// state ' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['var'], "emit_javascript", []))))
								}
								
								else {
									return (p525.die([('not implemented: Perlito5::AST::Decl ' + String.fromCharCode(39) + p5str((v_self || (v_self = new HashRef({})))._hash_['decl']) + String.fromCharCode(39))]));
								}
							}
						}
					}
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::Proto
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p519["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p519["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p519.shift([List__]));
					var v_level = null;
					(v_level = p519.shift([List__]));
					if ( ((v_self || (v_self = new HashRef({})))._hash_['name'] == '__PACKAGE__') ) {
						throw(p533.pkg([]));
					};
					return (p533.pkg([(v_self || (v_self = new HashRef({})))._hash_['name']]));
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::Call
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p520["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p520["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p520.shift([List__]));
					var v_level = null;
					(v_level = p520.shift([List__]));
					var v_invocant = null;
					(v_invocant = p5cal((v_self || (v_self = new HashRef({})))._hash_['invocant'], "emit_javascript", []));
					var v_meth = null;
					(v_meth = (v_self || (v_self = new HashRef({})))._hash_['method']);
					if ( (v_meth == 'postcircumfix:<[ ]>') ) {
						throw(('(' + p5str(v_invocant) + ' || (' + p5str(v_invocant) + ' = new ArrayRef([]))' + ')._array_[' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['arguments'], "emit_javascript", [])) + ']'));
					};
					if ( (v_meth == 'postcircumfix:<{ }>') ) {
						throw(('(' + p5str(v_invocant) + ' || (' + p5str(v_invocant) + ' = new HashRef({}))' + ')._hash_[' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['arguments'], "emit_javascript", [])) + ']'));
					};
					if ( (v_meth == 'postcircumfix:<( )>') ) {
						(function () {
							var List_args = [];
							(List_args = []);
							p5for(p520, function () {
								p520.push([List_args, p5cal(p520["v__"], "emit_javascript", [])]);
							}, interpolate_array(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_));
							throw(('(' + p5str(v_invocant) + ')([' + p520.join([',', List_args]) + '])'));
							})();
					};
					if ( (p520.ref([v_meth]) == 'Perlito5::AST::Var') ) {
						(v_meth = p5cal(v_meth, "emit_javascript", []));
					}
					else {
						(v_meth = ('"' + p5str(v_meth) + '"'));
					};
					var List_args = [];
					p5for(p520, function () {
						p520.push([List_args, p5cal(p520["v__"], "emit_javascript", [])]);
					}, interpolate_array(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_));
					throw(('p5cal(' + p5str(v_invocant) + ', ' + p5str(v_meth) + ', [' + p520.join([',', List_args]) + '])'))
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::Apply
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			var Hash_op_infix_js = {};
			(Hash_op_infix_js = array_to_hash(interpolate_array('infix:<eq>', ' == ', 'infix:<ne>', ' != ', 'infix:<le>', ' <= ', 'infix:<ge>', ' >= ')));
			var Hash_op_infix_js_num = {};
			(Hash_op_infix_js_num = array_to_hash(interpolate_array('infix:<==>', ' == ', 'infix:<!=>', ' != ', 'infix:<->', ' - ', 'infix:<*>', ' * ', 'infix:</>', ' / ', 'infix:<>>', ' > ', 'infix:<<>', ' < ', 'infix:<>=>', ' >= ', 'infix:<<=>', ' <= ', 'infix:<&>', ' & ', 'infix:<|>', ' | ', 'infix:<^>', ' ^ ', 'infix:<>>>', ' >>> ', 'infix:<<<>', ' << ')));
			p521["emit_regex_javascript"] = function (List__) {
				try {
					var v_op = null;
					(v_op = p521.shift([List__]));
					var v_var = null;
					(v_var = p521.shift([List__]));
					var v_regex = null;
					(v_regex = p521.shift([List__]));
					var v_str = null;
					var v_code = null;
					(v_code = (v_regex || (v_regex = new HashRef({})))._hash_['code']);
					var v_regex_args = null;
					(v_regex_args = (v_regex || (v_regex = new HashRef({})))._hash_['arguments']);
					if ( (v_code == 'p5:s') ) {
						(v_str = (p5str(p5cal(v_var, "emit_javascript", [])) + ' = ' + p5str(p5cal(v_var, "emit_javascript", [])) + '.replace(/' + p5str(((v_regex_args || (v_regex_args = new ArrayRef([])))._array_[0] || ((v_regex_args || (v_regex_args = new ArrayRef([])))._array_[0] = new HashRef({})))._hash_['buf']) + '/' + p5str((v_regex_args || (v_regex_args = new ArrayRef([])))._array_[2]) + ', ' + p5str(p5cal((v_regex_args || (v_regex_args = new ArrayRef([])))._array_[1], "emit_javascript", [])) + ')'));
					}
					else {
						if ( (v_code == 'p5:m') ) {
							(v_str = ('(' + p5str(p5cal(v_var, "emit_javascript", [])) + '.match(/' + p5str(((v_regex_args || (v_regex_args = new ArrayRef([])))._array_[0] || ((v_regex_args || (v_regex_args = new ArrayRef([])))._array_[0] = new HashRef({})))._hash_['buf']) + '/' + p5str((v_regex_args || (v_regex_args = new ArrayRef([])))._array_[1]) + ')' + ' ? 1 : 0)'));
						}
						else {
							p521.die([('Error: regex emitter - unknown operator ' + p5str(v_code))]);
						};
					};
					if ( (v_op == '=~') ) {
						throw(v_str);
					};
					if ( (v_op == '!~') ) {
						throw(('!(' + p5str(v_str) + ')'));
					};
					return (p521.die(['Error: regex emitter']));
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
			p521["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p521["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p521.shift([List__]));
					var v_level = null;
					(v_level = p521.shift([List__]));
					var v_apply = null;
					(v_apply = p5cal(v_self, "op_assign", []));
					if ( bool(v_apply) ) {
						throw(p5cal(v_apply, "emit_javascript_indented", [v_level]));
					};
					var v_code = null;
					(v_code = (v_self || (v_self = new HashRef({})))._hash_['code']);
					if ( (p521.ref([v_code]) != '') ) {
						(function () {
							var List_args = [];
							(List_args = []);
							p5for(p521, function () {
								p521.push([List_args, p5cal(p521["v__"], "emit_javascript", [])]);
							}, interpolate_array(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_));
							throw(('(' + p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['code'], "emit_javascript_indented", [v_level])) + ')(' + p521.join([',', List_args]) + ')'));
							})();
					};
					if ( (v_code == 'infix:<=~>') ) {
						throw(p521.emit_regex_javascript(['=~', ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[1]]));
					};
					if ( (v_code == 'infix:<!~>') ) {
						throw(p521.emit_regex_javascript(['!~', ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[1]]));
					};
					if ( (v_code == 'p5:s') ) {
						throw(p521.emit_regex_javascript(['=~', p5cal(p518, "new", ['sigil', '$','namespace', '','name', '_']), v_self]));
					};
					if ( (v_code == 'p5:m') ) {
						throw(p521.emit_regex_javascript(['=~', p5cal(p518, "new", ['sigil', '$','namespace', '','name', '_']), v_self]));
					};
					if ( (v_code == '__PACKAGE__') ) {
						throw(('"' + p5str(p532.v_PKG_NAME) + '"'));
					};
					if ( (v_code == 'package') ) {
						throw(('// package ' + p5str((v_self || (v_self = new HashRef({})))._hash_['namespace']) + String.fromCharCode(10)));
					};
					if ( (v_code == 'infix:<=>>') ) {
						throw(p521.join([', ', p5map(p521, function () {
	return (p5cal(p521["v__"], "emit_javascript_indented", [v_level]));
}, ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)]));
					};
					if ( bool((Hash_op_infix_js).hasOwnProperty(v_code)) ) {
						throw(('(' + p521.join([Hash_op_infix_js[v_code], p5map(p521, function () {
	return (p5cal(p521["v__"], "emit_javascript_indented", [v_level]));
}, ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)]) + ')'));
					};
					if ( bool((Hash_op_infix_js_num).hasOwnProperty(v_code)) ) {
						throw(('(' + p521.join([Hash_op_infix_js_num[v_code], p5map(p521, function () {
	return (p533.to_num([p521["v__"]]));
}, ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)]) + ')'));
					};
					if ( (v_code == 'prefix:<!>') ) {
						throw(('!( ' + p5str(p533.to_bool([((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]])) + ')'));
					};
					if ( (v_code == 'prefix:<~>') ) {
						throw(('~( ' + p5str(p533.to_num([((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]])) + ')'));
					};
					if ( (v_code == 'prefix:<->') ) {
						throw(('-( ' + p5str(p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "emit_javascript", [])) + ')'));
					};
					if ( (v_code == 'prefix:<+>') ) {
						throw(('(' + p5str(p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "emit_javascript", [])) + ')'));
					};
					if ( (v_code == 'do') ) {
						(function () {
							var v_ast = null;
							(v_ast = p5cal(p521, "new", ['code', 'eval','namespace', '','arguments', (new ArrayRef(interpolate_array(p5cal(p521, "new", ['code', 'slurp','namespace', 'Perlito5::IO','arguments', (v_self || (v_self = new HashRef({})))._hash_['arguments']]))))]));
							throw(p5cal(v_ast, "emit_javascript_indented", [v_level]));
							})();
					};
					if ( (v_code == 'eval') ) {
						(function () {
							(p532.v_THROW = 1);
							var v_arg = null;
							(v_arg = ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]);
							var v_eval = null;
							if ( bool(p5cal(v_arg, "isa", ['Perlito5::AST::Do'])) ) {
								(v_eval = p5cal(v_arg, "emit_javascript", [add(v_level, 1)]));
							}
							else {
								(function () {
									var v_var_env_perl5 = null;
									(v_var_env_perl5 = p531.Dumper([p532.v_VAR]));
									var v_m = null;
									(v_m = p5cal(p535, "term_square", [v_var_env_perl5,0]));
									(v_m = p535.expand_list([(p5cal(v_m, "flat", []) || (p5cal(v_m, "flat", []) = new ArrayRef([])))._array_[2]]));
									var v_var_env_js = null;
									(v_var_env_js = ('(new ArrayRef(' + p5str(p533.to_list([v_m])) + '))'));
									(v_eval = ('eval(perl5_to_js(' + p5str(p533.to_str([v_arg])) + ', ' + '"' + p5str(p532.v_PKG_NAME) + '", ' + p5str(v_var_env_js) + '))'));
									})();
							};
							throw(('(function () {' + String.fromCharCode(10) + 'var r = null;' + String.fromCharCode(10) + p5str(p533.pkg(['main'])) + '["v_@"] = "";' + String.fromCharCode(10) + 'try {' + String.fromCharCode(10) + 'r = ' + p5str(v_eval) + String.fromCharCode(10) + '}' + String.fromCharCode(10) + 'catch(err) {' + String.fromCharCode(10) + 'if ( err instanceof p5_error ) {' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + 'else if ( err instanceof Error ) {' + String.fromCharCode(10) + p5str(p533.pkg(['main'])) + '["v_@"] = err;' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + 'else {' + String.fromCharCode(10) + 'throw(err);' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + '}' + String.fromCharCode(10) + 'return r;' + String.fromCharCode(10) + '})()'));
							})();
					};
					if ( (v_code == 'undef') ) {
						if ( (bool((v_self || (v_self = new HashRef({})))._hash_['arguments']) && bool(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)) ) {
							throw(('(' + p5str(p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "emit_javascript", [])) + ' = null)'));
						};
						throw('null');
					};
					if ( (v_code == 'defined') ) {
						throw(('(' + p521.join([' ', p5map(p521, function () {
	return (p5cal(p521["v__"], "emit_javascript_indented", [v_level]));
}, ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)]) + ' != null)'));
					};
					if ( (v_code == 'shift') ) {
						if ( (bool((v_self || (v_self = new HashRef({})))._hash_['arguments']) && bool(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)) ) {
							throw((p5str(p533.pkg([])) + '.shift([' + p521.join([', ', p5map(p521, function () {
	return (p5cal(p521["v__"], "emit_javascript_indented", [v_level]));
}, ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)]) + '])'));
						};
						throw((p5str(p533.pkg([])) + '.shift([List__])'));
					};
					if ( (v_code == 'map') ) {
						(function () {
							var v_fun = null;
							(v_fun = ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]);
							var v_list = null;
							(v_list = ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[1]);
							if ( (p521.ref([v_fun]) == 'Perlito5::AST::Lit::Block') ) {
								(v_fun = (v_fun || (v_fun = new HashRef({})))._hash_['stmts']);
							}
							else {
								(v_fun = (new ArrayRef(interpolate_array(v_fun))));
							};
							throw(('p5map(' + p5str(p533.pkg([])) + ', ' + 'function () {' + String.fromCharCode(10) + p5str(p5cal((p5cal(p534, "new", ['block', v_fun,'needs_return', 1,'top_level', 0])), "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}, ' + p5str(p5cal(v_list, "emit_javascript", [])) + ')'));
							})();
					};
					if ( (v_code == 'grep') ) {
						(function () {
							var v_fun = null;
							(v_fun = ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]);
							var v_list = null;
							(v_list = ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[1]);
							if ( (p521.ref([v_fun]) == 'Perlito5::AST::Lit::Block') ) {
								(v_fun = (v_fun || (v_fun = new HashRef({})))._hash_['stmts']);
							}
							else {
								(v_fun = (new ArrayRef(interpolate_array(v_fun))));
							};
							throw(('p5grep(' + p5str(p533.pkg([])) + ', ' + 'function () {' + String.fromCharCode(10) + p5str(p5cal((p5cal(p534, "new", ['block', v_fun,'needs_return', 1,'top_level', 0])), "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}, ' + p5str(p5cal(v_list, "emit_javascript", [])) + ')'));
							})();
					};
					if ( (v_code == 'sort') ) {
						(function () {
							var v_fun = null;
							var v_list = null;
							if ( (num(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_) > 1) ) {
								(v_fun = ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]);
								(v_list = ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[1]);
							}
							else {
								(v_list = ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]);
							};
							if ( (p521.ref([v_fun]) == 'Perlito5::AST::Lit::Block') ) {
								(v_fun = ('function () {' + String.fromCharCode(10) + p5str(p5cal((p5cal(p534, "new", ['block', (v_fun || (v_fun = new HashRef({})))._hash_['stmts'],'needs_return', 1,'top_level', 0])), "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}'));
							}
							else {
								(v_fun = 'null');
							};
							throw(('p5sort(' + p5str(p533.pkg([])) + ', ' + p5str(v_fun) + ', ' + p5str(p5cal(v_list, "emit_javascript", [])) + ')'));
							})();
					};
					if ( (v_code == 'prefix:<$>') ) {
						(function () {
							var v_arg = null;
							(v_arg = ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]);
							throw(('(' + p5str(p5cal(v_arg, "emit_javascript", [])) + ')._scalar_'));
							})();
					};
					if ( (v_code == 'prefix:<@>') ) {
						(function () {
							var v_arg = null;
							(v_arg = ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]);
							throw(('(' + p5str(p5cal(v_arg, "emit_javascript_indented", [v_level])) + ' || (' + p5str(p5cal(v_arg, "emit_javascript_indented", [v_level])) + ' = new ArrayRef([]))' + ')._array_'));
							})();
					};
					if ( (v_code == 'prefix:<%>') ) {
						(function () {
							var v_arg = null;
							(v_arg = ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]);
							throw(('(' + p5str(p5cal(v_arg, "emit_javascript_indented", [v_level])) + ')._hash_'));
							})();
					};
					if ( (v_code == 'circumfix:<[ ]>') ) {
						throw(('(new ArrayRef(' + p5str(p533.to_list([(v_self || (v_self = new HashRef({})))._hash_['arguments']])) + '))'));
					};
					if ( (v_code == 'circumfix:<{ }>') ) {
						throw(('(new HashRef(array_to_hash(' + p5str(p533.to_list([(v_self || (v_self = new HashRef({})))._hash_['arguments']])) + ')))'));
					};
					if ( (v_code == 'prefix:<' + String.fromCharCode(92) + '>') ) {
						(function () {
							var v_arg = null;
							(v_arg = ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]);
							if ( bool(p5cal(v_arg, "isa", ['Perlito5::AST::Var'])) ) {
								if ( (p5cal(v_arg, "sigil", []) == '@') ) {
									throw(('(new ArrayRef(' + p5str(p5cal(v_arg, "emit_javascript_indented", [v_level])) + '))'));
								};
								if ( (p5cal(v_arg, "sigil", []) == '%') ) {
									throw(('(new HashRef(' + p5str(p5cal(v_arg, "emit_javascript_indented", [v_level])) + '))'));
								};
								if ( (p5cal(v_arg, "sigil", []) == '&') ) {
									if ( bool((v_arg || (v_arg = new HashRef({})))._hash_['namespace']) ) {
										throw((p5str(p533.pkg([(v_arg || (v_arg = new HashRef({})))._hash_['namespace']])) + '.' + p5str((v_arg || (v_arg = new HashRef({})))._hash_['name'])));
									}
									else {
										throw((p5str(p533.pkg([])) + '.' + p5str((v_arg || (v_arg = new HashRef({})))._hash_['name'])));
									};
								};
							};
							throw(('(new ScalarRef(' + p5str(p5cal(v_arg, "emit_javascript_indented", [v_level])) + '))'));
							})();
					};
					if ( (v_code == 'postfix:<++>') ) {
						throw(('(' + p521.join([' ', p5map(p521, function () {
	return (p5cal(p521["v__"], "emit_javascript", []));
}, ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)]) + ')++'));
					};
					if ( (v_code == 'postfix:<-->') ) {
						throw(('(' + p521.join([' ', p5map(p521, function () {
	return (p5cal(p521["v__"], "emit_javascript", []));
}, ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)]) + ')--'));
					};
					if ( (v_code == 'prefix:<++>') ) {
						throw(('++(' + p521.join([' ', p5map(p521, function () {
	return (p5cal(p521["v__"], "emit_javascript", []));
}, ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)]) + ')'));
					};
					if ( (v_code == 'prefix:<-->') ) {
						throw(('--(' + p521.join([' ', p5map(p521, function () {
	return (p5cal(p521["v__"], "emit_javascript", []));
}, ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)]) + ')'));
					};
					if ( (v_code == 'infix:<x>') ) {
						throw(('str_replicate(' + p521.join([', ', p5map(p521, function () {
	return (p5cal(p521["v__"], "emit_javascript", []));
}, ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)]) + ')'));
					};
					if ( (v_code == 'list:<.>') ) {
						throw(('(' + p521.join([' + ', p5map(p521, function () {
	return (p533.to_str([p521["v__"]]));
}, ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)]) + ')'));
					};
					if ( (v_code == 'infix:<+>') ) {
						throw(('add' + '(' + p521.join([', ', p5map(p521, function () {
	return (p5cal(p521["v__"], "emit_javascript", []));
}, ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)]) + ')'));
					};
					if ( (v_code == 'infix:<..>') ) {
						throw(('(function (a) { ' + 'for (var i=' + p5str(p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "emit_javascript", [])) + ', l=' + p5str(p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[1], "emit_javascript", [])) + '; ' + 'i<=l; ++i)' + '{ ' + 'a.push(i) ' + '}; ' + 'return a ' + '})([])'));
					};
					if ( ((v_code == 'infix:<&&>') || (v_code == 'infix:<and>')) ) {
						throw(('and' + '(' + p5str(p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "emit_javascript", [])) + ', ' + 'function () { return ' + p5str(p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[1], "emit_javascript", [])) + '; })'));
					};
					if ( ((v_code == 'infix:<||>') || (v_code == 'infix:<or>')) ) {
						throw(('or' + '(' + p5str(p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "emit_javascript", [])) + ', ' + 'function () { return ' + p5str(p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[1], "emit_javascript", [])) + '; })'));
					};
					if ( (v_code == 'infix:<//>') ) {
						throw(('defined_or' + '(' + p5str(p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "emit_javascript", [])) + ', ' + 'function () { return ' + p5str(p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[1], "emit_javascript", [])) + '; })'));
					};
					if ( (v_code == 'exists') ) {
						(function () {
							var v_arg = null;
							(v_arg = ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]);
							if ( bool(p5cal(v_arg, "isa", ['Perlito5::AST::Lookup'])) ) {
								(function () {
									var v_v = null;
									(v_v = p5cal(v_arg, "obj", []));
									if ( (bool(p5cal(v_v, "isa", ['Perlito5::AST::Var'])) && (p5cal(v_v, "sigil", []) == '$')) ) {
										(v_v = p5cal(p518, "new", ['sigil', '%','namespace', p5cal(v_v, "namespace", []),'name', p5cal(v_v, "name", [])]));
										throw(('(' + p5str(p5cal(v_v, "emit_javascript", [])) + ').hasOwnProperty(' + p5str(p5cal((p5cal(v_arg, "index_exp", [])), "emit_javascript", [])) + ')'));
									};
									throw(('(' + p5str(p5cal(v_v, "emit_javascript", [])) + ')._hash_.hasOwnProperty(' + p5str(p5cal((p5cal(v_arg, "index_exp", [])), "emit_javascript", [])) + ')'));
									})();
							};
							if ( bool(p5cal(v_arg, "isa", ['Perlito5::AST::Call'])) ) {
								if ( (p5cal(v_arg, "method", []) == 'postcircumfix:<{ }>') ) {
									throw(('(' + p5str(p5cal(p5cal(v_arg, "invocant", []), "emit_javascript", [])) + ')._hash_.hasOwnProperty(' + p5str(p5cal((v_arg || (v_arg = new HashRef({})))._hash_['arguments'], "emit_javascript", [])) + ')'));
								};
							};
							})();
					};
					if ( (v_code == 'ternary:<? :>') ) {
						throw(('( ' + p5str(p533.to_bool([((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0]])) + ' ? ' + p5str(p5cal((((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[1]), "emit_javascript", [])) + ' : ' + p5str(p5cal((((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[2]), "emit_javascript", [])) + ')'));
					};
					if ( (v_code == 'circumfix:<( )>') ) {
						throw(('(' + p521.join([', ', p5map(p521, function () {
	return (p5cal(p521["v__"], "emit_javascript_indented", [v_level]));
}, ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)]) + ')'));
					};
					if ( (v_code == 'infix:<=>') ) {
						throw(p521.emit_javascript_bind([((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], ((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[1], v_level]));
					};
					if ( (v_code == 'return') ) {
						(p532.v_THROW = 1);
						throw(('throw(' + p5str(( (bool((v_self || (v_self = new HashRef({})))._hash_['arguments']) && bool(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_)) ? p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "emit_javascript", []) : 'null')) + ')'));
					};
					if ( (v_code == 'goto') ) {
						(p532.v_THROW = 1);
						throw(('throw((' + p5str(p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "emit_javascript", [])) + ')([List__]))'));
					};
					if ( bool((v_self || (v_self = new HashRef({})))._hash_['namespace']) ) {
						if ( (((v_self || (v_self = new HashRef({})))._hash_['namespace'] == 'JS') && (v_code == 'inline')) ) {
							if ( bool(p5cal(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], "isa", ['Perlito5::AST::Val::Buf'])) ) {
								throw((((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0] || (((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0] = new HashRef({})))._hash_['buf']);
							}
							else {
								p521.die(['JS::inline needs a string constant']);
							};
						};
						(v_code = (p5str(p533.pkg([(v_self || (v_self = new HashRef({})))._hash_['namespace']])) + '.' + p5str(v_code)));
					}
					else {
						(v_code = (p5str(p533.pkg([])) + '.' + p5str(v_code)));
					};
					var List_args = [];
					(List_args = []);
					p5for(p521, function () {
						p521.push([List_args, p5cal(p521["v__"], "emit_javascript_indented", [v_level])]);
					}, interpolate_array(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_));
					return ((p5str(v_code) + '([' + p521.join([', ', List_args]) + '])'));
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
			p521["emit_javascript_bind"] = function (List__) {
				try {
					var v_parameters = null;
					(v_parameters = p521.shift([List__]));
					var v_arguments = null;
					(v_arguments = p521.shift([List__]));
					var v_level = null;
					(v_level = p521.shift([List__]));
					if ( (((bool(p5cal(v_parameters, "isa", ['Perlito5::AST::Var'])) && (p5cal(v_parameters, "sigil", []) == '$')) || (bool(p5cal(v_parameters, "isa", ['Perlito5::AST::Decl'])) && (p5cal(p5cal(v_parameters, "var", []), "sigil", []) == '$'))) && ((((bool(p5cal(v_arguments, "isa", ['Perlito5::AST::Var'])) && (p5cal(v_arguments, "sigil", []) == '@')) || (bool(p5cal(v_arguments, "isa", ['Perlito5::AST::Apply'])) && (p5cal(v_arguments, "code", []) == 'prefix:<@>'))) || (bool(p5cal(v_arguments, "isa", ['Perlito5::AST::Var'])) && (p5cal(v_arguments, "sigil", []) == '%'))) || (bool(p5cal(v_arguments, "isa", ['Perlito5::AST::Apply'])) && (p5cal(v_arguments, "code", []) == 'prefix:<%>')))) ) {
						throw(('(' + p5str(p5cal(v_parameters, "emit_javascript", [])) + ' = NAMESPACE.CORE.scalar([' + p5str(p533.to_list([(new ArrayRef(interpolate_array(v_arguments)))])) + ']))'));
					};
					if ( ((bool(p5cal(v_parameters, "isa", ['Perlito5::AST::Var'])) && (p5cal(v_parameters, "sigil", []) == '@')) || (bool(p5cal(v_parameters, "isa", ['Perlito5::AST::Decl'])) && (p5cal(p5cal(v_parameters, "var", []), "sigil", []) == '@'))) ) {
						throw(('(' + p5str(p5cal(v_parameters, "emit_javascript", [])) + ' = ' + p5str(p533.to_list([(new ArrayRef(interpolate_array(v_arguments)))])) + ')'));
					}
					else {
						if ( ((bool(p5cal(v_parameters, "isa", ['Perlito5::AST::Var'])) && (p5cal(v_parameters, "sigil", []) == '%')) || (bool(p5cal(v_parameters, "isa", ['Perlito5::AST::Decl'])) && (p5cal(p5cal(v_parameters, "var", []), "sigil", []) == '%'))) ) {
							throw(('(' + p5str(p5cal(v_parameters, "emit_javascript", [])) + ' = array_to_hash(' + p5str(p533.to_list([(new ArrayRef(interpolate_array(v_arguments)))])) + '))'));
						};
					};
					return (('(' + p5str(p5cal(v_parameters, "emit_javascript_indented", [v_level])) + ' = ' + p5str(p5cal(v_arguments, "emit_javascript_indented", [v_level])) + ')'));
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::If
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p522["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p522["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p522.shift([List__]));
					var v_level = null;
					(v_level = p522.shift([List__]));
					var v_cond = null;
					(v_cond = (v_self || (v_self = new HashRef({})))._hash_['cond']);
					var v_body = null;
					(v_body = p5cal(p534, "new", ['block', p5cal((v_self || (v_self = new HashRef({})))._hash_['body'], "stmts", []),'needs_return', 0,'create_context', 1]));
					var v_s = null;
					(v_s = ('if ( ' + p5str(p533.to_bool([v_cond])) + ' ) {' + String.fromCharCode(10) + p5str(p5cal(v_body, "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}'));
					if ( bool((p5cal((v_self || (v_self = new HashRef({})))._hash_['otherwise'], "stmts", []) || (p5cal((v_self || (v_self = new HashRef({})))._hash_['otherwise'], "stmts", []) = new ArrayRef([])))._array_) ) {
						(function () {
							var v_otherwise = null;
							(v_otherwise = p5cal(p534, "new", ['block', p5cal((v_self || (v_self = new HashRef({})))._hash_['otherwise'], "stmts", []),'needs_return', 0,'create_context', 1]));
							(v_s = (p5str(v_s) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + 'else {' + String.fromCharCode(10) + p5str(p5cal(v_otherwise, "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}'));
							})();
					};
					throw(v_s)
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::While
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p523["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p523["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p523.shift([List__]));
					var v_level = null;
					(v_level = p523.shift([List__]));
					var v_body = null;
					(v_body = p5cal(p534, "new", ['block', p5cal((v_self || (v_self = new HashRef({})))._hash_['body'], "stmts", []),'needs_return', 0,'create_context', 1]));
					throw(('for ( ' + p5str(( bool((v_self || (v_self = new HashRef({})))._hash_['init']) ? (p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['init'], "emit_javascript", [])) + '; ') : '; ')) + p5str(( bool((v_self || (v_self = new HashRef({})))._hash_['cond']) ? (p5str(p533.to_bool([(v_self || (v_self = new HashRef({})))._hash_['cond']])) + '; ') : '; ')) + p5str(( bool((v_self || (v_self = new HashRef({})))._hash_['continue']) ? (p5str(p5cal((v_self || (v_self = new HashRef({})))._hash_['continue'], "emit_javascript", [])) + ' ') : ' ')) + ') {' + String.fromCharCode(10) + p5str(p5cal(v_body, "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}'))
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::For
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p524["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p524["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p524.shift([List__]));
					var v_level = null;
					(v_level = p524.shift([List__]));
					var v_cond = null;
					(v_cond = p533.to_list([(new ArrayRef(interpolate_array((v_self || (v_self = new HashRef({})))._hash_['cond'])))]));
					if ( bool(p5cal((v_self || (v_self = new HashRef({})))._hash_['body'], "sig", [])) ) {
						var v_body = null;
						(v_body = p5cal(p534, "new", ['block', p5cal((v_self || (v_self = new HashRef({})))._hash_['body'], "stmts", []),'needs_return', 0]));
						var v_v = null;
						(v_v = p5cal((v_self || (v_self = new HashRef({})))._hash_['body'], "sig", []));
						(((p532.v_VAR || (p532.v_VAR = new ArrayRef([])))._array_[0] || ((p532.v_VAR || (p532.v_VAR = new ArrayRef([])))._array_[0] = new HashRef({})))._hash_[p5cal(v_v, "perl5_name", [])] = (new HashRef(array_to_hash(interpolate_array('decl', 'my')))));
						var v_sig = null;
						(v_sig = p5cal(v_v, "emit_javascript_indented", [add(v_level, 1)]));
						throw(('for (var i_ = 0, a_ = (' + p5str(v_cond) + '); i_ < a_.length ; i_++) { ' + ('(function (' + p5str(v_sig) + ') {' + String.fromCharCode(10)) + p5str(p5cal(v_body, "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '})(a_[i_]) }'))
					}
					
					else {
						throw(('p5for(' + p5str(p533.pkg([])) + ', ' + 'function () {' + String.fromCharCode(10) + p5str(p5cal((p5cal(p534, "new", ['block', p5cal((v_self || (v_self = new HashRef({})))._hash_['body'], "stmts", []),'needs_return', 0,'top_level', 0])), "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}, ' + p5str(v_cond) + ')'))
					}
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::Sub
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p527["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p527["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p527.shift([List__]));
					var v_level = null;
					(v_level = p527.shift([List__]));
					var v_s = null;
					(v_s = ('function (List__) {' + String.fromCharCode(10) + p5str(p5cal((p5cal(p534, "new", ['block', (v_self || (v_self = new HashRef({})))._hash_['block'],'needs_return', 1,'top_level', 1])), "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '}'));
					if ( bool((v_self || (v_self = new HashRef({})))._hash_['name']) ) {
						if ( (p532.v_PKG_NAME != (v_self || (v_self = new HashRef({})))._hash_['namespace']) ) {
							p527.die([('bad sub namespace ' + p5str(p532.v_PKG_NAME) + ' ne '), (v_self || (v_self = new HashRef({})))._hash_['namespace']]);
						};
						throw((p5str(p533.pkg([(v_self || (v_self = new HashRef({})))._hash_['namespace']])) + '["' + p5str((v_self || (v_self = new HashRef({})))._hash_['name']) + '"] = ' + p5str(v_s)))
					}
					
					else {
						throw(v_s)
					}
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::Do
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p528["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p528["emit_javascript_indented"] = function (List__) {
				try {
					var v_self = null;
					(v_self = p528.shift([List__]));
					var v_level = null;
					(v_level = p528.shift([List__]));
					var v_block = null;
					(v_block = p5cal(p5cal(v_self, "simplify", []), "block", []));
					throw(('(function () {' + String.fromCharCode(10) + p5str(p5cal((p5cal(p534, "new", ['block', v_block,'needs_return', 1])), "emit_javascript_indented", [add(v_level, 1)])) + String.fromCharCode(10) + p5str(p533.tab([v_level])) + '})()'))
				}
				catch(err) {
					if ( err instanceof Error ) {
						throw(err);
					}
					else {
						return(err);
					}
				}
			};
		};
		// package Perlito5::AST::Use
;
		for (var i_ = 0; i_ < 1 ; i_++) {
			p529["emit_javascript"] = function (List__) {
					return (p5cal(List__[0], "emit_javascript_indented", [0]));
			};
			p529["emit_javascript_indented"] = function (List__) {
					var v_self = null;
					(v_self = p529.shift([List__]));
					var v_level = null;
					(v_level = p529.shift([List__]));
					p5cal(v_self, "compiletime_eval", []);
					return (('// ' + p5str((v_self || (v_self = new HashRef({})))._hash_['code']) + ' ' + p5str((v_self || (v_self = new HashRef({})))._hash_['mod']) + String.fromCharCode(10)));
			};
		};
	})()
;
	// use Perlito5::Javascript::Emitter
;
	(function () {
		// package Perlito5::Precedence
;
		p536["new"] = function (List__) {
				var v_class = null;
				(v_class = p536.shift([List__]));
				return (p536.bless([(new HashRef(array_to_hash(interpolate_array(List__)))), v_class]));
		};
		var v_Operator = null;
		(v_Operator = (new HashRef(array_to_hash([]))));
		var v_Precedence = null;
		(v_Precedence = (new HashRef(array_to_hash([]))));
		var v_Assoc = null;
		(v_Assoc = (new HashRef(array_to_hash([]))));
		p536["is_assoc_type"] = function (List__) {
			try {
				var v_assoc_type = null;
				(v_assoc_type = p536.shift([List__]));
				var v_op_name = null;
				(v_op_name = p536.shift([List__]));
				throw(((v_Assoc || (v_Assoc = new HashRef({})))._hash_[v_assoc_type] || ((v_Assoc || (v_Assoc = new HashRef({})))._hash_[v_assoc_type] = new HashRef({})))._hash_[v_op_name])
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p536["is_fixity_type"] = function (List__) {
			try {
				var v_fixity_type = null;
				(v_fixity_type = p536.shift([List__]));
				var v_op_name = null;
				(v_op_name = p536.shift([List__]));
				throw(((v_Operator || (v_Operator = new HashRef({})))._hash_[v_fixity_type] || ((v_Operator || (v_Operator = new HashRef({})))._hash_[v_fixity_type] = new HashRef({})))._hash_[v_op_name])
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p536["is_term"] = function (List__) {
				var v_token = null;
				(v_token = p536.shift([List__]));
				return (or((((v_token || (v_token = new ArrayRef([])))._array_[0] == 'term')), function () { return (((v_token || (v_token = new ArrayRef([])))._array_[0] == 'postfix_or_term')); }));
		};
		p536["is_ident_middle"] = function (List__) {
				var v_c = null;
				(v_c = p536.shift([List__]));
				return (or(or((and((v_c >= 'a'), function () { return (v_c <= 'z'); })), function () { return (and((v_c >= '0'), function () { return (v_c <= '9'); })); }), function () { return ((v_c == '_')); }));
		};
		var List_Parsed_op_chars = [];
		(List_Parsed_op_chars = interpolate_array(2, 1));
		var Hash_Parsed_op = {};
		(Hash_Parsed_op = array_to_hash(interpolate_array('?', function (List__) {
		return (p5cal(p535, "term_ternary", [List__[0],List__[1]]));
}, '(', function (List__) {
		return (p5cal(p535, "term_paren", [List__[0],List__[1]]));
}, '[', function (List__) {
		return (p5cal(p535, "term_square", [List__[0],List__[1]]));
}, '{', function (List__) {
		return (p5cal(p535, "term_curly", [List__[0],List__[1]]));
}, '->', function (List__) {
		return (p5cal(p535, "term_arrow", [List__[0],List__[1]]));
})));
		var List_Term_chars = [];
		(List_Term_chars = interpolate_array(7, 5, 4, 3, 2, 1));
		var Hash_Term = {};
		(Hash_Term = array_to_hash(interpolate_array('$', function (List__) {
		return (p5cal(p535, "term_sigil", [List__[0],List__[1]]));
}, '@', function (List__) {
		return (p5cal(p535, "term_sigil", [List__[0],List__[1]]));
}, '%', function (List__) {
		return (p5cal(p535, "term_sigil", [List__[0],List__[1]]));
}, '&', function (List__) {
		return (p5cal(p535, "term_sigil", [List__[0],List__[1]]));
}, '*', function (List__) {
		return (p5cal(p535, "term_sigil", [List__[0],List__[1]]));
}, '.', function (List__) {
		return (p5cal(p535, "term_digit", [List__[0],List__[1]]));
}, '0', function (List__) {
		return (p5cal(p535, "term_digit", [List__[0],List__[1]]));
}, '1', function (List__) {
		return (p5cal(p535, "term_digit", [List__[0],List__[1]]));
}, '2', function (List__) {
		return (p5cal(p535, "term_digit", [List__[0],List__[1]]));
}, '3', function (List__) {
		return (p5cal(p535, "term_digit", [List__[0],List__[1]]));
}, '4', function (List__) {
		return (p5cal(p535, "term_digit", [List__[0],List__[1]]));
}, '5', function (List__) {
		return (p5cal(p535, "term_digit", [List__[0],List__[1]]));
}, '6', function (List__) {
		return (p5cal(p535, "term_digit", [List__[0],List__[1]]));
}, '7', function (List__) {
		return (p5cal(p535, "term_digit", [List__[0],List__[1]]));
}, '8', function (List__) {
		return (p5cal(p535, "term_digit", [List__[0],List__[1]]));
}, '9', function (List__) {
		return (p5cal(p535, "term_digit", [List__[0],List__[1]]));
}, '#', function (List__) {
		return (p5cal(p535, "term_space", [List__[0],List__[1]]));
}, p536.chr([9]), function (List__) {
		return (p5cal(p535, "term_space", [List__[0],List__[1]]));
}, p536.chr([10]), function (List__) {
		return (p5cal(p535, "term_space", [List__[0],List__[1]]));
}, p536.chr([12]), function (List__) {
		return (p5cal(p535, "term_space", [List__[0],List__[1]]));
}, p536.chr([13]), function (List__) {
		return (p5cal(p535, "term_space", [List__[0],List__[1]]));
}, p536.chr([32]), function (List__) {
		return (p5cal(p535, "term_space", [List__[0],List__[1]]));
}, 'my', function (List__) {
		return (p5cal(p535, "term_declarator", [List__[0],List__[1]]));
}, 'no', function (List__) {
		return (p5cal(p535, "term_use", [List__[0],List__[1]]));
}, 'do', function (List__) {
		return (p5cal(p535, "term_do", [List__[0],List__[1]]));
}, 'our', function (List__) {
		return (p5cal(p535, "term_declarator", [List__[0],List__[1]]));
}, 'sub', function (List__) {
		return (p5cal(p535, "term_sub", [List__[0],List__[1]]));
}, 'use', function (List__) {
		return (p5cal(p535, "term_use", [List__[0],List__[1]]));
}, 'map', function (List__) {
		return (p5cal(p535, "term_map_or_sort", [List__[0],List__[1]]));
}, 'eval', function (List__) {
		return (p5cal(p535, "term_eval", [List__[0],List__[1]]));
}, 'sort', function (List__) {
		return (p5cal(p535, "term_map_or_sort", [List__[0],List__[1]]));
}, 'grep', function (List__) {
		return (p5cal(p535, "term_map_or_sort", [List__[0],List__[1]]));
}, 'state', function (List__) {
		return (p5cal(p535, "term_declarator", [List__[0],List__[1]]));
}, 'local', function (List__) {
		return (p5cal(p535, "term_declarator", [List__[0],List__[1]]));
}, 'package', function (List__) {
		return (p5cal(p535, "term_package", [List__[0],List__[1]]));
})));
		p536["add_term"] = function (List__) {
				var v_name = null;
				(v_name = p536.shift([List__]));
				var v_param = null;
				(v_param = p536.shift([List__]));
				return ((Hash_Term[v_name] = v_param));
		};
		var v_End_token = null;
		var v_End_token_chars = null;
		var Hash_Op = {};
		var List_Op_chars = [];
		(List_Op_chars = interpolate_array(3, 2, 1));
		p536["op_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = p536.shift([List__]));
				var v_str = null;
				(v_str = p536.shift([List__]));
				var v_pos = null;
				(v_pos = p536.shift([List__]));
				var v_last_is_term = null;
				(v_last_is_term = p536.shift([List__]));
				for (var i_ = 0, a_ = (interpolate_array((v_End_token_chars || (v_End_token_chars = new ArrayRef([])))._array_)); i_ < a_.length ; i_++) { (function (v_len) {
					var v_term = null;
					(v_term = p536.substr([v_str, v_pos, v_len]));
					if ( bool((v_End_token)._hash_.hasOwnProperty(v_term)) ) {
						(function () {
							var v_c1 = null;
							(v_c1 = p536.substr([v_str, (num(add(v_pos, p536.length([v_term]))) - 1), 1]));
							var v_c2 = null;
							(v_c2 = p536.substr([v_str, add(v_pos, p536.length([v_term])), 1]));
							if ( !( (bool(p536.is_ident_middle([v_c1])) && (bool(p536.is_ident_middle([v_c2])) || (v_c2 == '(')))) ) {
								throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1,'capture', (new ArrayRef(interpolate_array('end', v_term)))]));
							};
							})();
					};
				})(a_[i_]) };
				if ( !( bool(v_last_is_term)) ) {
					for (var i_ = 0, a_ = (interpolate_array(List_Term_chars)); i_ < a_.length ; i_++) { (function (v_len) {
						var v_term = null;
						(v_term = p536.substr([v_str, v_pos, v_len]));
						if ( bool((Hash_Term).hasOwnProperty(v_term)) ) {
							(function () {
								var v_m = null;
								(v_m = (Hash_Term[v_term])([v_str,v_pos]));
								if ( bool((v_m || (v_m = new HashRef({})))._hash_['bool']) ) {
									throw(v_m);
								};
								})();
						};
					})(a_[i_]) };
				};
				for (var i_ = 0, a_ = (interpolate_array(List_Parsed_op_chars)); i_ < a_.length ; i_++) { (function (v_len) {
					var v_op = null;
					(v_op = p536.substr([v_str, v_pos, v_len]));
					if ( bool((Hash_Parsed_op).hasOwnProperty(v_op)) ) {
						(function () {
							var v_m = null;
							(v_m = (Hash_Parsed_op[v_op])([v_str,v_pos]));
							if ( bool((v_m || (v_m = new HashRef({})))._hash_['bool']) ) {
								throw(v_m);
							};
							})();
					};
				})(a_[i_]) };
				for (var i_ = 0, a_ = (interpolate_array(List_Op_chars)); i_ < a_.length ; i_++) { (function (v_len) {
					var v_op = null;
					(v_op = p536.substr([v_str, v_pos, v_len]));
					if ( bool((Hash_Op).hasOwnProperty(v_op)) ) {
						(function () {
							var v_c1 = null;
							(v_c1 = p536.substr([v_str, (num(add(v_pos, p536.length([v_op]))) - 1), 1]));
							var v_c2 = null;
							(v_c2 = p536.substr([v_str, add(v_pos, p536.length([v_op])), 1]));
							if ( !( (bool(p536.is_ident_middle([v_c1])) && (bool(p536.is_ident_middle([v_c2])) || (v_c2 == '(')))) ) {
								throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', add(v_pos, v_len),'bool', 1,'capture', (new ArrayRef(interpolate_array('op', v_op)))]));
							};
							})();
					};
				})(a_[i_]) };
				throw(p5cal(p537, "term_bareword", [v_str,v_pos]))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p536["add_op"] = function (List__) {
				var v_fixity = null;
				(v_fixity = p536.shift([List__]));
				var v_name = null;
				(v_name = p536.shift([List__]));
				var v_precedence = null;
				(v_precedence = p536.shift([List__]));
				var v_param = null;
				(v_param = p536.shift([List__]));
				if ( !( bool((v_param != null))) ) {
					(v_param = (new HashRef(array_to_hash([]))));
				};
				var v_assoc = null;
				(v_assoc = or((v_param || (v_param = new HashRef({})))._hash_['assoc'], function () { return 'left'; }));
				(((v_Operator || (v_Operator = new HashRef({})))._hash_[v_fixity] || ((v_Operator || (v_Operator = new HashRef({})))._hash_[v_fixity] = new HashRef({})))._hash_[v_name] = 1);
				((v_Precedence || (v_Precedence = new HashRef({})))._hash_[v_name] = v_precedence);
				(((v_Assoc || (v_Assoc = new HashRef({})))._hash_[v_assoc] || ((v_Assoc || (v_Assoc = new HashRef({})))._hash_[v_assoc] = new HashRef({})))._hash_[v_name] = 1);
				return ((Hash_Op[v_name] = 1));
		};
		var v_prec = null;
		(v_prec = 100);
		p536.add_op(['postfix', '.( )', v_prec]);
		p536.add_op(['postfix', '.[ ]', v_prec]);
		p536.add_op(['postfix', '.{ }', v_prec]);
		p536.add_op(['postfix', '( )', v_prec]);
		p536.add_op(['postfix', '[ ]', v_prec]);
		p536.add_op(['postfix', 'funcall', v_prec]);
		p536.add_op(['postfix', 'funcall_no_params', v_prec]);
		p536.add_op(['postfix', 'methcall', v_prec]);
		p536.add_op(['postfix', 'methcall_no_params', v_prec]);
		p536.add_op(['postfix', 'block', v_prec]);
		p536.add_op(['postfix', 'hash', v_prec]);
		p536.add_op(['prefix', '$', v_prec]);
		p536.add_op(['prefix', '&', v_prec]);
		p536.add_op(['prefix', '*', v_prec]);
		p536.add_op(['prefix', '@', v_prec]);
		p536.add_op(['prefix', '%', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['prefix', '++', v_prec]);
		p536.add_op(['prefix', '--', v_prec]);
		p536.add_op(['postfix', '++', v_prec]);
		p536.add_op(['postfix', '--', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '**', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['prefix', String.fromCharCode(92), v_prec]);
		p536.add_op(['prefix', '+', v_prec]);
		p536.add_op(['prefix', '-', v_prec]);
		p536.add_op(['prefix', '~', v_prec]);
		p536.add_op(['prefix', '!', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '=~', v_prec]);
		p536.add_op(['infix', '!~', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '*', v_prec]);
		p536.add_op(['infix', '/', v_prec]);
		p536.add_op(['infix', '%', v_prec]);
		p536.add_op(['infix', 'x', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '+', v_prec]);
		p536.add_op(['infix', '-', v_prec]);
		p536.add_op(['infix', '.', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'list'))))]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '<<', v_prec]);
		p536.add_op(['infix', '>>', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', 'lt', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'chain'))))]);
		p536.add_op(['infix', 'le', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'chain'))))]);
		p536.add_op(['infix', 'gt', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'chain'))))]);
		p536.add_op(['infix', 'ge', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'chain'))))]);
		p536.add_op(['infix', '<=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'chain'))))]);
		p536.add_op(['infix', '>=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'chain'))))]);
		p536.add_op(['infix', '<', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'chain'))))]);
		p536.add_op(['infix', '>', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'chain'))))]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '<=>', v_prec]);
		p536.add_op(['infix', 'cmp', v_prec]);
		p536.add_op(['infix', '==', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'chain'))))]);
		p536.add_op(['infix', '!=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'chain'))))]);
		p536.add_op(['infix', 'ne', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'chain'))))]);
		p536.add_op(['infix', 'eq', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'chain'))))]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '&', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'list'))))]);
		p536.add_op(['prefix', '&', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '|', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'list'))))]);
		p536.add_op(['prefix', '|', v_prec]);
		p536.add_op(['infix', '^', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '..', v_prec]);
		p536.add_op(['infix', '...', v_prec]);
		p536.add_op(['infix', '~~', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'chain'))))]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '&&', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '||', v_prec]);
		p536.add_op(['infix', '//', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['ternary', '? :', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '**=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '+=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '-=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '*=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '/=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', 'x=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '|=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '&=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '.=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '<<=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '>>=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '%=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '||=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '&&=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '^=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		p536.add_op(['infix', '//=', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'right'))))]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '=>', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['list', ',', v_prec, (new HashRef(array_to_hash(interpolate_array('assoc', 'list'))))]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['prefix', 'not', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', 'and', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', 'or', v_prec]);
		p536.add_op(['infix', 'xor', v_prec]);
		(v_prec = (num(v_prec) - 1));
		p536.add_op(['infix', '*start*', v_prec]);
		p536["precedence_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = p536.shift([List__]));
				var v_get_token = null;
				(v_get_token = (v_self || (v_self = new HashRef({})))._hash_['get_token']);
				var v_reduce = null;
				(v_reduce = (v_self || (v_self = new HashRef({})))._hash_['reduce']);
				var v_last_end_token = null;
				(v_last_end_token = v_End_token);
				var v_last_end_token_chars = null;
				(v_last_end_token_chars = v_End_token_chars);
				(v_End_token = (v_self || (v_self = new HashRef({})))._hash_['end_token']);
				(v_End_token_chars = (v_self || (v_self = new HashRef({})))._hash_['end_token_chars']);
				var v_op_stack = null;
				(v_op_stack = (new ArrayRef([])));
				var v_num_stack = null;
				(v_num_stack = (new ArrayRef([])));
				var v_last = null;
				(v_last = (new ArrayRef(interpolate_array('op', '*start*'))));
				var v_token = null;
				(v_token = (v_get_token)([]));
				if ( ((v_token || (v_token = new ArrayRef([])))._array_[0] == 'space') ) {
					(v_token = (v_get_token)([]));
				};
				for ( ; (bool((v_token != null)) && ((v_token || (v_token = new ArrayRef([])))._array_[0] != 'end'));  ) {
					if ( (((v_token || (v_token = new ArrayRef([])))._array_[1] == ',') && (((v_last || (v_last = new ArrayRef([])))._array_[1] == '*start*') || ((v_last || (v_last = new ArrayRef([])))._array_[1] == ','))) ) {
						p536.push([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_, (new ArrayRef(interpolate_array('term', null)))]);
					};
					if ( (bool(((v_Operator || (v_Operator = new HashRef({})))._hash_['prefix'] || ((v_Operator || (v_Operator = new HashRef({})))._hash_['prefix'] = new HashRef({})))._hash_[(v_token || (v_token = new ArrayRef([])))._array_[1]]) && (((v_last || (v_last = new ArrayRef([])))._array_[1] == '*start*') || !( bool(p536.is_term([v_last]))))) ) {
						((v_token || (v_token = new ArrayRef([])))._array_[0] = 'prefix');
						p536.unshift([(v_op_stack || (v_op_stack = new ArrayRef([])))._array_, v_token]);
					}
					else {
						if ( (bool((((v_Operator || (v_Operator = new HashRef({})))._hash_['postfix']) || (((v_Operator || (v_Operator = new HashRef({})))._hash_['postfix']) = new HashRef({})))._hash_[(v_token || (v_token = new ArrayRef([])))._array_[1]]) && bool(p536.is_term([v_last]))) ) {
							(function () {
								var v_pr = null;
								(v_pr = (v_Precedence || (v_Precedence = new HashRef({})))._hash_[(v_token || (v_token = new ArrayRef([])))._array_[1]]);
								for ( ; (bool(p536.scalar([(v_op_stack || (v_op_stack = new ArrayRef([])))._array_])) && (num(v_pr) <= num((v_Precedence || (v_Precedence = new HashRef({})))._hash_[(((v_op_stack || (v_op_stack = new ArrayRef([])))._array_[0]) || (((v_op_stack || (v_op_stack = new ArrayRef([])))._array_[0]) = new ArrayRef([])))._array_[1]])));  ) {
									(v_reduce)([v_op_stack,v_num_stack]);
								};
								if ( ((v_token || (v_token = new ArrayRef([])))._array_[0] != 'postfix_or_term') ) {
									((v_token || (v_token = new ArrayRef([])))._array_[0] = 'postfix');
								};
								p536.unshift([(v_op_stack || (v_op_stack = new ArrayRef([])))._array_, v_token]);
								})();
						}
						else {
							if ( (((v_token || (v_token = new ArrayRef([])))._array_[1] == 'block') && bool(p536.is_term([v_last]))) ) {
								for ( ; bool(p536.scalar([(v_op_stack || (v_op_stack = new ArrayRef([])))._array_]));  ) {
									(v_reduce)([v_op_stack,v_num_stack]);
								};
								p536.push([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_, v_token]);
								(v_End_token = v_last_end_token);
								(v_End_token_chars = v_last_end_token_chars);
								throw(v_num_stack);
							}
							else {
								if ( bool(p536.is_term([v_token])) ) {
									if ( bool(p536.is_term([v_last])) ) {
										p536.say(['#      last:  ', v_last]);
										p536.say(['#      token: ', v_token]);
										p536.die(['Value tokens must be separated by an operator']);
									};
									((v_token || (v_token = new ArrayRef([])))._array_[0] = 'term');
									p536.push([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_, v_token]);
								}
								else {
									if ( bool((v_Precedence || (v_Precedence = new HashRef({})))._hash_[(v_token || (v_token = new ArrayRef([])))._array_[1]]) ) {
										(function () {
											var v_pr = null;
											(v_pr = (v_Precedence || (v_Precedence = new HashRef({})))._hash_[(v_token || (v_token = new ArrayRef([])))._array_[1]]);
											if ( bool(((v_Assoc || (v_Assoc = new HashRef({})))._hash_['right'] || ((v_Assoc || (v_Assoc = new HashRef({})))._hash_['right'] = new HashRef({})))._hash_[(v_token || (v_token = new ArrayRef([])))._array_[1]]) ) {
												for ( ; (bool(p536.scalar([(v_op_stack || (v_op_stack = new ArrayRef([])))._array_])) && (num(v_pr) < num((v_Precedence || (v_Precedence = new HashRef({})))._hash_[(((v_op_stack || (v_op_stack = new ArrayRef([])))._array_[0]) || (((v_op_stack || (v_op_stack = new ArrayRef([])))._array_[0]) = new ArrayRef([])))._array_[1]])));  ) {
													(v_reduce)([v_op_stack,v_num_stack]);
												};
											}
											else {
												for ( ; (bool(p536.scalar([(v_op_stack || (v_op_stack = new ArrayRef([])))._array_])) && (num(v_pr) <= num((v_Precedence || (v_Precedence = new HashRef({})))._hash_[(((v_op_stack || (v_op_stack = new ArrayRef([])))._array_[0]) || (((v_op_stack || (v_op_stack = new ArrayRef([])))._array_[0]) = new ArrayRef([])))._array_[1]])));  ) {
													(v_reduce)([v_op_stack,v_num_stack]);
												};
											};
											if ( bool(((v_Operator || (v_Operator = new HashRef({})))._hash_['ternary'] || ((v_Operator || (v_Operator = new HashRef({})))._hash_['ternary'] = new HashRef({})))._hash_[(v_token || (v_token = new ArrayRef([])))._array_[1]]) ) {
												((v_token || (v_token = new ArrayRef([])))._array_[0] = 'ternary');
											}
											else {
												((v_token || (v_token = new ArrayRef([])))._array_[0] = 'infix');
											};
											p536.unshift([(v_op_stack || (v_op_stack = new ArrayRef([])))._array_, v_token]);
											})();
									}
									else {
										p536.die(['Unknown token: ' + String.fromCharCode(39), (v_token || (v_token = new ArrayRef([])))._array_[1], String.fromCharCode(39)]);
									};
								};
							};
						};
					};
					(v_last = v_token);
					(v_token = (v_get_token)([]));
					if ( ((v_token || (v_token = new ArrayRef([])))._array_[0] == 'space') ) {
						(v_token = (v_get_token)([]));
					};
				};
				if ( (bool((v_token != null)) && ((v_token || (v_token = new ArrayRef([])))._array_[0] != 'end')) ) {
					p536.die(['Unexpected end token: ', v_token]);
				};
				for ( ; bool(p536.scalar([(v_op_stack || (v_op_stack = new ArrayRef([])))._array_]));  ) {
					(v_reduce)([v_op_stack,v_num_stack]);
				};
				(v_End_token = v_last_end_token);
				(v_End_token_chars = v_last_end_token_chars);
				throw(v_num_stack)
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		1;
	})()
;
	(function () {
		// package Perlito5::Grammar::Bareword
;
		// use Perlito5::Precedence
;
		// use Perlito5::Grammar
;
		p537["term_bareword"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_p = null;
				(v_p = v_pos);
				var v_m_namespace = null;
				(v_m_namespace = p5cal(p538, "optional_namespace_before_ident", [v_str,v_p]));
				(v_p = (v_m_namespace || (v_m_namespace = new HashRef({})))._hash_['to']);
				var v_m_name = null;
				(v_m_name = p5cal(p538, "ident", [v_str,v_p]));
				if ( bool((v_m_name || (v_m_name = new HashRef({})))._hash_['bool']) ) {
					null;
				}
				else {
					throw(v_m_name);
				};
				(v_p = (v_m_name || (v_m_name = new HashRef({})))._hash_['to']);
				var v_name = null;
				(v_name = p5cal(v_m_name, "flat", []));
				var v_namespace = null;
				(v_namespace = p5cal(v_m_namespace, "flat", []));
				var v_full_name = null;
				(v_full_name = v_name);
				if ( bool(v_namespace) ) {
					(v_full_name = (p5str(v_namespace) + '::' + p5str(v_name)));
				};
				var v_m = null;
				(v_m = p5cal(p538, "ws", [v_str,v_p]));
				if ( bool((v_m || (v_m = new HashRef({})))._hash_['bool']) ) {
					(v_p = (v_m || (v_m = new HashRef({})))._hash_['to']);
				};
				if ( (p537.substr([v_str, v_p, 2]) == '=>') ) {
					((v_m_name || (v_m_name = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p514, "new", ['buf', v_full_name])))));
					((v_m_name || (v_m_name = new HashRef({})))._hash_['to'] = v_p);
					throw(v_m_name);
				};
				if ( (p537.substr([v_str, v_p, 2]) == '->') ) {
					((v_m_name || (v_m_name = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p519, "new", ['name', v_full_name])))));
					((v_m_name || (v_m_name = new HashRef({})))._hash_['to'] = v_p);
					throw(v_m_name);
				};
				var v_effective_name = null;
				(v_effective_name = (p5str(or(v_namespace, function () { return p532.v_PKG_NAME; })) + '::' + p5str(v_name)));
				var v_sig = null;
				if ( bool((p532.v_PROTO)._hash_.hasOwnProperty(v_effective_name)) ) {
					(v_sig = (p532.v_PROTO || (p532.v_PROTO = new HashRef({})))._hash_[v_effective_name]);
				}
				else {
					if ( ((!( bool(v_namespace)) || (v_namespace == 'CORE')) && bool((p532.v_CORE_PROTO)._hash_.hasOwnProperty(('CORE::' + p5str(v_name))))) ) {
						(v_effective_name = ('CORE::' + p5str(v_name)));
						(v_sig = (p532.v_CORE_PROTO || (p532.v_CORE_PROTO = new HashRef({})))._hash_[v_effective_name]);
					}
					else {
						(v_sig = null);
					};
				};
				if ( bool((v_sig != null)) ) {
					if ( (v_sig == '') ) {
						if ( (p537.substr([v_str, v_p, 1]) == '(') ) {
							(function () {
								(v_p)++;
								var v_m = null;
								(v_m = p5cal(p538, "ws", [v_str,v_p]));
								if ( bool((v_m || (v_m = new HashRef({})))._hash_['bool']) ) {
									(v_p = (v_m || (v_m = new HashRef({})))._hash_['to']);
								};
								if ( (p537.substr([v_str, v_p, 1]) != ')') ) {
									p537.die(['syntax error near ', p537.substr([v_str, v_pos, 10])]);
								};
								(v_p)++;
								})();
						};
						((v_m_name || (v_m_name = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p521, "new", ['code', v_name,'namespace', v_namespace,'arguments', (new ArrayRef([]))])))));
						((v_m_name || (v_m_name = new HashRef({})))._hash_['to'] = v_p);
						throw(v_m_name);
					};
					if ( (((v_sig == '_') || (v_sig == '$')) || (v_sig == ';$')) ) {
						(function () {
							var v_m = null;
							var v_arg = null;
							if ( (p537.substr([v_str, v_p, 1]) == '(') ) {
								(function () {
									(v_m = p5cal(p535, "term_paren", [v_str,v_p]));
									if ( !( bool((v_m || (v_m = new HashRef({})))._hash_['bool'])) ) {
										throw(v_m);
									};
									(v_p = (v_m || (v_m = new HashRef({})))._hash_['to']);
									(v_arg = ((v_m || (v_m = new HashRef({})))._hash_['capture'] || ((v_m || (v_m = new HashRef({})))._hash_['capture'] = new ArrayRef([])))._array_[2]);
									(v_arg = p535.expand_list([v_arg]));
									var v_v = null;
									(v_v = p537.shift([(v_arg || (v_arg = new ArrayRef([])))._array_]));
									if ( bool((v_arg || (v_arg = new ArrayRef([])))._array_) ) {
										p537.die([('Too many arguments for ' + p5str(v_name))]);
									};
									(v_arg = v_v);
									})();
							}
							else {
								(v_m = p5cal(p535, "argument_parse", [v_str,v_p]));
								(v_arg = ((v_m || (v_m = new HashRef({})))._hash_['capture'] || ((v_m || (v_m = new HashRef({})))._hash_['capture'] = new HashRef({})))._hash_['exp']);
								if ( (v_arg == '*undef*') ) {
									(v_arg = null);
								}
								else {
									if ( ((p537.ref([v_arg]) == 'Perlito5::AST::Apply') && ((v_arg || (v_arg = new HashRef({})))._hash_['code'] == 'circumfix:<( )>')) ) {
										(function () {
											var v_v = null;
											(v_v = p537.shift([((v_arg || (v_arg = new HashRef({})))._hash_['arguments'] || ((v_arg || (v_arg = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_]));
											if ( bool(((v_arg || (v_arg = new HashRef({})))._hash_['arguments'] || ((v_arg || (v_arg = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_) ) {
												p537.die([('Too many arguments for ' + p5str(v_name))]);
											};
											(v_arg = v_v);
											})();
									};
								};
							};
							var List_args = [];
							if ( bool((v_arg != null)) ) {
								p537.push([List_args, v_arg]);
							}
							else {
								if ( (v_sig == '$') ) {
									p537.die([('Not enough arguments for ' + p5str(v_name))]);
								};
								if ( (v_sig == '_') ) {
									p537.push([List_args, p5cal(p518, "new", ['namespace', '','name', '_','sigil', '$'])]);
								};
							};
							((v_m || (v_m = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p521, "new", ['code', v_name,'namespace', v_namespace,'arguments', (new ArrayRef(List_args))])))));
							throw(v_m);
							})();
					};
				};
				if ( (p537.substr([v_str, v_p, 1]) == '(') ) {
					(function () {
						(v_m = p5cal(p535, "term_paren", [v_str,v_p]));
						if ( !( bool((v_m || (v_m = new HashRef({})))._hash_['bool'])) ) {
							throw(v_m);
						};
						var v_arg = null;
						(v_arg = ((v_m || (v_m = new HashRef({})))._hash_['capture'] || ((v_m || (v_m = new HashRef({})))._hash_['capture'] = new ArrayRef([])))._array_[2]);
						(v_arg = p535.expand_list([v_arg]));
						((v_m || (v_m = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p521, "new", ['code', v_name,'namespace', v_namespace,'arguments', v_arg])))));
						throw(v_m);
						})();
				};
				var v_m_list = null;
				(v_m_list = p5cal(p535, "list_parse", [v_str,v_p]));
				if ( bool((v_m_list || (v_m_list = new HashRef({})))._hash_['bool']) ) {
					((v_m_name || (v_m_name = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('postfix_or_term', 'funcall', v_namespace, v_name, p5cal(v_m_list, "flat", [])))));
					((v_m_name || (v_m_name = new HashRef({})))._hash_['to'] = (v_m_list || (v_m_list = new HashRef({})))._hash_['to']);
					throw(v_m_name);
				};
				((v_m_name || (v_m_name = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('postfix_or_term', 'funcall_no_params', v_namespace, v_name))));
				throw(v_m_name)
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		1;
	})()
;
	(function () {
		// package Perlito5::Expression
;
		// use Perlito5::Precedence
;
		// use Perlito5::Grammar
;
		// use Perlito5::Grammar::Bareword
;
		p535["expand_list"] = function (List__) {
			try {
				var v_param_list = null;
				(v_param_list = p535.shift([List__]));
				if ( ((p535.ref([v_param_list]) == 'Perlito5::AST::Apply') && (p5cal(v_param_list, "code", []) == 'list:<,>')) ) {
					var v_args = null;
					(v_args = (new ArrayRef([])));
					for (var i_ = 0, a_ = (interpolate_array((p5cal(v_param_list, "arguments", []) || (p5cal(v_param_list, "arguments", []) = new ArrayRef([])))._array_)); i_ < a_.length ; i_++) { (function (v_v) {
						if ( bool((v_v != null)) ) {
							p535.push([(v_args || (v_args = new ArrayRef([])))._array_, v_v]);
						};
					})(a_[i_]) };
					throw(v_args)
				}
				
				else {
					if ( (v_param_list == '*undef*') ) {
						throw((new ArrayRef([])))
					}
					
					else {
						throw((new ArrayRef(interpolate_array(v_param_list))))
					}
				}
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p535["block_or_hash"] = function (List__) {
			try {
				var v_o = null;
				(v_o = p535.shift([List__]));
				if ( bool((p5cal(v_o, "sig", []) != null)) ) {
					throw(v_o);
				};
				var v_stmts = null;
				(v_stmts = p5cal(v_o, "stmts", []));
				if ( (!( bool((v_stmts != null))) || (num(p535.scalar([(v_stmts || (v_stmts = new ArrayRef([])))._array_])) == 0)) ) {
					throw(p5cal(p521, "new", ['code', 'circumfix:<{ }>','namespace', '','arguments', (new ArrayRef([]))]));
				};
				if ( (num(p535.scalar([(v_stmts || (v_stmts = new ArrayRef([])))._array_])) != 1) ) {
					throw(v_o);
				};
				var v_stmt = null;
				(v_stmt = (v_stmts || (v_stmts = new ArrayRef([])))._array_[0]);
				if ( (p535.ref([v_stmt]) == 'Perlito5::AST::Var') ) {
					throw(p5cal(p521, "new", ['code', 'circumfix:<{ }>','namespace', '','arguments', (new ArrayRef(interpolate_array(v_stmt)))]));
				};
				if ( (p535.ref([v_stmt]) != 'Perlito5::AST::Apply') ) {
					throw(v_o);
				};
				if ( (p5cal(v_stmt, "code", []) == 'infix:<=>>') ) {
					throw(p5cal(p521, "new", ['code', 'circumfix:<{ }>','namespace', '','arguments', (new ArrayRef(interpolate_array(v_stmt)))]));
				};
				if ( (p5cal(v_stmt, "code", []) != 'list:<,>') ) {
					throw(v_o);
				};
				for (var i_ = 0, a_ = (interpolate_array((p5cal(v_stmt, "arguments", []) || (p5cal(v_stmt, "arguments", []) = new ArrayRef([])))._array_)); i_ < a_.length ; i_++) { (function (v_item) {
					if ( ((p535.ref([v_item]) == 'Perlito5::AST::Apply') && (p5cal(v_item, "code", []) == 'infix:<=>>')) ) {
						throw(p5cal(p521, "new", ['code', 'circumfix:<{ }>','namespace', '','arguments', p535.expand_list([v_stmt])]));
					};
				})(a_[i_]) };
				throw(v_o)
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p535["pop_term"] = function (List__) {
			try {
				var v_num_stack = null;
				(v_num_stack = p535.shift([List__]));
				var v_v = null;
				(v_v = p535.pop([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_]));
				if ( (p535.ref([v_v]) == 'ARRAY') ) {
					if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == 'methcall_no_params') ) {
						(v_v = p5cal(p520, "new", ['invocant', null,'method', (v_v || (v_v = new ArrayRef([])))._array_[2],'arguments', (new ArrayRef([]))]));
						throw(v_v);
					};
					if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == 'funcall_no_params') ) {
						(v_v = p5cal(p521, "new", ['code', (v_v || (v_v = new ArrayRef([])))._array_[3],'namespace', (v_v || (v_v = new ArrayRef([])))._array_[2]]));
						throw(v_v);
					};
					if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == 'methcall') ) {
						(function () {
							var v_param_list = null;
							(v_param_list = p535.expand_list([(((v_v || (v_v = new ArrayRef([])))._array_[3]) || (((v_v || (v_v = new ArrayRef([])))._array_[3]) = new HashRef({})))._hash_['exp']]));
							(v_v = p5cal(p520, "new", ['invocant', null,'method', (v_v || (v_v = new ArrayRef([])))._array_[2],'arguments', v_param_list]));
							throw(v_v);
							})();
					};
					if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == 'funcall') ) {
						(function () {
							var v_param_list = null;
							(v_param_list = p535.expand_list([(((v_v || (v_v = new ArrayRef([])))._array_[4]) || (((v_v || (v_v = new ArrayRef([])))._array_[4]) = new HashRef({})))._hash_['exp']]));
							(v_v = p5cal(p521, "new", ['code', (v_v || (v_v = new ArrayRef([])))._array_[3],'arguments', v_param_list,'namespace', (v_v || (v_v = new ArrayRef([])))._array_[2]]));
							throw(v_v);
							})();
					};
					if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == '( )') ) {
						(function () {
							var v_param_list = null;
							(v_param_list = p535.expand_list([(v_v || (v_v = new ArrayRef([])))._array_[2]]));
							(v_v = p5cal(p521, "new", ['code', 'circumfix:<( )>','arguments', v_param_list,'namespace', '']));
							throw(v_v);
							})();
					};
					if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == '[ ]') ) {
						(function () {
							var v_param_list = null;
							(v_param_list = p535.expand_list([(v_v || (v_v = new ArrayRef([])))._array_[2]]));
							(v_v = p5cal(p521, "new", ['code', 'circumfix:<[ ]>','arguments', v_param_list,'namespace', '']));
							throw(v_v);
							})();
					};
					if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == 'block') ) {
						(v_v = p5cal(p515, "new", ['stmts', (v_v || (v_v = new ArrayRef([])))._array_[2],'sig', (v_v || (v_v = new ArrayRef([])))._array_[3]]));
						(v_v = p535.block_or_hash([v_v]));
						throw(v_v);
					};
					if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == '.( )') ) {
						(v_v = p5cal(p520, "new", ['invocant', null,'method', 'postcircumfix:<( )>','arguments', (v_v || (v_v = new ArrayRef([])))._array_[2]]));
						throw(v_v);
					};
					if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == '.[ ]') ) {
						(v_v = p5cal(p516, "new", ['obj', null,'index_exp', (v_v || (v_v = new ArrayRef([])))._array_[2]]));
						throw(v_v);
					};
					if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == '.{ }') ) {
						(v_v = p5cal(p517, "new", ['obj', null,'index_exp', (v_v || (v_v = new ArrayRef([])))._array_[2]]));
						throw(v_v);
					};
					if ( ((p535.ref([(v_v || (v_v = new ArrayRef([])))._array_[1]]) == 'ARRAY') && (num(p535.scalar([(v_v || (v_v = new ArrayRef([])))._array_[1]])) == 2)) ) {
						(v_v = p5cal(p521, "new", ['code', 'pair','arguments', (v_v || (v_v = new ArrayRef([])))._array_[1],'namespace', '']));
						throw(v_v);
					};
					throw((v_v || (v_v = new ArrayRef([])))._array_[1]);
				};
				throw(v_v)
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p535["reduce_postfix"] = function (List__) {
			try {
				var v_op = null;
				(v_op = p535.shift([List__]));
				var v_value = null;
				(v_value = p535.shift([List__]));
				var v_v = null;
				(v_v = v_op);
				if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == 'methcall_no_params') ) {
					(v_v = p5cal(p520, "new", ['invocant', v_value,'method', (v_v || (v_v = new ArrayRef([])))._array_[2],'arguments', (new ArrayRef([]))]));
					throw(v_v);
				};
				if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == 'funcall_no_params') ) {
					p535.die(['unexpected function call']);
					p535.push([(v_v || (v_v = new ArrayRef([])))._array_, v_value]);
					throw(v_v);
				};
				if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == 'methcall') ) {
					(function () {
						var v_param_list = null;
						(v_param_list = p535.expand_list([((v_v || (v_v = new ArrayRef([])))._array_[3] || ((v_v || (v_v = new ArrayRef([])))._array_[3] = new HashRef({})))._hash_['exp']]));
						(v_v = p5cal(p520, "new", ['invocant', v_value,'method', (v_v || (v_v = new ArrayRef([])))._array_[2],'arguments', v_param_list]));
						throw(v_v);
						})();
				};
				if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == 'funcall') ) {
					p535.die(['unexpected function call']);
					p535.push([(v_v || (v_v = new ArrayRef([])))._array_, v_value]);
					throw(v_v);
				};
				if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == '( )') ) {
					(function () {
						var v_param_list = null;
						(v_param_list = p535.expand_list([(v_v || (v_v = new ArrayRef([])))._array_[2]]));
						if ( ((p535.ref([v_value]) == 'Perlito5::AST::Apply') && !( bool((p5cal(v_value, "arguments", []) != null)))) ) {
							((v_value || (v_value = new HashRef({})))._hash_['arguments'] = v_param_list);
							throw(v_value);
						};
						if ( ((p535.ref([v_value]) == 'Perlito5::AST::Call') && !( bool((p5cal(v_value, "arguments", []) != null)))) ) {
							((v_value || (v_value = new HashRef({})))._hash_['arguments'] = v_param_list);
							throw(v_value);
						};
						(v_v = p5cal(p520, "new", ['invocant', v_value,'method', 'postcircumfix:<( )>','arguments', v_param_list]));
						throw(v_v);
						})();
				};
				if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == '[ ]') ) {
					(v_v = p5cal(p516, "new", ['obj', v_value,'index_exp', (v_v || (v_v = new ArrayRef([])))._array_[2]]));
					throw(v_v);
				};
				if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == 'block') ) {
					(v_v = p5cal(p517, "new", ['obj', v_value,'index_exp', (((v_v || (v_v = new ArrayRef([])))._array_[2]) || (((v_v || (v_v = new ArrayRef([])))._array_[2]) = new ArrayRef([])))._array_[0]]));
					throw(v_v);
				};
				if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == '.( )') ) {
					(function () {
						var v_param_list = null;
						(v_param_list = p535.expand_list([(v_v || (v_v = new ArrayRef([])))._array_[2]]));
						(v_v = p5cal(p520, "new", ['invocant', v_value,'method', 'postcircumfix:<( )>','arguments', v_param_list]));
						throw(v_v);
						})();
				};
				if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == '.[ ]') ) {
					(v_v = p5cal(p520, "new", ['invocant', v_value,'method', 'postcircumfix:<[ ]>','arguments', (v_v || (v_v = new ArrayRef([])))._array_[2]]));
					throw(v_v);
				};
				if ( ((v_v || (v_v = new ArrayRef([])))._array_[1] == '.{ }') ) {
					(v_v = p5cal(p520, "new", ['invocant', v_value,'method', 'postcircumfix:<{ }>','arguments', (v_v || (v_v = new ArrayRef([])))._array_[2]]));
					throw(v_v);
				};
				p535.push([(v_op || (v_op = new ArrayRef([])))._array_, v_value]);
				throw(v_op)
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		var v_reduce_to_ast = null;
		(v_reduce_to_ast = function (List__) {
			try {
				var v_op_stack = null;
				(v_op_stack = p535.shift([List__]));
				var v_num_stack = null;
				(v_num_stack = p535.shift([List__]));
				var v_last_op = null;
				(v_last_op = p535.shift([(v_op_stack || (v_op_stack = new ArrayRef([])))._array_]));
				if ( ((v_last_op || (v_last_op = new ArrayRef([])))._array_[0] == 'prefix') ) {
					return (p535.push([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_, p5cal(p521, "new", ['namespace', '','code', ('prefix:<' + p5str((v_last_op || (v_last_op = new ArrayRef([])))._array_[1]) + '>'),'arguments', (new ArrayRef(interpolate_array(p535.pop_term([v_num_stack]))))])]));
				}
				
				else {
					if ( ((v_last_op || (v_last_op = new ArrayRef([])))._array_[0] == 'postfix') ) {
						return (p535.push([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_, p5cal(p521, "new", ['namespace', '','code', ('postfix:<' + p5str((v_last_op || (v_last_op = new ArrayRef([])))._array_[1]) + '>'),'arguments', (new ArrayRef(interpolate_array(p535.pop_term([v_num_stack]))))])]));
					}
					
					else {
						if ( ((v_last_op || (v_last_op = new ArrayRef([])))._array_[0] == 'postfix_or_term') ) {
							return (p535.push([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_, p535.reduce_postfix([v_last_op, p535.pop_term([v_num_stack])])]));
						}
						
						else {
							if ( bool(p536.is_assoc_type(['list', (v_last_op || (v_last_op = new ArrayRef([])))._array_[1]])) ) {
								var v_arg = null;
								if ( (num(p535.scalar([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_])) < 2) ) {
									(function () {
										var v_v2 = null;
										(v_v2 = p535.pop_term([v_num_stack]));
										if ( ((p535.ref([v_v2]) == 'Perlito5::AST::Apply') && (p5cal(v_v2, "code", []) == (('list:<' + p5str((v_last_op || (v_last_op = new ArrayRef([])))._array_[1]) + '>')))) ) {
											p535.push([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_, p5cal(p521, "new", ['namespace', p5cal(v_v2, "namespace", []),'code', p5cal(v_v2, "code", []),'arguments', (new ArrayRef(interpolate_array((p5cal(v_v2, "arguments", []) || (p5cal(v_v2, "arguments", []) = new ArrayRef([])))._array_, null)))])]);
										}
										else {
											p535.push([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_, p5cal(p521, "new", ['namespace', '','code', ('list:<' + p5str((v_last_op || (v_last_op = new ArrayRef([])))._array_[1]) + '>'),'arguments', (new ArrayRef(interpolate_array(v_v2, null)))])]);
										};
										throw(null);
										})();
								}
								else {
									(function () {
										var v_v2 = null;
										(v_v2 = p535.pop_term([v_num_stack]));
										(v_arg = (new ArrayRef(interpolate_array(p535.pop_term([v_num_stack]), v_v2))));
										})();
								};
								if ( (((p535.ref([(v_arg || (v_arg = new ArrayRef([])))._array_[0]]) == 'Perlito5::AST::Apply') && ((v_last_op || (v_last_op = new ArrayRef([])))._array_[0] == 'infix')) && (p5cal((v_arg || (v_arg = new ArrayRef([])))._array_[0], "code", []) == ('list:<' + p5str((v_last_op || (v_last_op = new ArrayRef([])))._array_[1]) + '>'))) ) {
									p535.push([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_, p5cal(p521, "new", ['namespace', '','code', p5cal(((v_arg || (v_arg = new ArrayRef([])))._array_[0]), "code", []),'arguments', (new ArrayRef(interpolate_array((p5cal(((v_arg || (v_arg = new ArrayRef([])))._array_[0]), "arguments", []) || (p5cal(((v_arg || (v_arg = new ArrayRef([])))._array_[0]), "arguments", []) = new ArrayRef([])))._array_, (v_arg || (v_arg = new ArrayRef([])))._array_[1])))])]);
									throw(null);
								};
								return (p535.push([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_, p5cal(p521, "new", ['namespace', '','code', ('list:<' + p5str((v_last_op || (v_last_op = new ArrayRef([])))._array_[1]) + '>'),'arguments', v_arg])]));
							}
							
							else {
								if ( bool(p536.is_assoc_type(['chain', (v_last_op || (v_last_op = new ArrayRef([])))._array_[1]])) ) {
									if ( (num(p535.scalar([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_])) < 2) ) {
										p535.die([('Missing value after operator ' + p5str((v_last_op || (v_last_op = new ArrayRef([])))._array_[1]))]);
									};
									var v_v2 = null;
									(v_v2 = p535.pop_term([v_num_stack]));
									var v_arg = null;
									(v_arg = (new ArrayRef(interpolate_array(p535.pop_term([v_num_stack]), v_v2))));
									return (p535.push([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_, p5cal(p521, "new", ['namespace', '','code', ('infix:<' + p5str((v_last_op || (v_last_op = new ArrayRef([])))._array_[1]) + '>'),'arguments', v_arg])]));
								}
								
								else {
									if ( ((v_last_op || (v_last_op = new ArrayRef([])))._array_[0] == 'ternary') ) {
										if ( (num(p535.scalar([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_])) < 2) ) {
											p535.die(['Missing value after ternary operator']);
										};
										var v_v2 = null;
										(v_v2 = p535.pop_term([v_num_stack]));
										return (p535.push([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_, p5cal(p521, "new", ['namespace', '','code', ('ternary:<' + p5str((v_last_op || (v_last_op = new ArrayRef([])))._array_[1]) + '>'),'arguments', (new ArrayRef(interpolate_array(p535.pop_term([v_num_stack]), (v_last_op || (v_last_op = new ArrayRef([])))._array_[2], v_v2)))])]));
									}
									
									else {
										if ( (num(p535.scalar([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_])) < 2) ) {
											p535.die([('missing value after operator ' + String.fromCharCode(39) + p5str((v_last_op || (v_last_op = new ArrayRef([])))._array_[1]) + String.fromCharCode(39))]);
										};
										var v_v2 = null;
										(v_v2 = p535.pop_term([v_num_stack]));
										return (p535.push([(v_num_stack || (v_num_stack = new ArrayRef([])))._array_, p5cal(p521, "new", ['namespace', '','code', ('infix:<' + p5str((v_last_op || (v_last_op = new ArrayRef([])))._array_[1]) + '>'),'arguments', (new ArrayRef(interpolate_array(p535.pop_term([v_num_stack]), v_v2)))])]));
									}
								}
							}
						}
					}
				}
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		});
		p535["term_arrow"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and((and(('->' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(or(or(or(((function () {
	return (and(and(and((and(('(' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "paren_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['paren_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and((')' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('postfix_or_term', '.( )', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['paren_parse'], "flat", [])))));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(and((and(('[' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "square_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['square_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and((']' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('postfix_or_term', '.[ ]', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['square_parse'], "flat", [])))));
	return (1);
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(and((and(('{' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "curly_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['curly_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('}' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('postfix_or_term', '.{ }', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['curly_parse'], "flat", [])))));
	return (1);
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(and((and(('$' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(and(and((and(('(' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "paren_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['paren_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and((')' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('postfix_or_term', 'methcall', p5cal(p518, "new", ['sigil', '$','namespace', '','name', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.ident'], "flat", [])]), (new HashRef(array_to_hash(interpolate_array('exp', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['paren_parse'], "flat", []), 'terminated', 0))))))));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((((function () {
			((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('postfix_or_term', 'methcall_no_params', p5cal(p518, "new", ['sigil', '$','namespace', '','name', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.ident'], "flat", [])])))));
			return (1);
		})())));
})()); }));
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(and(and((and(('(' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "paren_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['paren_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and((')' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('postfix_or_term', 'methcall', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.ident'], "flat", []), (new HashRef(array_to_hash(interpolate_array('exp', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['paren_parse'], "flat", []), 'terminated', 0))))))));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((((function () {
			((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('postfix_or_term', 'methcall_no_params', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.ident'], "flat", [])))));
			return (1);
		})())));
})()); }));
})()); })));
})()); }));
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		var Hash_special_var = {};
		(Hash_special_var = array_to_hash(interpolate_array('$_', 1, '$&', 1, '$`', 1, '$' + String.fromCharCode(39), 1, '$+', 1, '@+', 1, '%+', 1, '$.', 1, '$/', 1, '$|', 1, '$,', 1, '$' + String.fromCharCode(92), 1, '$"', 1, '$;', 1, '$%', 1, '$=', 1, '$-', 1, '@-', 1, '%-', 1, '$~', 1, '$^', 1, '$:', 1, '$?', 1, '$!', 1, '%!', 1, '$@', 1, '$$', 1, '$<', 1, '$>', 1, '$(', 1, '$)', 1, '$[', 1, '$]', 1, '@_', 1, '$#', 1, '$*', 1, '$#+', 1, '$#-', 1, '$#_', 1)));
		p535["term_special_var"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_len = null;
				(v_len = 0);
				var v_s = null;
				(v_s = p535.substr([v_str, v_pos, 3]));
				if ( bool((Hash_special_var).hasOwnProperty(v_s)) ) {
					(v_len = 3);
				}
				else {
					(v_s = p535.substr([v_str, v_pos, 2]));
					if ( bool((Hash_special_var).hasOwnProperty(v_s)) ) {
						(v_len = 2);
					};
				};
				var v_m = null;
				(v_m = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', add(v_pos, v_len),'bool', 0,'capture', null]));
				if ( bool(v_len) ) {
					(function () {
						var v_c0 = null;
						(v_c0 = p535.substr([v_str, (num(add(v_pos, v_len)) - 1), 1]));
						var v_c1 = null;
						(v_c1 = p535.substr([v_str, add(v_pos, v_len), 1]));
						if ( ((((((v_c0 == '$') || (v_c0 == '@')) || (v_c0 == '%')) || (v_c0 == '*')) || (v_c0 == '&')) && ((((((((v_c1 == '$') || (v_c1 == '@')) || (v_c1 == '%')) || (v_c1 == '*')) || (v_c1 == '&')) || ((v_c1 >= 'a') && (v_c1 <= 'z'))) || ((v_c1 >= 'A') && (v_c1 <= 'Z'))) || ((v_c1 >= '0') && (v_c1 <= '9')))) ) {
							null;
						}
						else {
							((v_m || (v_m = new HashRef({})))._hash_['bool'] = 1);
							((v_m || (v_m = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p518, "new", ['sigil', p535.substr([v_s, 0, (num(v_len) - 1)]),'namespace', '','name', p535.substr([v_s, (num(v_len) - 1), 1])])))));
						};
						})();
				};
				throw(v_m)
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p535["var_sigil_or_pseudo"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(or(or(or(or(((function () {
	return (and(('$#' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('$' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('%' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('@' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('&' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('*' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }));
				})())));
				return (v_MATCH);
		};
		p535["term_sigil"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(((function () {
	return (and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "var_sigil_or_pseudo", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['var_sigil_or_pseudo'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(or(((function () {
	return (and((and(('{' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(or(((function () {
	return (and(and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "optional_namespace_before_ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.optional_namespace_before_ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "var_name", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.var_name'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('}' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p518, "new", ['sigil', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['var_sigil_or_pseudo'], "flat", []),'namespace', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.optional_namespace_before_ident'], "flat", []),'name', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.var_name'], "flat", [])])))));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(and((and(('^' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "var_name", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.var_name'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('}' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p518, "new", ['sigil', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['var_sigil_or_pseudo'], "flat", []),'namespace', '','name', ('^' + p5str(p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.var_name'], "flat", [])))])))));
	return (1);
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "curly_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['curly_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return (and(('}' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p521, "new", ['arguments', (new ArrayRef(interpolate_array(p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['curly_parse'], "flat", [])))),'code', ('prefix:<' + p5str(p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['var_sigil_or_pseudo'], "flat", [])) + '>'),'namespace', ''])))));
	return (1);
})()); })));
})()); }));
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and((and(('^' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "word", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.word'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p518, "new", ['sigil', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['var_sigil_or_pseudo'], "flat", []),'namespace', '','name', ('^' + p5str(p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.word'], "flat", [])))])))));
	return (1);
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "optional_namespace_before_ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.optional_namespace_before_ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "var_name", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.var_name'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p518, "new", ['sigil', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['var_sigil_or_pseudo'], "flat", []),'namespace', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.optional_namespace_before_ident'], "flat", []),'name', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.var_name'], "flat", [])])))));
	return (1);
})()); })));
})()); }));
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "term_special_var", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['term_special_var'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = ((v_MATCH || (v_MATCH = new HashRef({})))._hash_['term_special_var'] || ((v_MATCH || (v_MATCH = new HashRef({})))._hash_['term_special_var'] = new HashRef({})))._hash_['capture']);
	return (1);
})()); })));
})()); }));
				})())));
				return (v_MATCH);
		};
		p535["term_digit"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(((function () {
	return (and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "val_num", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.val_num'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.val_num'], "flat", [])))));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "val_int", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.val_int'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.val_int'], "flat", [])))));
	return (1);
})()); })));
})()); }));
				})())));
				return (v_MATCH);
		};
		p535["term_ternary"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and((and(('?' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "ternary5_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['ternary5_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and((':' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('op', '? :', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['ternary5_parse'], "flat", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p535["term_paren"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and((and(('(' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "paren_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['paren_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and((')' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('postfix_or_term', '( )', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['paren_parse'], "flat", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p535["term_square"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and((and(('[' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "square_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['square_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and((']' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('postfix_or_term', '[ ]', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['square_parse'], "flat", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p535["term_curly"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(and(and((and(('{' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "exp_stmts", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.exp_stmts'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()); }), function () { return (and(('}' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('postfix_or_term', 'block', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.exp_stmts'], "flat", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p535["term_declarator"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "declarator", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.declarator'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "opt_type", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.opt_type'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "var_ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.var_ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p525, "new", ['decl', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.declarator'], "flat", []),'type', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.opt_type'], "flat", []),'var', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.var_ident'], "flat", [])])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p535["term_sub"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and((and(('sub' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 3])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(3, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "anon_sub_def", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.anon_sub_def'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.anon_sub_def'], "flat", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p535["term_do"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(and((and(('do' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				return (and(('{' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = ( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "statement_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['statement_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p528, "new", ['block', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['statement_parse'], "flat", [])])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p535["use_decl"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(((function () {
	return (and(('use' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 3])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(3, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('no' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }));
				})())));
				return (v_MATCH);
		};
		p535["term_use"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "use_decl", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['use_decl'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "full_ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.full_ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (((function () {
			return (and((and(('-' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		if ( bool((v_MATCH)._hash_.hasOwnProperty('Perlito5::Grammar.ident')) ) {
			p535.push([((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.ident'] || ((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.ident'] = new ArrayRef([])))._array_, v_m2]);
		}
		else {
			((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.ident'] = (new ArrayRef(interpolate_array(v_m2))));
		};
		return (1);
	}
	
	else {
		return (0);
	}
})()); }));
		})()));
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "list_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['list_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p5cal(p529, "new", ['code', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['use_decl'], "flat", []),'mod', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.full_ident'], "flat", [])]), "compiletime_eval", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p535["term_package"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and((and(('package' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 7])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(7, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "full_ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.full_ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_name = null;
	(v_name = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.full_ident'], "flat", []));
	(p532.v_PKG_NAME = v_name);
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p521, "new", ['code', 'package','arguments', (new ArrayRef([])),'namespace', v_name])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p535["term_eval"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(and((and(('eval' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 4])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(4, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				return (and(('{' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = ( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "term_curly", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['term_curly'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p521, "new", ['code', 'eval','arguments', (new ArrayRef(interpolate_array(p5cal(p528, "new", ['block', p5cal(p515, "new", ['stmts', (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['term_curly'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['term_curly'], "flat", []) = new ArrayRef([])))._array_[2]])])))),'namespace', ''])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p535["map_or_sort"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(or(((function () {
	return (and(('map' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 3])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(3, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('grep' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 4])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(4, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('sort' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 4])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(4, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }));
				})())));
				return (v_MATCH);
		};
		p535["term_map_or_sort"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "map_or_sort", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['map_or_sort'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				return (and(('{' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = ( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "term_curly", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['term_curly'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "list_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['list_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal(p521, "new", ['code', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['map_or_sort'], "flat", []),'arguments', (new ArrayRef(interpolate_array(p5cal(p515, "new", ['stmts', (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['term_curly'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['term_curly'], "flat", []) = new ArrayRef([])))._array_[2]]), (p535.expand_list([(p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['list_parse'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['list_parse'], "flat", []) = new HashRef({})))._hash_['exp']]) || (p535.expand_list([(p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['list_parse'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['list_parse'], "flat", []) = new HashRef({})))._hash_['exp']]) = new ArrayRef([])))._array_))),'namespace', ''])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p535["term_space"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('space', ' '))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p535["has_newline_after"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(or(((function () {
	return (and(('#' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((((function () {
			var v_m2 = null;
			(v_m2 = p5cal(p538, "is_newline", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
			if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
				return (1);
			}
			
			else {
				return (0);
			}
		})())));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "space", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "has_newline_after", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); })));
})()); }));
				})())));
				return (v_MATCH);
		};
		p535["has_no_comma_or_colon_after"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				var v_pos1 = null;
				(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
				return (or(((function () {
	return (and((',' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and((':' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }));
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = !( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'])));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()); }), function () { return (and(('' != p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }));
						})()));
				})())));
				return (v_MATCH);
		};
		var v_Argument_end_token = null;
		(v_Argument_end_token = (new HashRef(array_to_hash(interpolate_array(':', 1, ']', 1, ')', 1, '}', 1, ';', 1, ',', 1, '<', 1, '>', 1, '=', 1, '&', 1, '|', 1, '^', 1, 'or', 1, 'if', 1, '=>', 1, 'lt', 1, 'le', 1, 'gt', 1, 'ge', 1, '<=', 1, '>=', 1, '==', 1, '!=', 1, 'ne', 1, 'eq', 1, '..', 1, '~~', 1, '&&', 1, '||', 1, '+=', 1, '-=', 1, '*=', 1, '/=', 1, 'x=', 1, '|=', 1, '&=', 1, '.=', 1, '^=', 1, '%=', 1, '//', 1, 'for', 1, 'and', 1, 'xor', 1, '...', 1, '<=>', 1, 'cmp', 1, '<<=', 1, '>>=', 1, '||=', 1, '&&=', 1, '//=', 1, '**=', 1, 'when', 1, 'while', 1, 'unless', 1, 'foreach', 1)))));
		var v_Argument_end_token_chars = null;
		(v_Argument_end_token_chars = (new ArrayRef(interpolate_array(7, 6, 5, 4, 3, 2, 1))));
		var v_List_end_token = null;
		(v_List_end_token = (new HashRef(array_to_hash(interpolate_array(':', 1, ']', 1, ')', 1, '}', 1, ';', 1, 'or', 1, 'if', 1, 'for', 1, 'and', 1, 'xor', 1, 'else', 1, 'when', 1, 'while', 1, 'elsif', 1, 'unless', 1, 'foreach', 1)))));
		var v_List_end_token_chars = null;
		(v_List_end_token_chars = (new ArrayRef(interpolate_array(7, 6, 5, 4, 3, 2, 1))));
		var v_Expr_end_token = null;
		(v_Expr_end_token = (new HashRef(array_to_hash(interpolate_array(']', 1, ')', 1, '}', 1, ';', 1, 'if', 1, 'for', 1, 'else', 1, 'when', 1, 'while', 1, 'elsif', 1, 'unless', 1, 'foreach', 1)))));
		var v_Expr_end_token_chars = null;
		(v_Expr_end_token_chars = (new ArrayRef(interpolate_array(7, 6, 5, 4, 3, 2, 1))));
		p535["op_parse_spc"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_last_is_term = null;
				(v_last_is_term = List__[3]);
				var v_m = null;
				(v_m = p5cal(p536, "op_parse", [v_str,v_pos,v_last_is_term]));
				if ( !( bool((v_m || (v_m = new HashRef({})))._hash_['bool'])) ) {
					throw(v_m);
				};
				var v_spc = null;
				(v_spc = p5cal(p538, "ws", [v_str,(v_m || (v_m = new HashRef({})))._hash_['to']]));
				if ( bool((v_spc || (v_spc = new HashRef({})))._hash_['bool']) ) {
					((v_m || (v_m = new HashRef({})))._hash_['to'] = (v_spc || (v_spc = new HashRef({})))._hash_['to']);
				};
				throw(v_m)
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p535["argument_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_expr = null;
				var v_last_pos = null;
				(v_last_pos = v_pos);
				var v_is_first_token = null;
				(v_is_first_token = 1);
				var v_lexer_stack = null;
				(v_lexer_stack = (new ArrayRef([])));
				var v_terminated = null;
				(v_terminated = 0);
				var v_last_token_was_space = null;
				(v_last_token_was_space = 1);
				var v_last_is_term = null;
				var v_get_token = null;
				(v_get_token = function (List__) {
					try {
						var v_v = null;
						if ( bool(p535.scalar([(v_lexer_stack || (v_lexer_stack = new ArrayRef([])))._array_])) ) {
							(v_v = p535.pop([(v_lexer_stack || (v_lexer_stack = new ArrayRef([])))._array_]));
							if ( ((bool(v_is_first_token) && ((v_v || (v_v = new ArrayRef([])))._array_[0] == 'op')) && !( bool(p536.is_fixity_type(['prefix', (v_v || (v_v = new ArrayRef([])))._array_[1]])))) ) {
								((v_v || (v_v = new ArrayRef([])))._array_[0] = 'end');
							};
						}
						else {
							(function () {
								var v_m = null;
								(v_m = p5cal(p535, "op_parse_spc", [v_str,v_last_pos,v_last_is_term]));
								if ( !( bool(p5cal(v_m, "bool", []))) ) {
									throw((new ArrayRef(interpolate_array('end', '*end*'))));
								};
								(v_v = p5cal(v_m, "flat", []));
								if ( ((v_v || (v_v = new ArrayRef([])))._array_[0] == 'space') ) {
									null;
								}
								else {
									(v_last_is_term = p536.is_term([v_v]));
								};
								if ( ((bool(v_is_first_token) && ((v_v || (v_v = new ArrayRef([])))._array_[0] == 'op')) && !( bool(p536.is_fixity_type(['prefix', (v_v || (v_v = new ArrayRef([])))._array_[1]])))) ) {
									((v_v || (v_v = new ArrayRef([])))._array_[0] = 'end');
								};
								if ( ((v_v || (v_v = new ArrayRef([])))._array_[0] != 'end') ) {
									(v_last_pos = p5cal(v_m, "to", []));
								};
								})();
						};
						if ( ((((v_v || (v_v = new ArrayRef([])))._array_[0] == 'postfix_or_term') && ((v_v || (v_v = new ArrayRef([])))._array_[1] == 'block')) && bool(v_last_token_was_space)) ) {
							if ( bool(p5cal(p5cal(v_self, "has_newline_after", [v_str,v_last_pos]), "bool", [])) ) {
								(v_terminated = 1);
								p535.push([(v_lexer_stack || (v_lexer_stack = new ArrayRef([])))._array_, (new ArrayRef(interpolate_array('end', '*end*')))]);
							}
							else {
								if ( bool(p5cal(p5cal(v_self, "has_no_comma_or_colon_after", [v_str,v_last_pos]), "bool", [])) ) {
									(v_terminated = 1);
									p535.push([(v_lexer_stack || (v_lexer_stack = new ArrayRef([])))._array_, (new ArrayRef(interpolate_array('end', '*end*')))]);
								};
							};
						};
						(v_last_token_was_space = (((v_v || (v_v = new ArrayRef([])))._array_[0] == 'space')));
						(v_is_first_token = 0);
						throw(v_v)
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
				var v_prec = null;
				(v_prec = p5cal(p536, "new", ['get_token', v_get_token,'reduce', v_reduce_to_ast,'end_token', v_Argument_end_token,'end_token_chars', v_Argument_end_token_chars]));
				var v_res = null;
				(v_res = p5cal(v_prec, "precedence_parse", []));
				if ( (num(p535.scalar([(v_res || (v_res = new ArrayRef([])))._array_])) == 0) ) {
					throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_last_pos,'bool', 1,'capture', (new HashRef(array_to_hash(interpolate_array('exp', '*undef*', 'terminated', null))))]));
				};
				var v_block = null;
				if ( (num(p535.scalar([(v_res || (v_res = new ArrayRef([])))._array_])) > 1) ) {
					(v_block = p535.pop([(v_res || (v_res = new ArrayRef([])))._array_]));
					(v_block = p5cal(p515, "new", ['stmts', (v_block || (v_block = new ArrayRef([])))._array_[2],'sig', (v_block || (v_block = new ArrayRef([])))._array_[3]]));
				};
				var v_result = null;
				(v_result = p535.pop_term([v_res]));
				if ( (num(p535.scalar([(v_res || (v_res = new ArrayRef([])))._array_])) > 0) ) {
					(v_block = p535.pop([(v_res || (v_res = new ArrayRef([])))._array_]));
					(v_block = p5cal(p515, "new", ['stmts', (v_block || (v_block = new ArrayRef([])))._array_[2],'sig', (v_block || (v_block = new ArrayRef([])))._array_[3]]));
				};
				throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_last_pos,'bool', 1,'capture', (new HashRef(array_to_hash(interpolate_array('exp', v_result, 'terminated', v_terminated))))]))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p535["list_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_expr = null;
				var v_last_pos = null;
				(v_last_pos = v_pos);
				var v_is_first_token = null;
				(v_is_first_token = 1);
				var v_lexer_stack = null;
				(v_lexer_stack = (new ArrayRef([])));
				var v_terminated = null;
				(v_terminated = 0);
				var v_last_token_was_space = null;
				(v_last_token_was_space = 1);
				var v_last_is_term = null;
				var v_get_token = null;
				(v_get_token = function (List__) {
					try {
						var v_v = null;
						if ( bool(p535.scalar([(v_lexer_stack || (v_lexer_stack = new ArrayRef([])))._array_])) ) {
							(v_v = p535.pop([(v_lexer_stack || (v_lexer_stack = new ArrayRef([])))._array_]));
							if ( ((bool(v_is_first_token) && ((v_v || (v_v = new ArrayRef([])))._array_[0] == 'op')) && !( bool(p536.is_fixity_type(['prefix', (v_v || (v_v = new ArrayRef([])))._array_[1]])))) ) {
								((v_v || (v_v = new ArrayRef([])))._array_[0] = 'end');
							};
						}
						else {
							(function () {
								var v_m = null;
								(v_m = p5cal(p535, "op_parse_spc", [v_str,v_last_pos,v_last_is_term]));
								if ( !( bool(p5cal(v_m, "bool", []))) ) {
									throw((new ArrayRef(interpolate_array('end', '*end*'))));
								};
								(v_v = p5cal(v_m, "flat", []));
								if ( ((v_v || (v_v = new ArrayRef([])))._array_[0] == 'space') ) {
									null;
								}
								else {
									(v_last_is_term = p536.is_term([v_v]));
								};
								if ( ((bool(v_is_first_token) && ((v_v || (v_v = new ArrayRef([])))._array_[0] == 'op')) && !( bool(p536.is_fixity_type(['prefix', (v_v || (v_v = new ArrayRef([])))._array_[1]])))) ) {
									((v_v || (v_v = new ArrayRef([])))._array_[0] = 'end');
								};
								if ( ((v_v || (v_v = new ArrayRef([])))._array_[0] != 'end') ) {
									(v_last_pos = p5cal(v_m, "to", []));
								};
								})();
						};
						(v_last_token_was_space = (((v_v || (v_v = new ArrayRef([])))._array_[0] == 'space')));
						(v_is_first_token = 0);
						throw(v_v)
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
				var v_prec = null;
				(v_prec = p5cal(p536, "new", ['get_token', v_get_token,'reduce', v_reduce_to_ast,'end_token', v_List_end_token,'end_token_chars', v_List_end_token_chars]));
				var v_res = null;
				(v_res = p5cal(v_prec, "precedence_parse", []));
				if ( (num(p535.scalar([(v_res || (v_res = new ArrayRef([])))._array_])) == 0) ) {
					throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_last_pos,'bool', 1,'capture', (new HashRef(array_to_hash(interpolate_array('exp', '*undef*', 'terminated', null))))]));
				};
				var v_result = null;
				(v_result = p535.pop_term([v_res]));
				throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_last_pos,'bool', 1,'capture', (new HashRef(array_to_hash(interpolate_array('exp', v_result, 'terminated', v_terminated))))]))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p535["circumfix_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_delimiter = null;
				(v_delimiter = List__[3]);
				var v_expr = null;
				var v_last_pos = null;
				(v_last_pos = v_pos);
				var v_last_is_term = null;
				var v_get_token = null;
				(v_get_token = function (List__) {
					try {
						var v_m = null;
						(v_m = p5cal(p535, "op_parse_spc", [v_str,v_last_pos,v_last_is_term]));
						if ( !( bool(p5cal(v_m, "bool", []))) ) {
							p535.die(['Expected closing delimiter: ', v_delimiter, ' near ', v_last_pos]);
						};
						var v_v = null;
						(v_v = p5cal(v_m, "flat", []));
						if ( ((v_v || (v_v = new ArrayRef([])))._array_[0] == 'space') ) {
							null;
						}
						else {
							(v_last_is_term = p536.is_term([v_v]));
						};
						if ( ((v_v || (v_v = new ArrayRef([])))._array_[0] != 'end') ) {
							(v_last_pos = p5cal(v_m, "to", []));
						};
						throw(v_v)
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
				var Hash_delim_token = {};
				(Hash_delim_token[v_delimiter] = 1);
				var v_prec = null;
				(v_prec = p5cal(p536, "new", ['get_token', v_get_token,'reduce', v_reduce_to_ast,'end_token', (new HashRef(Hash_delim_token)),'end_token_chars', (new ArrayRef(interpolate_array(p535.length([v_delimiter]))))]));
				var v_res = null;
				(v_res = p5cal(v_prec, "precedence_parse", []));
				(v_res = p535.pop_term([v_res]));
				if ( !( bool((v_res != null))) ) {
					(v_res = '*undef*');
				};
				throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_last_pos,'bool', 1,'capture', v_res]))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p535["ternary5_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				throw(p5cal(v_self, "circumfix_parse", [v_str,v_pos,':']))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p535["curly_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				throw(p5cal(v_self, "circumfix_parse", [v_str,v_pos,'}']))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p535["square_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				throw(p5cal(v_self, "circumfix_parse", [v_str,v_pos,']']))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p535["paren_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				throw(p5cal(v_self, "circumfix_parse", [v_str,v_pos,')']))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p535["exp_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_expr = null;
				var v_last_pos = null;
				(v_last_pos = v_pos);
				var v_lexer_stack = null;
				(v_lexer_stack = (new ArrayRef([])));
				var v_terminated = null;
				(v_terminated = 0);
				var v_last_is_term = null;
				var v_get_token = null;
				(v_get_token = function (List__) {
					try {
						var v_v = null;
						if ( bool(p535.scalar([(v_lexer_stack || (v_lexer_stack = new ArrayRef([])))._array_])) ) {
							(v_v = p535.pop([(v_lexer_stack || (v_lexer_stack = new ArrayRef([])))._array_]));
						}
						else {
							(function () {
								var v_m = null;
								(v_m = p5cal(p535, "op_parse_spc", [v_str,v_last_pos,v_last_is_term]));
								if ( !( bool(p5cal(v_m, "bool", []))) ) {
									throw((new ArrayRef(interpolate_array('end', '*end*'))));
								};
								(v_v = p5cal(v_m, "flat", []));
								if ( ((v_v || (v_v = new ArrayRef([])))._array_[0] == 'space') ) {
									null;
								}
								else {
									(v_last_is_term = p536.is_term([v_v]));
								};
								if ( ((v_v || (v_v = new ArrayRef([])))._array_[0] != 'end') ) {
									(v_last_pos = p5cal(v_m, "to", []));
								};
								})();
						};
						throw(v_v)
					}
					catch(err) {
						if ( err instanceof Error ) {
							throw(err);
						}
						else {
							return(err);
						}
					}
				});
				var v_prec = null;
				(v_prec = p5cal(p536, "new", ['get_token', v_get_token,'reduce', v_reduce_to_ast,'end_token', v_Expr_end_token,'end_token_chars', v_Expr_end_token_chars]));
				var v_res = null;
				(v_res = p5cal(v_prec, "precedence_parse", []));
				if ( (num(p535.scalar([(v_res || (v_res = new ArrayRef([])))._array_])) == 0) ) {
					throw(p5cal(p510, "new", ['bool', 0]));
				};
				var v_result = null;
				(v_result = p535.pop_term([v_res]));
				throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_last_pos,'bool', 1,'capture', (new HashRef(array_to_hash(interpolate_array('exp', v_result, 'terminated', v_terminated))))]))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p535["exp_stmt"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(or(or(or(or(((function () {
	return (and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "if", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.if'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.if'], "flat", []));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "unless", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.unless'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.unless'], "flat", []));
	return (1);
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "when", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.when'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.when'], "flat", []));
	return (1);
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "for", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.for'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.for'], "flat", []));
	return (1);
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "while", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.while'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.while'], "flat", []));
	return (1);
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(and((and(('sub' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 3])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(3, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "named_sub_def", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.named_sub_def'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.named_sub_def'], "flat", []));
	return (1);
})()); })));
})()); }));
				})())));
				return (v_MATCH);
		};
		p535["statement_modifier"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(or(or(or(or(((function () {
	return (and(('if' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('unless' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 6])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(6, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('when' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 4])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(4, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('foreach' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 7])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(7, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('for' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 3])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(3, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('while' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 5])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(5, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }));
				})())));
				return (v_MATCH);
		};
		p535["delimited_statement"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and((and((';' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "statement_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['statement_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	return (and((';' == p535.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()); }), function () { return ((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['statement_parse'], "flat", []));
	return (1);
})()); })));
})()); }));
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p535["statement_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_expr = null;
				var v_last_pos = null;
				(v_last_pos = v_pos);
				var v_lexer_stack = null;
				(v_lexer_stack = (new ArrayRef([])));
				var v_res = null;
				(v_res = p5cal(v_self, "exp_stmt", [v_str,v_pos]));
				if ( bool((v_res || (v_res = new HashRef({})))._hash_['bool']) ) {
					throw(v_res);
				};
				if ( (p535.substr([v_str, v_pos, 1]) == '{') ) {
					(function () {
						var v_m = null;
						(v_m = p5cal(v_self, "term_curly", [v_str,v_pos]));
						if ( bool((v_m || (v_m = new HashRef({})))._hash_['bool']) ) {
							(function () {
								var v_v = null;
								(v_v = p5cal(v_m, "flat", []));
								(v_v = p5cal(p515, "new", ['stmts', (v_v || (v_v = new ArrayRef([])))._array_[2],'sig', (v_v || (v_v = new ArrayRef([])))._array_[3]]));
								(v_v = p535.block_or_hash([v_v]));
								if ( (p535.ref([v_v]) == 'Perlito5::AST::Lit::Block') ) {
									((v_m || (v_m = new HashRef({})))._hash_['capture'] = v_v);
									throw(v_m);
								};
								})();
						};
						})();
				};
				(v_res = p5cal(v_self, "exp_parse", [v_str,v_pos]));
				if ( !( bool(p5cal(v_res, "bool", []))) ) {
					throw(v_res);
				};
				if ( (p535.ref([(p5cal(v_res, "flat", []) || (p5cal(v_res, "flat", []) = new HashRef({})))._hash_['exp']]) == 'Perlito5::AST::Lit::Block') ) {
					((p5cal(v_res, "flat", []) || (p5cal(v_res, "flat", []) = new HashRef({})))._hash_['exp'] = p5cal(p528, "new", ['block', (p5cal(v_res, "flat", []) || (p5cal(v_res, "flat", []) = new HashRef({})))._hash_['exp']]));
				};
				if ( bool((p5cal(v_res, "flat", []) || (p5cal(v_res, "flat", []) = new HashRef({})))._hash_['terminated']) ) {
					((v_res || (v_res = new HashRef({})))._hash_['capture'] = (p5cal(v_res, "flat", []) || (p5cal(v_res, "flat", []) = new HashRef({})))._hash_['exp']);
					throw(v_res);
				};
				var v_modifier = null;
				(v_modifier = p5cal(v_self, "statement_modifier", [v_str,p5cal(v_res, "to", [])]));
				if ( !( bool(p5cal(v_modifier, "bool", []))) ) {
					((v_res || (v_res = new HashRef({})))._hash_['capture'] = (p5cal(v_res, "flat", []) || (p5cal(v_res, "flat", []) = new HashRef({})))._hash_['exp']);
					throw(v_res);
				};
				var v_modifier_exp = null;
				(v_modifier_exp = p5cal(v_self, "exp_parse", [v_str,p5cal(v_modifier, "to", [])]));
				if ( !( bool(p5cal(v_modifier_exp, "bool", []))) ) {
					p535.die(['Expected expression after ' + String.fromCharCode(39), p5cal(v_modifier, "flat", []), String.fromCharCode(39)]);
				};
				(v_modifier = p5cal(v_modifier, "flat", []));
				if ( (v_modifier == 'if') ) {
					throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', p5cal(v_modifier_exp, "to", []),'bool', 1,'capture', p5cal(p522, "new", ['cond', (p5cal(v_modifier_exp, "flat", []) || (p5cal(v_modifier_exp, "flat", []) = new HashRef({})))._hash_['exp'],'body', p5cal(p515, "new", ['stmts', (new ArrayRef(interpolate_array((p5cal(v_res, "flat", []) || (p5cal(v_res, "flat", []) = new HashRef({})))._hash_['exp'])))]),'otherwise', p5cal(p515, "new", ['stmts', (new ArrayRef([]))])])]));
				};
				if ( (v_modifier == 'unless') ) {
					throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', p5cal(v_modifier_exp, "to", []),'bool', 1,'capture', p5cal(p522, "new", ['cond', (p5cal(v_modifier_exp, "flat", []) || (p5cal(v_modifier_exp, "flat", []) = new HashRef({})))._hash_['exp'],'body', p5cal(p515, "new", ['stmts', (new ArrayRef([]))]),'otherwise', p5cal(p515, "new", ['stmts', (new ArrayRef(interpolate_array((p5cal(v_res, "flat", []) || (p5cal(v_res, "flat", []) = new HashRef({})))._hash_['exp'])))])])]));
				};
				if ( (v_modifier == 'while') ) {
					throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', p5cal(v_modifier_exp, "to", []),'bool', 1,'capture', p5cal(p523, "new", ['cond', (p5cal(v_modifier_exp, "flat", []) || (p5cal(v_modifier_exp, "flat", []) = new HashRef({})))._hash_['exp'],'body', p5cal(p515, "new", ['stmts', (new ArrayRef(interpolate_array((p5cal(v_res, "flat", []) || (p5cal(v_res, "flat", []) = new HashRef({})))._hash_['exp'])))])])]));
				};
				if ( ((v_modifier == 'for') || (v_modifier == 'foreach')) ) {
					throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', p5cal(v_modifier_exp, "to", []),'bool', 1,'capture', p5cal(p524, "new", ['cond', (p5cal(v_modifier_exp, "flat", []) || (p5cal(v_modifier_exp, "flat", []) = new HashRef({})))._hash_['exp'],'body', p5cal(p515, "new", ['stmts', (new ArrayRef(interpolate_array((p5cal(v_res, "flat", []) || (p5cal(v_res, "flat", []) = new HashRef({})))._hash_['exp'])))])])]));
				};
				return (p535.die([('Unexpected statement modifier ' + String.fromCharCode(39) + p5str(v_modifier) + String.fromCharCode(39))]));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		1;
	})()
;
	(function () {
		// package Perlito5::Grammar
;
		p538["unless"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(and(and(and(and(and(and(and((and(('u' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return (and(('n' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('l' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('e' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('s' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('s' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p535, "term_paren", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_paren'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p535, "term_curly", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_curly'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_body = null;
	(v_body = (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_curly'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_curly'], "flat", []) = new ArrayRef([])))._array_[2]);
	if ( !( bool((v_body != null))) ) {
		p538.die(['Missing code block in ' + String.fromCharCode(39) + 'unless' + String.fromCharCode(39)]);
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p522, "new", ['cond', (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_paren'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_paren'], "flat", []) = new ArrayRef([])))._array_[2],'body', p5cal(p515, "new", ['stmts', (new ArrayRef([]))]),'otherwise', p5cal(p515, "new", ['stmts', v_body])]));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["if"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(and(and(and((and(('i' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return (and(('f' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p535, "term_paren", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_paren'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p535, "term_curly", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_curly'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(or(((function () {
	return (and(and(and(and(and(and(and(and(and(and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return (and(('e' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('l' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('s' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('e' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('{' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "exp_stmts", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.exp_stmts'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('}' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_body = null;
	(v_body = (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_curly'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_curly'], "flat", []) = new ArrayRef([])))._array_[2]);
	if ( !( bool((v_body != null))) ) {
		p538.die(['Missing code block in ' + String.fromCharCode(39) + 'if' + String.fromCharCode(39)]);
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p522, "new", ['cond', (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_paren'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_paren'], "flat", []) = new ArrayRef([])))._array_[2],'body', p5cal(p515, "new", ['stmts', v_body]),'otherwise', p5cal(p515, "new", ['stmts', or(p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.exp_stmts'], "flat", []), function () { return (new ArrayRef([])); })])]));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(and(and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return (and(('e' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('l' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('s' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "if", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['if'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_body = null;
	(v_body = (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_curly'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_curly'], "flat", []) = new ArrayRef([])))._array_[2]);
	if ( !( bool((v_body != null))) ) {
		p538.die(['Missing code block in ' + String.fromCharCode(39) + 'if' + String.fromCharCode(39)]);
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p522, "new", ['cond', (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_paren'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_paren'], "flat", []) = new ArrayRef([])))._array_[2],'body', p5cal(p515, "new", ['stmts', v_body]),'otherwise', p5cal(p515, "new", ['stmts', (new ArrayRef(interpolate_array(p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['if'], "flat", []))))])]));
	return (1);
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((((function () {
			var v_body = null;
			(v_body = (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_curly'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_curly'], "flat", []) = new ArrayRef([])))._array_[2]);
			if ( !( bool((v_body != null))) ) {
				p538.die(['Missing code block in ' + String.fromCharCode(39) + 'if' + String.fromCharCode(39)]);
			};
			((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p522, "new", ['cond', (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_paren'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_paren'], "flat", []) = new ArrayRef([])))._array_[2],'body', p5cal(p515, "new", ['stmts', v_body]),'otherwise', p5cal(p515, "new", ['stmts', (new ArrayRef([]))])]));
			return (1);
		})())));
})()); }));
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["when"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(and(and(and((and(('w' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return (and(('h' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('e' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('n' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "exp", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['exp'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	p538.die(['when - not implemented']);
	var v_body = null;
	(v_body = (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['exp'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['exp'], "flat", []) = new HashRef({})))._hash_['end_block']);
	if ( !( bool((v_body != null))) ) {
		p538.die(['Missing code block in ' + String.fromCharCode(39) + 'when' + String.fromCharCode(39)]);
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p539, "new", ['parameters', (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['exp'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['exp'], "flat", []) = new HashRef({})))._hash_['exp'],'body', v_body]));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["for"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(and((and(('f' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return (and(('o' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('r' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	return (and(('each' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 4])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(4, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()); }), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(and(and(and(and(and(and(and(and(and(and(and(and(and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return (and(('m' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('y' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "var_ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.var_ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('(' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p535, "paren_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.paren_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and((')' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('{' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "exp_stmts", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.exp_stmts'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('}' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p524, "new", ['cond', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.paren_parse'], "flat", []),'topic', null,'body', p5cal(p515, "new", ['stmts', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.exp_stmts'], "flat", []),'sig', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.var_ident'], "flat", [])])]));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(and(and(and(and(and(and(and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return (and(('(' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p535, "paren_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.paren_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and((')' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('{' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "exp_stmts", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.exp_stmts'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('}' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p524, "new", ['cond', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.paren_parse'], "flat", []),'topic', null,'body', p5cal(p515, "new", ['stmts', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.exp_stmts'], "flat", []),'sig', null])]));
	return (1);
})()); })));
})()); }));
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["while"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(and(and(and(and(and(and(and(and(and(and(and(and((and(('w' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return (and(('h' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('i' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('l' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return (and(('e' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('(' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p535, "paren_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.paren_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and((')' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('{' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "exp_stmts", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.exp_stmts'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('}' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p523, "new", ['cond', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.paren_parse'], "flat", []),'body', p5cal(p515, "new", ['stmts', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.exp_stmts'], "flat", []),'sig', null])]));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
	})()
;
	(function () {
		// use v5
;
		// package Perlito5::Grammar::String
;
		// use Perlito5::Precedence
;
		p536.add_term([String.fromCharCode(39), function (List__) {
				return (p5cal(p540, "term_single_quote", [List__[0],List__[1]]));
		}]);
		p536.add_term(['"', function (List__) {
				return (p5cal(p540, "term_double_quote", [List__[0],List__[1]]));
		}]);
		p536.add_term(['<<', function (List__) {
				return (p5cal(p540, "here_doc_wanted", [List__[0],List__[1]]));
		}]);
		p536.add_term(['q', function (List__) {
				return (p5cal(p540, "term_q_quote", [List__[0],List__[1]]));
		}]);
		p536.add_term(['qq', function (List__) {
				return (p5cal(p540, "term_qq_quote", [List__[0],List__[1]]));
		}]);
		p536.add_term(['qw', function (List__) {
				return (p5cal(p540, "term_qw_quote", [List__[0],List__[1]]));
		}]);
		p536.add_term(['/', function (List__) {
				return (p5cal(p540, "term_slash_quote", [List__[0],List__[1]]));
		}]);
		p536.add_term(['m', function (List__) {
				return (p5cal(p540, "term_m_quote", [List__[0],List__[1]]));
		}]);
		p536.add_term(['s', function (List__) {
				return (p5cal(p540, "term_s_quote", [List__[0],List__[1]]));
		}]);
		p540["term_double_quote"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and((and(('"' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "double_quote_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['double_quote_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['double_quote_parse'], "flat", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p540["term_single_quote"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and((and((String.fromCharCode(39) == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "single_quote_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['single_quote_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['single_quote_parse'], "flat", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p540["term_q_quote"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and((and(('q' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(('#' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				var v_m2 = null;
				(v_m2 = p5cal(p538, "word", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
				if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
					((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
					return (1);
				}
				
				else {
					return (0);
				}
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = !( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'])));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "char_any", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['char_any'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); })));
})()); }));
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "q_quote_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['q_quote_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['q_quote_parse'], "flat", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p540["term_qq_quote"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and((and(('qq' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(('#' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				var v_m2 = null;
				(v_m2 = p5cal(p538, "word", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
				if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
					((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
					return (1);
				}
				
				else {
					return (0);
				}
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = !( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'])));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "char_any", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['char_any'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); })));
})()); }));
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "qq_quote_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['qq_quote_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['qq_quote_parse'], "flat", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p540["term_qw_quote"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and((and(('qw' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(('#' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				var v_m2 = null;
				(v_m2 = p5cal(p538, "word", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
				if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
					((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
					return (1);
				}
				
				else {
					return (0);
				}
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = !( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'])));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "char_any", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['char_any'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); })));
})()); }));
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "qw_quote_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['qw_quote_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['qw_quote_parse'], "flat", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p540["term_slash_quote"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and((and(('/' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "m_quote_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['m_quote_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['m_quote_parse'], "flat", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p540["term_m_quote"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and((and(('m' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(('#' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				var v_m2 = null;
				(v_m2 = p5cal(p538, "word", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
				if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
					((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
					return (1);
				}
				
				else {
					return (0);
				}
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = !( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'])));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "char_any", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['char_any'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); })));
})()); }));
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "m_quote_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['m_quote_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['m_quote_parse'], "flat", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p540["term_s_quote"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and((and(('s' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(('#' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				var v_m2 = null;
				(v_m2 = p5cal(p538, "word", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
				if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
					((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
					return (1);
				}
				
				else {
					return (0);
				}
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = !( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'])));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "char_any", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['char_any'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); })));
})()); }));
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "s_quote_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['s_quote_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array('term', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['s_quote_parse'], "flat", [])))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		var Hash_pair = {};
		(Hash_pair = array_to_hash(interpolate_array('{', '}', '(', ')', '[', ']', '<', '>')));
		p540["q_quote_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_delimiter = null;
				(v_delimiter = p540.substr([v_str, (num(v_pos) - 1), 1]));
				if ( bool((Hash_pair).hasOwnProperty(v_delimiter)) ) {
					(v_delimiter = Hash_pair[v_delimiter]);
				};
				throw(p5cal(v_self, "string_interpolation_parse", [v_str,v_pos,v_delimiter,0]))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p540["qq_quote_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_delimiter = null;
				(v_delimiter = p540.substr([v_str, (num(v_pos) - 1), 1]));
				if ( bool((Hash_pair).hasOwnProperty(v_delimiter)) ) {
					(v_delimiter = Hash_pair[v_delimiter]);
				};
				throw(p5cal(v_self, "string_interpolation_parse", [v_str,v_pos,v_delimiter,1]))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p540["qw_quote_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_delimiter = null;
				(v_delimiter = p540.substr([v_str, (num(v_pos) - 1), 1]));
				if ( bool((Hash_pair).hasOwnProperty(v_delimiter)) ) {
					(v_delimiter = Hash_pair[v_delimiter]);
				};
				var v_m = null;
				(v_m = p5cal(v_self, "string_interpolation_parse", [v_str,v_pos,v_delimiter,0]));
				if ( bool((v_m || (v_m = new HashRef({})))._hash_['bool']) ) {
					((v_m || (v_m = new HashRef({})))._hash_['capture'] = p5cal(p521, "new", ['code', 'list:<,>','arguments', (new ArrayRef(interpolate_array(p5map(p540, function () {
	return (p5cal(p514, "new", ['buf', p540["v__"]]));
}, p540.split([' ', (p5cal(v_m, "flat", []) || (p5cal(v_m, "flat", []) = new HashRef({})))._hash_['buf']]))))),'namespace', '']));
				};
				throw(v_m)
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p540["m_quote_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_delimiter = null;
				(v_delimiter = p540.substr([v_str, (num(v_pos) - 1), 1]));
				var v_closing_delimiter = null;
				(v_closing_delimiter = v_delimiter);
				if ( bool((Hash_pair).hasOwnProperty(v_delimiter)) ) {
					(v_closing_delimiter = Hash_pair[v_delimiter]);
				};
				var v_part1 = null;
				(v_part1 = p5cal(v_self, "string_interpolation_parse", [v_str,v_pos,v_closing_delimiter,1]));
				if ( bool((v_part1 || (v_part1 = new HashRef({})))._hash_['bool']) ) {
					null;
				}
				else {
					throw(v_part1);
				};
				var v_str_regex = null;
				(v_str_regex = p5cal(p514, "new", ['buf', p540.substr([v_str, v_pos, (num((num((v_part1 || (v_part1 = new HashRef({})))._hash_['to']) - num(v_pos))) - 1)])]));
				var v_m = null;
				var v_p = null;
				(v_p = (v_part1 || (v_part1 = new HashRef({})))._hash_['to']);
				var v_modifiers = null;
				(v_modifiers = '');
				(v_m = p5cal(p538, "ident", [v_str,v_p]));
				if ( bool((v_m || (v_m = new HashRef({})))._hash_['bool']) ) {
					(v_modifiers = p5cal(v_m, "flat", []));
					((v_part1 || (v_part1 = new HashRef({})))._hash_['to'] = (v_m || (v_m = new HashRef({})))._hash_['to']);
				};
				((v_part1 || (v_part1 = new HashRef({})))._hash_['capture'] = p5cal(p521, "new", ['code', 'p5:m','arguments', (new ArrayRef(interpolate_array(v_str_regex, v_modifiers))),'namespace', '']));
				throw(v_part1)
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p540["s_quote_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_delimiter = null;
				(v_delimiter = p540.substr([v_str, (num(v_pos) - 1), 1]));
				var v_closing_delimiter = null;
				(v_closing_delimiter = v_delimiter);
				if ( bool((Hash_pair).hasOwnProperty(v_delimiter)) ) {
					(v_closing_delimiter = Hash_pair[v_delimiter]);
				};
				var v_part1 = null;
				(v_part1 = p5cal(v_self, "string_interpolation_parse", [v_str,v_pos,v_closing_delimiter,1]));
				if ( bool((v_part1 || (v_part1 = new HashRef({})))._hash_['bool']) ) {
					null;
				}
				else {
					throw(v_part1);
				};
				var v_str_regex = null;
				(v_str_regex = p5cal(p514, "new", ['buf', p540.substr([v_str, v_pos, (num((num((v_part1 || (v_part1 = new HashRef({})))._hash_['to']) - num(v_pos))) - 1)])]));
				var v_part2 = null;
				var v_m = null;
				var v_p = null;
				(v_p = (v_part1 || (v_part1 = new HashRef({})))._hash_['to']);
				if ( bool((Hash_pair).hasOwnProperty(v_delimiter)) ) {
					(v_m = p5cal(p538, "opt_ws", [v_str,v_p]));
					(v_p = (v_m || (v_m = new HashRef({})))._hash_['to']);
					(v_delimiter = p540.substr([v_str, v_p, 1]));
					(v_p)++;
					(v_closing_delimiter = v_delimiter);
					if ( bool((Hash_pair).hasOwnProperty(v_delimiter)) ) {
						(v_closing_delimiter = Hash_pair[v_delimiter]);
					};
					(v_part2 = p5cal(v_self, "string_interpolation_parse", [v_str,v_p,v_closing_delimiter,1]));
					if ( bool((v_part2 || (v_part2 = new HashRef({})))._hash_['bool']) ) {
						null;
					}
					else {
						throw(v_part2);
					};
				}
				else {
					(v_part2 = p5cal(v_self, "string_interpolation_parse", [v_str,v_p,v_closing_delimiter,1]));
					if ( bool((v_part2 || (v_part2 = new HashRef({})))._hash_['bool']) ) {
						null;
					}
					else {
						throw(v_part2);
					};
				};
				(v_p = (v_part2 || (v_part2 = new HashRef({})))._hash_['to']);
				var v_modifiers = null;
				(v_modifiers = '');
				(v_m = p5cal(p538, "ident", [v_str,v_p]));
				if ( bool((v_m || (v_m = new HashRef({})))._hash_['bool']) ) {
					(v_modifiers = p5cal(v_m, "flat", []));
					((v_part2 || (v_part2 = new HashRef({})))._hash_['to'] = (v_m || (v_m = new HashRef({})))._hash_['to']);
				};
				((v_part2 || (v_part2 = new HashRef({})))._hash_['capture'] = p5cal(p521, "new", ['code', 'p5:s','arguments', (new ArrayRef(interpolate_array(v_str_regex, p5cal(v_part2, "flat", []), v_modifiers))),'namespace', '']));
				throw(v_part2)
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p540["string_interpolation_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_delimiter = null;
				(v_delimiter = List__[3]);
				var v_interpolate = null;
				(v_interpolate = List__[4]);
				var v_p = null;
				(v_p = v_pos);
				var List_args = [];
				var v_buf = null;
				(v_buf = '');
				for ( ; ((num(v_p) < num(p540.length([v_str]))) && (p540.substr([v_str, v_p, p540.length([v_delimiter])]) != v_delimiter));  ) {
					(function () {
						var v_m = null;
						(v_m = ( bool(v_interpolate) ? p5cal(p540, "double_quoted_buf", [v_str,v_p]) : p5cal(p540, "single_quoted_unescape", [v_str,v_p])));
						if ( bool((v_m || (v_m = new HashRef({})))._hash_['bool']) ) {
							(function () {
								var v_obj = null;
								(v_obj = p5cal(v_m, "flat", []));
								if ( (p540.ref([v_obj]) == 'Perlito5::AST::Val::Buf') ) {
									(v_buf = (p5str(v_buf) + p5str((v_obj || (v_obj = new HashRef({})))._hash_['buf'])));
									(v_obj = null);
								};
								if ( bool(v_obj) ) {
									if ( bool(p540.length([v_buf])) ) {
										p540.push([List_args, p5cal(p514, "new", ['buf', v_buf])]);
										(v_buf = '');
									};
									p540.push([List_args, v_obj]);
								};
								(v_p = (v_m || (v_m = new HashRef({})))._hash_['to']);
								})();
						}
						else {
							(function () {
								var v_c = null;
								(v_c = p540.substr([v_str, v_p, 1]));
								(v_buf = (p5str(v_buf) + p5str(v_c)));
								(v_p)++;
								if ( ((v_c == p540.chr([10])) || (v_c == p540.chr([13]))) ) {
									(function () {
										var v_m = null;
										(v_m = p5cal(v_self, "here_doc", [v_str,v_p]));
										(v_p = (v_m || (v_m = new HashRef({})))._hash_['to']);
										})();
								};
								})();
						};
						})();
				};
				if ( bool(p540.length([v_buf])) ) {
					p540.push([List_args, p5cal(p514, "new", ['buf', v_buf])]);
				};
				if ( (p540.substr([v_str, v_p, p540.length([v_delimiter])]) != v_delimiter) ) {
					p540.die([('Can' + String.fromCharCode(39) + 't find string terminator ' + String.fromCharCode(39) + p5str(v_delimiter) + String.fromCharCode(39) + ' anywhere before EOF')]);
				};
				(v_p = add(v_p, p540.length([v_delimiter])));
				var v_ast = null;
				if ( !( bool(List_args)) ) {
					(v_ast = p5cal(p514, "new", ['buf', '']));
				}
				else {
					if ( (num(List_args) == 1) ) {
						(v_ast = List_args[0]);
					}
					else {
						(v_ast = p5cal(p521, "new", ['namespace', '','code', 'list:<.>','arguments', (new ArrayRef(List_args))]));
					};
				};
				throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_p,'bool', 1,'capture', v_ast]))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		var List_Here_doc = [];
		p540["here_doc_wanted"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_delimiter = null;
				var v_type = null;
				(v_type = 'double_quote');
				var v_p = null;
				(v_p = v_pos);
				if ( (p540.substr([v_str, v_p, 2]) == '<<') ) {
					(v_p = add(v_p, 2));
					if ( (p540.substr([v_str, v_p, 1]) == String.fromCharCode(39)) ) {
						(function () {
							(v_p = add(v_p, 1));
							var v_m = null;
							(v_m = p5cal(p540, "single_quote_parse", [v_str,v_p]));
							if ( bool((v_m || (v_m = new HashRef({})))._hash_['bool']) ) {
								(v_p = (v_m || (v_m = new HashRef({})))._hash_['to']);
								(v_delimiter = (p5cal(v_m, "flat", []) || (p5cal(v_m, "flat", []) = new HashRef({})))._hash_['buf']);
								(v_type = 'single_quote');
							};
							})();
					};
				};
				if ( !( bool((v_delimiter != null))) ) {
					throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 0,'capture', null]));
				};
				var v_placeholder = null;
				(v_placeholder = p5cal(p514, "new", ['buf', 'HEREDOC']));
				p540.push([List_Here_doc, (new ArrayRef(interpolate_array(v_type, function (List__) {
		return (((v_placeholder || (v_placeholder = new HashRef({})))._hash_['buf'] = List__[0]));
}, v_delimiter)))]);
				throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_p,'bool', 1,'capture', (new ArrayRef(interpolate_array('term', v_placeholder)))]))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p540["newline"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(((function () {
	return (and((and((String.fromCharCode(10) == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	return (and((String.fromCharCode(13) == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and((and((String.fromCharCode(13) == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	return (and((String.fromCharCode(10) == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()); })));
})()); }));
				})())));
				return (v_MATCH);
		};
		p540["here_doc"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				if ( !( bool(List_Here_doc)) ) {
					throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1,'capture', null]));
				};
				var v_p = null;
				(v_p = v_pos);
				var v_here = null;
				(v_here = p540.shift([List_Here_doc]));
				var v_delimiter = null;
				(v_delimiter = (v_here || (v_here = new ArrayRef([])))._array_[2]);
				for ( ; (num(v_p) < num(p540.length([v_str])));  ) {
					if ( (p540.substr([v_str, v_p, p540.length([v_delimiter])]) == v_delimiter) ) {
						(function () {
							((v_here || (v_here = new ArrayRef([])))._array_[1])([p540.substr([v_str, v_pos, (num(v_p) - num(v_pos))])]);
							(v_p = add(v_p, p540.length([v_delimiter])));
							var v_m = null;
							(v_m = p5cal(v_self, "newline", [v_str,v_p]));
							if ( ((num(v_p) >= num(p540.length([v_str]))) || bool((v_m || (v_m = new HashRef({})))._hash_['bool'])) ) {
								if ( bool((v_m || (v_m = new HashRef({})))._hash_['bool']) ) {
									(v_p = (v_m || (v_m = new HashRef({})))._hash_['to']);
								};
								throw(p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_p,'bool', 1,'capture', null]));
							};
							})();
					};
					for ( ; ((num(v_p) < num(p540.length([v_str]))) && ((p540.substr([v_str, v_p, 1]) != p540.chr([10])) && (p540.substr([v_str, v_p, 1]) != p540.chr([13]))));  ) {
						(v_p)++;
					};
					for ( ; ((num(v_p) < num(p540.length([v_str]))) && ((p540.substr([v_str, v_p, 1]) == p540.chr([10])) || (p540.substr([v_str, v_p, 1]) == p540.chr([13]))));  ) {
						(v_p)++;
					};
				};
				return (p540.die([('Can' + String.fromCharCode(39) + 't find string terminator "' + p5str(v_delimiter) + '" anywhere before EOF')]));
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p540["single_quote_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				throw(p5cal(v_self, "string_interpolation_parse", [v_str,v_pos,String.fromCharCode(39),0]))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p540["double_quote_parse"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				throw(p5cal(v_self, "string_interpolation_parse", [v_str,v_pos,'"',1]))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		p540["char_any"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(('' != p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p540["single_quoted_unescape"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(((function () {
	return (and(and((and((String.fromCharCode(92) == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return (and((String.fromCharCode(92) == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p514, "new", ['buf', String.fromCharCode(92)]));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and((and((String.fromCharCode(92) == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return (and((String.fromCharCode(39) == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p514, "new", ['buf', String.fromCharCode(39)]));
	return (1);
})()); })));
})()); }));
				})())));
				return (v_MATCH);
		};
		p540["double_quoted_unescape"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(or(or(or(((function () {
	return (and((and(('c' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(and(and((and(('[' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "digits", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.digits'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and((']' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p540.chr([p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.digits'], "flat", [])]));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p538, "digits", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.digits'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p540.chr([p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Grammar.digits'], "flat", [])]));
	return (1);
})()); })));
})()); }));
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and((and(('e' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p540.chr([27]));
	return (1);
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and((and(('n' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = String.fromCharCode(10));
	return (1);
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and((and(('t' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p540.chr([9]));
	return (1);
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "char_any", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['char_any'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['char_any'], "flat", []));
	return (1);
})()); })));
})()); }));
				})())));
				return (v_MATCH);
		};
		p540["double_quoted_buf"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(or(((function () {
	return (and(((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				return (and(('$' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = ( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p535, "term_sigil", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_sigil'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_sigil'], "flat", []) || (p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_sigil'], "flat", []) = new ArrayRef([])))._array_[1]);
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "char_any", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['char_any'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p514, "new", ['buf', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['char_any'], "flat", [])]));
	return (1);
})()); })));
})()); }));
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				return (and(('@' == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = ( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p535, "term_sigil", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_sigil'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p521, "new", ['namespace', '','code', 'join','arguments', (new ArrayRef(interpolate_array(p5cal(p514, "new", ['buf', ' ']), ((p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_sigil'], "flat", [])) || ((p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.term_sigil'], "flat", [])) = new ArrayRef([])))._array_[1])))]));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "char_any", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['char_any'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p514, "new", ['buf', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['char_any'], "flat", [])]));
	return (1);
})()); })));
})()); }));
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and((and((String.fromCharCode(92) == p540.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "double_quoted_unescape", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['double_quoted_unescape'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p514, "new", ['buf', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['double_quoted_unescape'], "flat", [])]));
	return (1);
})()); })));
})()); }));
				})())));
				return (v_MATCH);
		};
		1;
	})()
;
	(function () {
		// package Perlito5::Grammar
;
		// use Perlito5::Expression
;
		// use Perlito5::Grammar::Control
;
		// use Perlito5::Grammar::String
;
		p538["word"] = function (List__) {
				return (p538.bless([(new HashRef(array_to_hash(interpolate_array('str', List__[1], 'from', List__[2], 'to', add(List__[2], 1), 'bool', (p538.substr([List__[1], List__[2], 1]).match(/\w/) ? 1 : 0))))), 'Perlito5::Match']));
		};
		p538["digit"] = function (List__) {
				return (p538.bless([(new HashRef(array_to_hash(interpolate_array('str', List__[1], 'from', List__[2], 'to', add(List__[2], 1), 'bool', (p538.substr([List__[1], List__[2], 1]).match(/\d/) ? 1 : 0))))), 'Perlito5::Match']));
		};
		p538["space"] = function (List__) {
				return (p538.bless([(new HashRef(array_to_hash(interpolate_array('str', List__[1], 'from', List__[2], 'to', add(List__[2], 1), 'bool', (p538.substr([List__[1], List__[2], 1]).match(/\s/) ? 1 : 0))))), 'Perlito5::Match']));
		};
		p538["is_newline"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(((function () {
	return (and((String.fromCharCode(10) == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and((String.fromCharCode(13) == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }));
				})())));
				return (v_MATCH);
		};
		p538["not_newline"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				var v_m2 = null;
				(v_m2 = p5cal(v_grammar, "is_newline", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
				if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
					((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
					return (1);
				}
				
				else {
					return (0);
				}
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = !( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'])));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()), function () { return (and(('' != p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["ident"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				var v_m2 = null;
				(v_m2 = p5cal(v_grammar, "digit", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
				if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
					((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
					return (1);
				}
				
				else {
					return (0);
				}
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = !( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'])));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()), function () { return ((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	var v_count = null;
	(v_count = 0);
	for ( ; (bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "word", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		(v_count = add(v_count, 1));
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return ((num(v_count) > 0));
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["full_ident"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	for ( ; (bool((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (((function () {
			return (and((and(('::' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }));
		})()));
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["namespace_before_ident"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				return (and(('::' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = ( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()); }), function () { return ((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	for ( ; (bool((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (((function () {
			return (and(and((and(('::' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_tmp = null;
	(v_tmp = v_MATCH);
	(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'to', (v_tmp || (v_tmp = new HashRef({})))._hash_['to'],'bool', 1]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = ((function () {
		var v_pos1 = null;
		(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		return (((function () {
				return (and(('::' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
			})()));
	})()));
	((v_tmp || (v_tmp = new HashRef({})))._hash_['bool'] = ( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
	(v_MATCH = v_tmp);
	return (( bool((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool']) ? 1 : 0));
})()); }));
		})()));
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["optional_namespace_before_ident"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(or(((function () {
	return (and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "namespace_before_ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['namespace_before_ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return (and(('::' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['namespace_before_ident'], "flat", []));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and((and(('::' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = 'main');
	return (1);
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(1, function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = '');
	return (1);
})()); })));
})()); }));
				})())));
				return (v_MATCH);
		};
		p538["pod_pod_begin"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(((function () {
	return (and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "is_newline", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return (and(('=cut' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 4])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(4, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	for ( ; (bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "not_newline", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and((and(('' != p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	for ( ; (bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "not_newline", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return (1);
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "pod_pod_begin", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); })));
})()); }));
				})())));
				return (v_MATCH);
		};
		p538["pod_begin"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(((function () {
	return (and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "is_newline", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return (and(('=end' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 4])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(4, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	for ( ; (bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "not_newline", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and((and(('' != p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	for ( ; (bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "not_newline", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return (1);
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "pod_begin", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); })));
})()); }));
				})())));
				return (v_MATCH);
		};
		p538["ws"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							var v_last_match_null = null;
							(v_last_match_null = 0);
							var v_last_pos = null;
							(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
							var v_count = null;
							(v_count = 0);
							for ( ; (bool((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(or(((function () {
	return (and((and(('#' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	for ( ; (bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "not_newline", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and(((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and((and((String.fromCharCode(10) == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	return (and((String.fromCharCode(13) == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and((and((String.fromCharCode(13) == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	return (and((String.fromCharCode(10) == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()); })));
})()); }));
})()), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p540, "here_doc", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and((and(('=' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(or(or(((function () {
	return (and((and(('pod' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 3])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(3, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "pod_pod_begin", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and((and(('head1' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 5])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(5, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "pod_pod_begin", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and((and(('begin' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 5])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(5, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "pod_begin", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and((and(('for' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 3])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(3, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "pod_begin", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); })));
})()); }));
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((1));
})()); }));
})()); })));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((((function () {
			var v_m2 = null;
			(v_m2 = p5cal(v_grammar, "space", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
			if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
				return (1);
			}
			
			else {
				return (0);
			}
		})())));
})()); }));
})()) && (num(v_last_match_null) < 2));  ) {
								if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
									(v_last_match_null = add(v_last_match_null, 1));
								}
								else {
									(v_last_match_null = 0);
								};
								(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
								(v_count = add(v_count, 1));
							};
							((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
							return ((num(v_count) > 0));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["opt_ws"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							var v_last_pos = null;
							(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
							if ( !( bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})())) ) {
								((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
							};
							return (1);
						})()));
				})())));
				return (v_MATCH);
		};
		p538["opt_ws2"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							var v_last_pos = null;
							(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
							if ( !( bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})())) ) {
								((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
							};
							return (1);
						})()));
				})())));
				return (v_MATCH);
		};
		p538["opt_ws3"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							var v_last_pos = null;
							(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
							if ( !( bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})())) ) {
								((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
							};
							return (1);
						})()));
				})())));
				return (v_MATCH);
		};
		p538["declarator"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(or(or(((function () {
	return (and(('my' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('state' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 5])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(5, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('our' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 3])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(3, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('local' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 5])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(5, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }));
				})())));
				return (v_MATCH);
		};
		p538["exp_stmts2"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "exp_stmts", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['exp_stmts'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['exp_stmts'], "flat", []));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["exp"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p535, "exp_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.exp_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.exp_parse'], "flat", []));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["exp2"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p535, "exp_parse", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.exp_parse'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.exp_parse'], "flat", []));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["opt_ident"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(((function () {
	return (and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['ident'], "flat", []));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(1, function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = 'postcircumfix:<( )>');
	return (1);
})()); })));
})()); }));
				})())));
				return (v_MATCH);
		};
		p538["opt_type"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(((function () {
	return (and(and(((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	return (and(('::' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "full_ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['full_ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['full_ident'], "flat", []));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(1, function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = '');
	return (1);
})()); })));
})()); }));
				})())));
				return (v_MATCH);
		};
		p538["var_sigil"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(or(or(or(((function () {
	return (and(('$' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('%' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('@' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('&' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('*' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }));
				})())));
				return (v_MATCH);
		};
		p538["var_name"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "full_ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['full_ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((((function () {
			var v_m2 = null;
			(v_m2 = p5cal(v_grammar, "digit", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
			if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['digit'] = v_m2);
				return (1);
			}
			
			else {
				return (0);
			}
		})())));
})()); }));
				})())));
				return (v_MATCH);
		};
		p538["var_ident"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "var_sigil", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['var_sigil'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "optional_namespace_before_ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['optional_namespace_before_ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "var_name", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['var_name'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p518, "new", ['sigil', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['var_sigil'], "flat", []),'namespace', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['optional_namespace_before_ident'], "flat", []),'name', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['var_name'], "flat", [])]));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["exponent"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(('e' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('E' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }));
})()), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(or(((function () {
	return (and(('+' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('-' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((1));
})()); }));
})()); }), function () { return ((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	var v_count = null;
	(v_count = 0);
	for ( ; (bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "digit", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		(v_count = add(v_count, 1));
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return ((num(v_count) > 0));
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["val_num"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(and((and(('.' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	var v_count = null;
	(v_count = 0);
	for ( ; (bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "digit", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		(v_count = add(v_count, 1));
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return ((num(v_count) > 0));
})()); }), function () { return ((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "exponent", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	var v_count = null;
	(v_count = 0);
	for ( ; (bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "digit", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		(v_count = add(v_count, 1));
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return ((num(v_count) > 0));
})()), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "exponent", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((and(and((and(('.' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })), function () { return ((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	var v_count = null;
	(v_count = 0);
	for ( ; (bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "digit", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		(v_count = add(v_count, 1));
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return ((num(v_count) > 0));
})()); }), function () { return ((function () {
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	if ( !( bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "exponent", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})())) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	};
	return (1);
})()); })));
})()); }));
})()); })));
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p513, "new", ['num', p5cal(v_MATCH, "flat", [])]));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["digits"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							var v_last_match_null = null;
							(v_last_match_null = 0);
							var v_last_pos = null;
							(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
							var v_count = null;
							(v_count = 0);
							for ( ; (bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "digit", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()) && (num(v_last_match_null) < 2));  ) {
								if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
									(v_last_match_null = add(v_last_match_null, 1));
								}
								else {
									(v_last_match_null = 0);
								};
								(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
								(v_count = add(v_count, 1));
							};
							((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
							return ((num(v_count) > 0));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["val_int"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	var v_count = null;
	(v_count = 0);
	for ( ; (bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "digit", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
		(v_count = add(v_count, 1));
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return ((num(v_count) > 0));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p512, "new", ['int', p5cal(v_MATCH, "flat", [])]));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		var List_PKG = [];
		p538["exp_stmts"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(((function () {
	p538.push([List_PKG, p532.v_PKG_NAME]);
	return (1);
})()), function () { return ((function () {
	var v_last_match_null = null;
	(v_last_match_null = 0);
	var v_last_pos = null;
	(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	for ( ; (bool((function () {
	var v_m2 = null;
	(v_m2 = p5cal(p535, "delimited_statement", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		if ( bool((v_MATCH)._hash_.hasOwnProperty('Perlito5::Expression.delimited_statement')) ) {
			p538.push([((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.delimited_statement'] || ((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.delimited_statement'] = new ArrayRef([])))._array_, v_m2]);
		}
		else {
			((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.delimited_statement'] = (new ArrayRef(interpolate_array(v_m2))));
		};
		return (1);
	}
	
	else {
		return (0);
	}
})()) && (num(v_last_match_null) < 2));  ) {
		if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
			(v_last_match_null = add(v_last_match_null, 1));
		}
		else {
			(v_last_match_null = 0);
		};
		(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
	return (1);
})()); }), function () { return ((function () {
	(p532.v_PKG_NAME = p538.pop([List_PKG]));
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = (new ArrayRef(interpolate_array(p5map(p538, function () {
	return (p5cal(p538["v__"], "capture", []));
}, ((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.delimited_statement'] || ((v_MATCH || (v_MATCH = new HashRef({})))._hash_['Perlito5::Expression.delimited_statement'] = new ArrayRef([])))._array_)))));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["args_sig"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							var v_last_match_null = null;
							(v_last_match_null = 0);
							var v_last_pos = null;
							(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
							for ( ; (bool((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(or(or(or(or(or(or(or(or(((function () {
	return (and((';' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and((String.fromCharCode(92) == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 2])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(2, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('[' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and((']' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('*' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('+' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('@' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('%' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('$' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return (((and(('&' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }))));
})()); }));
})()) && (num(v_last_match_null) < 2));  ) {
								if ( (num(v_last_pos) == num((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'])) ) {
									(v_last_match_null = add(v_last_match_null, 1));
								}
								else {
									(v_last_match_null = 0);
								};
								(v_last_pos = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
							};
							((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_last_pos);
							return (1);
						})()));
				})())));
				return (v_MATCH);
		};
		p538["prototype"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (or(((function () {
	return (and(and(and(and(and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return (and(('(' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "args_sig", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['args_sig'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and((')' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = ('' + p5str(p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['args_sig'], "flat", []))));
	return (1);
})()); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((((function () {
			((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = '*undef*');
			return (1);
		})())));
})()); }));
				})())));
				return (v_MATCH);
		};
		p538["anon_sub_def"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(and(and(and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "prototype", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['prototype'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('{' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "exp_stmts", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['exp_stmts'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(('}' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((((function () {
			p538.die(['Syntax Error in anon sub']);
			return (1);
		})())));
})()); }));
})()); }), function () { return ((function () {
	var v_sig = null;
	(v_sig = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['prototype'], "flat", []));
	if ( (v_sig == '*undef*') ) {
		(v_sig = null);
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p527, "new", ['name', null,'namespace', null,'sig', v_sig,'block', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['exp_stmts'], "flat", [])]));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
		p538["named_sub_def"] = function (List__) {
				var v_grammar = null;
				(v_grammar = List__[0]);
				var v_str = null;
				(v_str = List__[1]);
				var v_pos = null;
				(v_pos = List__[2]);
				var v_MATCH = null;
				(v_MATCH = p5cal(p510, "new", ['str', v_str,'from', v_pos,'to', v_pos,'bool', 1]));
				((v_MATCH || (v_MATCH = new HashRef({})))._hash_['bool'] = (((function () {
					var v_pos1 = null;
					(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
					return (((function () {
							return (and(and(and(and(and(and(and(and(((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "ident", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['ident'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "prototype", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['prototype'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return (and(('{' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); })); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "exp_stmts", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['exp_stmts'] = v_m2);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_m2 = null;
	(v_m2 = p5cal(v_grammar, "opt_ws", [v_str,(v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']]));
	if ( bool((v_m2 || (v_m2 = new HashRef({})))._hash_['bool']) ) {
		((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = (v_m2 || (v_m2 = new HashRef({})))._hash_['to']);
		return (1);
	}
	
	else {
		return (0);
	}
})()); }), function () { return ((function () {
	var v_pos1 = null;
	(v_pos1 = (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']);
	return (or(((function () {
	return (and(('}' == p538.substr([v_str, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'], 1])), function () { return (((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = add(1, (v_MATCH || (v_MATCH = new HashRef({})))._hash_['to']))); }));
})()), function () { return ((function () {
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['to'] = v_pos1);
	return ((((function () {
			p538.die(['Syntax Error in sub ' + String.fromCharCode(39), p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['ident'], "flat", []), String.fromCharCode(39)]);
			return (1);
		})())));
})()); }));
})()); }), function () { return ((function () {
	var v_name = null;
	(v_name = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['ident'], "flat", []));
	var v_sig = null;
	(v_sig = p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['prototype'], "flat", []));
	if ( (v_sig == '*undef*') ) {
		(v_sig = null);
	};
	var v_namespace = null;
	if ( bool(v_name) ) {
		(function () {
			if ( bool(v_namespace) ) {
				null;
			}
			else {
				(v_namespace = p532.v_PKG_NAME);
			};
			var v_full_name = null;
			(v_full_name = (p5str(v_namespace) + '::' + p5str(v_name)));
			if ( bool((p532.v_PROTO)._hash_.hasOwnProperty(v_full_name)) ) {
				p538.warn([('Subroutine ' + p5str(v_full_name) + ' redefined')]);
			};
			((p532.v_PROTO || (p532.v_PROTO = new HashRef({})))._hash_[v_full_name] = v_sig);
			})();
	};
	((v_MATCH || (v_MATCH = new HashRef({})))._hash_['capture'] = p5cal(p527, "new", ['name', v_name,'namespace', v_namespace,'sig', v_sig,'block', p5cal((v_MATCH || (v_MATCH = new HashRef({})))._hash_['exp_stmts'], "flat", [])]));
	return (1);
})()); }));
						})()));
				})())));
				return (v_MATCH);
		};
	})()
;
	// use Perlito5::Grammar
;
	// use Perlito5::Grammar::Control
;
	// use Perlito5::Precedence
;
	// use Perlito5::Expression
;
	(function () {
		// use v5
;
		// package Perlito5::AST::Apply
;
		var Hash_op = {};
		(Hash_op = array_to_hash(interpolate_array('infix:<+=>', 'infix:<+>', 'infix:<-=>', 'infix:<->', 'infix:<*=>', 'infix:<*>', 'infix:</=>', 'infix:</>', 'infix:<||=>', 'infix:<||>', 'infix:<&&=>', 'infix:<&&>', 'infix:<|=>', 'infix:<|>', 'infix:<&=>', 'infix:<&>', 'infix:<//=>', 'infix:<//>', 'infix:<.=>', 'list:<.>')));
		p521["op_assign"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_code = null;
				(v_code = (v_self || (v_self = new HashRef({})))._hash_['code']);
				if ( bool(p521.ref([v_code])) ) {
					throw(0);
				};
				if ( bool((Hash_op).hasOwnProperty(v_code)) ) {
					throw(p5cal(p521, "new", ['code', 'infix:<=>','arguments', (new ArrayRef(interpolate_array(((v_self || (v_self = new HashRef({})))._hash_['arguments'] || ((v_self || (v_self = new HashRef({})))._hash_['arguments'] = new ArrayRef([])))._array_[0], p5cal(p521, "new", ['code', Hash_op[v_code],'arguments', (v_self || (v_self = new HashRef({})))._hash_['arguments']]))))]));
				};
				throw(0)
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
		// package Perlito5::AST::Do
;
		p528["simplify"] = function (List__) {
			try {
				var v_self = null;
				(v_self = List__[0]);
				var v_block = null;
				if ( bool(p5cal((v_self || (v_self = new HashRef({})))._hash_['block'], "isa", ['Perlito5::AST::Lit::Block'])) ) {
					(v_block = p5cal((v_self || (v_self = new HashRef({})))._hash_['block'], "stmts", []));
				}
				else {
					(v_block = (new ArrayRef(interpolate_array((v_self || (v_self = new HashRef({})))._hash_['block']))));
				};
				if ( (num(p528.scalar([(v_block || (v_block = new ArrayRef([])))._array_])) == 1) ) {
					(function () {
						var v_stmt = null;
						(v_stmt = (v_block || (v_block = new ArrayRef([])))._array_[0]);
						if ( (bool(p5cal(v_stmt, "isa", ['Perlito5::AST::Apply'])) && (p5cal(v_stmt, "code", []) == 'circumfix:<( )>')) ) {
							(function () {
								var v_args = null;
								(v_args = p5cal(v_stmt, "arguments", []));
								throw(p5cal(p5cal(p528, "new", ['block', (v_args || (v_args = new ArrayRef([])))._array_[0]]), "simplify", []));
								})();
						};
						if ( bool(p5cal(v_stmt, "isa", ['Perlito5::AST::Do'])) ) {
							throw(p5cal(v_stmt, "simplify", []));
						};
						})();
				};
				throw(p5cal(p528, "new", ['block', v_block]))
			}
			catch(err) {
				if ( err instanceof Error ) {
					throw(err);
				}
				else {
					return(err);
				}
			}
		};
	})()
;
	// use Perlito5::Macro
;
	(function () {
		// package Perlito5::strict
;
		p530["import"] = function (List__) {
				return ((p532.v_STRICT = 1));
		};
		p530["unimport"] = function (List__) {
				return ((p532.v_STRICT = 0));
		};
		1;
	})()
;
	(function () {
		// package Perlito5::Runtime
;
		// use Perlito5::strict
;
		p541["_replace"] = function (List__) {
				var v_s = null;
				(v_s = p541.shift([List__]));
				var v_old = null;
				(v_old = p541.shift([List__]));
				var v_new = null;
				(v_new = p541.shift([List__]));
				var v_p = null;
				(v_p = p541.index([v_s, v_old]));
				return (( (num(v_p) >= 0) ? (p541.substr([v_s, 0, v_p]) + p5str(v_new) + p5str(p541._replace([p541.substr([v_s, add(v_p, p541.length([v_old]))]), v_old, v_new]))) : v_s));
		};
		p541["lisp_escape_string"] = function (List__) {
				var v_s = null;
				(v_s = p541.shift([List__]));
				return (p541._replace([v_s, String.fromCharCode(92), String.fromCharCode(92) + String.fromCharCode(92)]));
		};
		p541["to_go_namespace"] = function (List__) {
				var v_s = null;
				(v_s = p541.shift([List__]));
				return (p541._replace([v_s, '::', '__']));
		};
		(p532.v_SPECIAL_VAR = (new HashRef(array_to_hash(interpolate_array('$_', 'ARG', '$&', '$MATCH', '$`', '$PREMATCH', '$' + String.fromCharCode(39), '$POSTMATCH', '$+', '$LAST_PAREN_MATCH', '@+', '@LAST_MATCH_END', '%+', '%LAST_PAREN_MATCH', '@-', '@LAST_MATCH_START', '$|', 'autoflush', '$/', '$RS', '@_', '@ARG', '< $', '$EUID', '$.', '$NR', '< $< ', '$UID', '$(', '$GID', '$#', null, '$@', '$EVAL_ERROR', '$=', '$FORMAT_LINES_PER_PAGE', '$,', '$OFS', '$?', '$CHILD_ERROR', '$*', null, '$[', null, '$$', '$PID', '%-', null, '$~', '$FORMAT_NAME', '$-', '$FORMAT_LINES_LEFT', '$&', '$MATCH', '$%', '$FORMAT_PAGE_NUMBER', '$)', '$EGID', '$]', null, '$!', '$ERRNO', '$;', '$SUBSEP', '$' + String.fromCharCode(92), '$ORS', '%!', null, '$"', '$LIST_SEPARATOR', '$_', '$ARG', '$:', 'FORMAT_LINE_BREAK_CHARACTERS')))));
		(p532.v_STRICT = 0);
		(p532.v_CORE_PROTO = (new HashRef(array_to_hash(interpolate_array('CORE::shutdown', '*$', 'CORE::chop', null, 'CORE::lstat', '*', 'CORE::rename', '$$', 'CORE::lock', String.fromCharCode(92) + '$', 'CORE::rand', ';$', 'CORE::gmtime', ';$', 'CORE::gethostbyname', '$', 'CORE::each', String.fromCharCode(92) + '[@%]', 'CORE::ref', '_', 'CORE::syswrite', '*$;$$', 'CORE::msgctl', '$$$', 'CORE::getnetbyname', '$', 'CORE::write', ';*', 'CORE::alarm', '_', 'CORE::print', null, 'CORE::getnetent', '', 'CORE::semget', '$$$', 'CORE::use', null, 'CORE::abs', '_', 'CORE::break', '', 'CORE::undef', null, 'CORE::no', null, 'CORE::eval', null, 'CORE::split', null, 'CORE::localtime', ';$', 'CORE::sort', null, 'CORE::chown', '@', 'CORE::endpwent', '', 'CORE::getpwent', '', 'CORE::pos', null, 'CORE::lcfirst', '_', 'CORE::kill', '@', 'CORE::send', '*$$;$', 'CORE::endprotoent', '', 'CORE::semctl', '$$$$', 'CORE::waitpid', '$$', 'CORE::utime', '@', 'CORE::dbmclose', String.fromCharCode(92) + '%', 'CORE::getpwnam', '$', 'CORE::substr', '$$;$$', 'CORE::listen', '*$', 'CORE::getprotoent', '', 'CORE::shmget', '$$$', 'CORE::our', null, 'CORE::readlink', '_', 'CORE::shmwrite', '$$$$', 'CORE::times', '', 'CORE::package', null, 'CORE::map', null, 'CORE::join', '$@', 'CORE::rmdir', '_', 'CORE::shmread', '$$$$', 'CORE::uc', '_', 'CORE::bless', '$;$', 'CORE::closedir', '*', 'CORE::getppid', '', 'CORE::tie', null, 'CORE::readdir', '*', 'CORE::gethostent', '', 'CORE::getlogin', '', 'CORE::last', null, 'CORE::gethostbyaddr', '$$', 'CORE::accept', '**', 'CORE::log', '_', 'CORE::tell', ';*', 'CORE::readline', ';*', 'CORE::tied', null, 'CORE::socket', '*$$$', 'CORE::umask', ';$', 'CORE::sysread', '*' + String.fromCharCode(92) + '$$;$', 'CORE::syscall', '$@', 'CORE::quotemeta', '_', 'CORE::dump', '', 'CORE::opendir', '*$', 'CORE::untie', null, 'CORE::truncate', '$$', 'CORE::select', ';*', 'CORE::sleep', ';$', 'CORE::seek', '*$$', 'CORE::read', '*' + String.fromCharCode(92) + '$$;$', 'CORE::rewinddir', '*', 'CORE::scalar', null, 'CORE::wantarray', '', 'CORE::oct', '_', 'CORE::bind', '*$', 'CORE::stat', '*', 'CORE::sqrt', '_', 'CORE::getc', ';*', 'CORE::fileno', '*', 'CORE::getpeername', '*', 'CORE::sin', '_', 'CORE::getnetbyaddr', '$$', 'CORE::grep', null, 'CORE::setservent', '$', 'CORE::sub', null, 'CORE::shmctl', '$$$', 'CORE::study', null, 'CORE::msgrcv', '$$$$$', 'CORE::setsockopt', '*$$$', 'CORE::int', '_', 'CORE::pop', ';' + String.fromCharCode(92) + '@', 'CORE::link', '$$', 'CORE::exec', null, 'CORE::setpwent', '', 'CORE::mkdir', '_;$', 'CORE::sysseek', '*$$', 'CORE::endservent', '', 'CORE::chr', '_', 'CORE::when', null, 'CORE::getpwuid', '$', 'CORE::setprotoent', '$', 'CORE::reverse', '@', 'CORE::say', null, 'CORE::goto', null, 'CORE::getgrent', '', 'CORE::endnetent', '', 'CORE::hex', '_', 'CORE::binmode', '*;$', 'CORE::formline', '$@', 'CORE::getgrnam', '$', 'CORE::ucfirst', '_', 'CORE::chdir', ';$', 'CORE::setnetent', '$', 'CORE::splice', String.fromCharCode(92) + '@;$$@', 'CORE::unlink', '@', 'CORE::time', '', 'CORE::push', String.fromCharCode(92) + '@@', 'CORE::exit', ';$', 'CORE::endgrent', '', 'CORE::unshift', String.fromCharCode(92) + '@@', 'CORE::local', null, 'CORE::my', null, 'CORE::cos', '_', 'CORE::redo', null, 'CORE::warn', '@', 'CORE::getsockname', '*', 'CORE::pipe', '**', 'CORE::sprintf', '$@', 'CORE::open', '*;$@', 'CORE::setpgrp', ';$$', 'CORE::exp', '_', 'CORE::seekdir', '*$', 'CORE::getservbyport', '$$', 'CORE::given', null, 'CORE::pack', '$@', 'CORE::msgget', '$$', 'CORE::rindex', '$$;$', 'CORE::srand', ';$', 'CORE::telldir', '*', 'CORE::connect', '*$', 'CORE::getprotobyname', '$', 'CORE::msgsnd', '$$$', 'CORE::length', '_', 'CORE::state', null, 'CORE::die', '@', 'CORE::delete', null, 'CORE::getservent', '', 'CORE::getservbyname', '$$', 'CORE::setpriority', '$$$', 'CORE::lc', '_', 'CORE::fcntl', '*$$', 'CORE::chroot', '_', 'CORE::recv', '*' + String.fromCharCode(92) + '$$$', 'CORE::dbmopen', String.fromCharCode(92) + '%$$', 'CORE::socketpair', '**$$$', 'CORE::vec', '$$$', 'CORE::system', null, 'CORE::defined', null, 'CORE::index', '$$;$', 'CORE::caller', ';$', 'CORE::close', ';*', 'CORE::atan2', '$$', 'CORE::semop', '$$', 'CORE::unpack', '$;$', 'CORE::ord', '_', 'CORE::chmod', '@', 'CORE::prototype', null, 'CORE::getprotobynumber', '$', 'CORE::values', String.fromCharCode(92) + '[@%]', 'CORE::chomp', null, 'CORE::ioctl', '*$$', 'CORE::eof', ';*', 'CORE::crypt', '$$', 'CORE::do', null, 'CORE::flock', '*$', 'CORE::wait', '', 'CORE::sethostent', '$', 'CORE::return', null, 'CORE::getsockopt', '*$$', 'CORE::fork', '', 'CORE::require', null, 'CORE::format', null, 'CORE::readpipe', '_', 'CORE::endhostent', '', 'CORE::getpgrp', ';$', 'CORE::setgrent', '', 'CORE::keys', String.fromCharCode(92) + '[@%]', 'CORE::glob', null, 'CORE::getpriority', '$$', 'CORE::reset', ';$', 'CORE::sysopen', '*$$;$', 'CORE::continue', '', 'CORE::next', null, 'CORE::getgrgid', '$', 'CORE::default', null, 'CORE::shift', ';' + String.fromCharCode(92) + '@', 'CORE::symlink', '$$', 'CORE::exists', null, 'CORE::printf', null)))));
		1;
	})()
;
	// use Perlito5::Runtime
;
	p532["compile_p5_to_js"] = function (List__) {
			var v_s = null;
			(v_s = p532.shift([List__]));
			(p532.v_PKG_NAME = 'main');
			(p532.v_PROTO = (new HashRef(array_to_hash([]))));
			var v_ast = null;
			(v_ast = p5cal(p538, "exp_stmts", [v_s,0]));
			return (p511.emit_javascript_program([(new ArrayRef(interpolate_array(p5cal(p511, "new", ['name', 'main','body', p5cal(v_ast, "flat", [])]))))]));
	};
	1;
})()

