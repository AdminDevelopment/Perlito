TODO list for Perlito5

* basic functionality

-- add "map" block

-- add "grep", "sort"

-- add regexes

-- add "local", "our"


* extensibility

-- add "require"


* libraries

-- these should probably go into namespace Perlito5X::*

-- Test

-- Data::Dumper


* Parser

-- use "prefix + proto" to represent variables, because it is more flexible; remove 'Var'
   add_op( 'prefix',   '*',   $prec );  # typeglob

-- use an array to represent names that contain '::', because it is more flexible


* Perl5 backend

-- remove all CORE runtime (everything should work natively)


* Javascript backend

-- add node.js runtime

-- bug: negative index in array doesn't work

-- bug: packages currently create lexical blocks

-- bug: "my" variables are block-wide; this doesn't work as expected: my $v = $v

-- bug: variable aliases create copies instead

-- scalar references not implemented

-- generate more compact code; maybe use more subroutines instead of inlining

-- TODO move "CallSub" to last argument in order to get some more compatibility with native js

-- in the browser: implement "use" with XMLHttpRequest (what are the security implications?)


* Python backend

* Ruby backend

* Java backend


* Nice to Have

-- run the "perl" test suite

-- wantarray()

-- require plain perl5 syntax (any perl6 is a syntax error)

-- run perltidy on the source code

-- use the same error messages and warnings as 'perl'

-- __PACKAGE__,  __END__

-- BEGIN{}, INIT{}, END{}

-- finish "overload" implementation

-- source code - remove Perl 6 code such as "token"

-- much more!

