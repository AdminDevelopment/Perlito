TODO list for Perlito5

* basic functionality

-- add "map" block

-- add "grep", "sort"

-- add regexes

-- add "local", "our"


* extensibility

-- add "require"


* libraries

-- these should probably go into namespace Perlito5X::*

-- Test

-- Data::Dumper


* Parser

-- maybe use "prefix + proto" to represent variables, because it is more flexible; remove 'Var'

-- use an array to represent names that contain '::', because it is more flexible

-- implement signatures

-- check that \(@a) and \@a have different meanings

-- symbol variables like $]

-- here-docs


* Perl5 backend


* Javascript backend

-- wrap CODE.js and Runtime.js in perl code.
-- create target-specific versions of the runtime
-- add browser, v8, node.js runtimes

-- move "substr" and others to CORE
-- lvalue "substr"
-- subroutine signatures
-- array interpolation in argument lists

-- bug: negative index in array doesn't work

-- bug: packages currently create lexical blocks

-- bug: "my" variables are block-wide; this doesn't work as expected: my $v = $v
   possible fix: rename variables

-- bug: variable aliases create copies instead

-- generate more compact code; maybe use more subroutines instead of inlining;
   autovivification is probably the most verbose part of the code.

-- in the browser: implement "use" with XMLHttpRequest (what are the security implications?)

-- add symbol tables for scalar, array and hash
-- implement "our", "local"

-- string increment and string ranges

-- finish "overload" implementation


* Python backend

* Ruby backend

* Java backend


* Nice to Have

-- run the "perl" test suite

-- wantarray()

-- import

-- require plain perl5 syntax (any perl6 is a syntax error)

-- run perltidy on the source code

-- proper "use strict" and "use warnings"
-- use the same error messages and warnings as 'perl'

-- __PACKAGE__,  __END__, __LINE__, __DATA__

-- BEGIN{}, INIT{}, END{}

-- source code - remove Perl 6 code such as "token"
   (fixed: This is only loaded if the grammar compiler is needed)

